mse version:		2.1.2
game:				magic
short name:			Dossier
full name:			Ravnica Showcase
icon:				card_sample.png
position hint:		095
#Nonstandard text font; 
version:			2024-05-20
depends on:
	package:			magic.mse-game
	version:			2014-06-25
depends on:
	package:			magic-watermarks.mse-include
	version:			2007-09-23
depends on:
	package:			magic-mana-large.mse-symbol-font
	version:			2007-09-23
depends on:
	package:			magic-mana-small.mse-symbol-font
	version:			2007-09-23
depends on:
	package:			magic-mana-ravnica-dossier.mse-symbol-font
	version:			2024-01-24
depends on:
	package:			magic-modules.mse-include
	version:			2024-05-20
depends on:
	package:			magic-mainframe-extras.mse-include
	version:			2007-09-23

card width:			375
card height:		523
card dpi:			150

### blanks by GenevensiS
### code by GenevensiS

############################################################## Extra scripts

init script:
	swap_fonts_pt_default :=
	[
		name: {"Beleren Bold"},
		size: {15.0},
		color: {"black"},
		vertical: {0},
		italic: {"Beleren Bold"}
	]
	
	swap_fonts_body_default :=
	[
		name: {"Secretary Typewriter"},
		size: {12.0},
		color: {"black"},
		vertical: {0},
		italic: {"Secretary Typewriter"}
	]
	
	swap_fonts_type_default :=
	[
		name: {"Beleren Bold"},
		size: {13.0},
		color: { "black" },
		vertical: {0},
		italic: {""}
	]
	
	swap_fonts_name_default :=
	[
		name: {"Beleren Bold"},
		size: {14.5},
		color: { "black" },
		vertical: {0},
		italic: {""}
	]
	
	template_prefix :=
	[
		card:			"card/",
		crown:			"crown/",
		identity:		"/magic-modules.mse-include/indicators/"
	]
	template_suffix :=
	[
		card:			"card.png",
		crown:			"crown.png",
		identity:		"identity.png"
	]
	template := { template_prefix[type] + input + template_suffix[type] }
	land_template := { template_prefix[type] + (if input == "a" then "c" else input) + template_suffix[type] }
	
	card_background := { color_background(input: card.card_color, type: "card",			base_hybrid: card_hybrid)}@(offset: 0)
	card_crown := { color_background(input: card.card_color, type: "crown",		base_hybrid: card_hybrid)}@(offset: 0)
	
	has_identity := { styling.color_indicator_dot }
	has_identity_2 := { false }
	
	is_promo := { styling.promo }
	
	is_unsorted := { styling.remove_from_autocount }
	
	is_crowned := { styling.legend_crown == "yes" or (styling.legend_crown == "if legendary" and lang_setting("is_legendary")(card.super_type)) }
	
	chop_top := { split := split_comma(styling.chop_text_box); if length(split) > 0 and split.0 != "" then clamp(split.0, maximum: 800, minimum: -800) else 0 }
	chop_bot := { split := split_comma(styling.chop_text_box); if length(split) > 1 and split.1 != "" then clamp(split.1, maximum: 800, minimum: -800) else 0 }
	
	popout_left := { split := split_comma(styling.popout_image_coordinates); if length(split) > 3 and split.0 != "" then clamp(split.0, maximum: 800, minimum: -300) else 0 }
	popout_top := { split := split_comma(styling.popout_image_coordinates); if length(split) > 3 and split.1 != "" then clamp(split.1, maximum: 1000, minimum: -300) else 0 }
	popout_width := { split := split_comma(styling.popout_image_coordinates); if length(split) > 3 and split.2 != "" then clamp(split.2, maximum: 800, minimum: 0) else 0 }
	popout_height := { split := split_comma(styling.popout_image_coordinates); if length(split) > 3 and split.3 != "" then clamp(split.3, maximum: 1000, minimum: 0) else 0 }
	
	rarity_right :=	{ split := split_comma(styling.rarity_offsets); (if length(split) > 0 and split.0 != "" then clamp(split.0, minimum: -500, maximum: 500) else 0) +	344 }
	rarity_top :=	{ split := split_comma(styling.rarity_offsets); (if length(split) > 1 and split.1 != "" then clamp(split.1, minimum: -500, maximum: 500) else 0) +	295 }
	rarity_size :=	{ split := split_comma(styling.rarity_offsets); (if length(split) > 2 and split.2 != "" then clamp(split.2, minimum: -26, maximum: 100) else 0) +	26 }
	rarity_left :=	{ rarity_right() - rarity_size() }

############################################################## Extra style options

styling field:
	type:			text
	name:			popout image coordinates
	description:	The coordinates for the popout image field, formatted as "left,top,width,height". Used to make the illustration jump in front of the frame.
styling field:
	type:			boolean
	name:			stretch image to whole card
	description:	Make the image span the whole card instead of just the visible part. Use this to help make popout effects.
	initial:		no
styling field:
	type:			choice
	name:			legend crown
	description:	Use the legend crown?
	choice:			yes
	choice:			if legendary
	choice:			no
	initial:		if legendary

include file: /magic-modules.mse-include/texts/styling_fields

include file: /magic-modules.mse-include/rarities/styling_fields

include file: /magic-modules.mse-include/indicators/styling_fields

include file: /magic-modules.mse-include/watermarks/styling_fields

styling field:
	type:			package choice
	name:			overlay
	description:	Should there be an overlay applied, such as foil?
	match:			magic-overlay-*.mse-include
	required:		false

include file: /magic-modules.mse-include/information/styling_fields

styling field:
	type:			package choice
	name:			casting cost mana symbols
	description:	Mana symbols used for casting cost, name, banner, fuse and transformation reminder.
	match:			magic-mana-*.mse-symbol-font
	initial:		magic-mana-ravnica-dossier.mse-symbol-font
styling field:
	type:			package choice
	name:			text box mana symbols
	description:	Mana symbols used inside rule text.
	match:			magic-mana-*.mse-symbol-font
	initial:		magic-mana-small.mse-symbol-font
styling field:
	type:			boolean
	name:			use ancestral mana symbols
	description:	Enables ancestral's modified generic mana.
	initial:		no
styling field:
	type:			boolean
	name:			use guild mana symbols
	description:	Use the Ravnica guild symbols instead of the official half/half circles for hybrid mana.
	initial:		no
styling field:
	type:			choice
	name:			tap symbol
	description:	What tap and untap symbols should be used on cards?
	choice:			modern
	choice:			old
	choice:			diagonal T
	initial:		modern
styling style:
	use ancestral mana symbols:
		choice images:
			yes:				/magic-modules.mse-include/symbol-fonts/generic_ancestral.png
			no:					/magic-modules.mse-include/symbol-fonts/generic_normal.png
	use guild mana symbols:
		choice images:
			yes:				/magic-modules.mse-include/symbol-fonts/hybrid_guild.png
			no:					/magic-modules.mse-include/symbol-fonts/hybrid_normal.png
	tap symbol:
		render style:	both
		choice images:
			modern:				/magic-modules.mse-include/symbol-fonts/tap_new.png
			old:				/magic-modules.mse-include/symbol-fonts/tap_old.png
			diagonal T:			/magic-modules.mse-include/symbol-fonts/tap_older.png

include file: /magic-modules.mse-include/fonts/styling_fields

############################################################## Card fields

include file: /magic-modules.mse-include/information/card_fields

include file: /magic-modules.mse-include/stamps/card_fields

include file: /magic-modules.mse-include/corners/card_fields

include file: /magic-modules.mse-include/watermarks/card_fields

include file: /magic-modules.mse-include/separators/card_fields

card style:
	############################# Background stuff
	border color:
		left:				0
		top:				0
		width:				{ stylesheet.card_width }
		height:				{ stylesheet.card_height }
		z index:			100
		mask:				border_mask.png
	card color:
		left:				0
		top:				0
		width:				{ stylesheet.card_width }
		height:				{ stylesheet.card_height }
		z index:			210
		popup style:		in place
		render style:		image
		image:				{ card_background() }
		mask:				{ if is_crowned() then "card_crown_mask.png" else "card_mask.png" }
	############################# Name line
	name:
		left:				31
		top:				{ 23 + name_font_vertical() }
		right:				{ 343 - (if card_style.casting_cost.content_width == 0 then 0 else card_style.casting_cost.content_width + 4) }
		height:				27
		angle:				-1
		z index:			1000
		alignment:			middle left shrink-overflow
		font:
			name:				{ name_font() }
			italic name:		{ name_font_italic() }
			size:				{ name_font_size() }
			scale down to:		8
			color:				{ name_font_color() }
	casting cost:
		right:				335
		top:				32
		width:				110
		height:				26
		angle:				-1
		z index:			1010
		alignment:			middle right
		always symbol:		true
		font:
			name:				MPlantin
			size:				15
			color:				white
		symbol font:
			name:				{ styling.casting_cost_mana_symbols }
			size:				15
	############################# Image
	image:
		left:				{ if styling.stretch_image_to_whole_card then 0							else 19 }
		top:				{ if styling.stretch_image_to_whole_card then 0							else 67 }
		width:				{ if styling.stretch_image_to_whole_card then stylesheet.card_width		else 330 }
		height:				{ if styling.stretch_image_to_whole_card then stylesheet.card_height	else 216 }
		z index:			0
	mainframe image:
		left:				{ popout_left() }
		top:				{ popout_top() }
		width:				{ popout_width() }
		height:				{ popout_height() }
		z index:			1010
	############################# Card type
	indicator:
		left:				29
		top:				303
		width:				17
		height:				17
		angle:				0.65
		z index:			1000
		render style:		image
		visible:			{ has_identity() }
		image:				{ card_identity() }
	type:
		left:				{ if has_identity() then 52 else 31 }
		top:				{ 296 + type_font_vertical() }
		right:				{ if set.shorten_types_for_rarity then clamp(rarity_left()-5, minimum: 180, maximum: 343) else 343 }
		height:				28
		angle:				0.65
		z index:			1000
		alignment:			middle left shrink-overflow
		font:
			name:				{ type_font() }
			italic name:		{ type_font_italic() }
			size:				{ type_font_size() }
			scale down to:		8
			color:				{ type_font_color() }
			separator color:	red
	rarity:
		right:				{ rarity_right() }
		top:				{ rarity_top() }
		width:				{ rarity_size() }
		height:				{ rarity_size() }
		angle:				0.65
		z index:			1010
		alignment:			middle right
		render style:		image
		include file:		/magic-modules.mse-include/rarities/choice_images
	############################# Text box
	text:
		left:				33
		top:				{ 330 + chop_top() + body_font_vertical() }
		right:				341
		bottom:				{ 475 - chop_bot() }
		z index:			900
		line height hard:	{ if is_modal(card.rule_text) then 0.9 else 1.2 }
		line height line:	1.5
		line height soft:	0.9
		line height hard max:	{ if is_modal(card.rule_text) then 1.0 else 1.3 }
		line height line max:	1.6
		alignment:
			script:
				if (styling.center_text == "short text only" and
				   not contains(match:"\n", card.rule_text) and
				   card.flavor_text == "<i-flavor></i-flavor>" and
				   card_style.text.content_lines <= 2) or
				   styling.center_text == "always"
				then "middle center"
				else "middle left"
		font:
			name:				{ body_font() }
			italic name:		{ body_font_italic() }
			size:				{ body_font_size() }
			scale down to:		6
			color:				{ body_font_color() }
			weight:				bold
		symbol font:
			name:				{ styling.text_box_mana_symbols }
			size:				{ body_font_size() }
			scale down to:		6
	############################# PT
	pt:
		left:				299
		top:				{ 466 + pt_font_vertical() }
		width:				45
		height:				23
		angle:				2.8
		z index:			900
		alignment:			center middle shrink-overflow
		font:
			name:				{ pt_font() }
			size:				{ pt_font_size() }
			color:				{ pt_font_color() }
			separator color:	red

############################################################## Extra card fields

extra card field:
	type:				choice
	name:				crown
	script:				card.card_color
	editable:			false
	save value:			false
	show statistics:	false
extra card field:
	type:				choice
	name:				pt box
	editable:			false
	save value:			false
	show statistics:	false
	choice:				pt box
extra card field:
	type:				choice
	name:				card stamp rim
	editable:			false
	save value:			false
	show statistics:	false
	choice:				card stamp rim
extra card field:
	type:				color
	name:				card stamp border
	script:				card.border_color
	editable:			false
	save value:			false
	show statistics:	false
extra card field:
	type:				choice
	name:				foil layer
	editable:			false
	save value:			false
	show statistics:	false
	choice:				foil layer

extra card style:
	crown:
		left:				0
		top:				0
		width:				{ stylesheet.card_width }
		height:				{ stylesheet.card_height }
		z index:			310
		visible:			{ is_crowned() }
		render style:		image
		image:				{ card_crown() }
	pt box:
		left:				0
		top:				0
		width:				{ stylesheet.card_width }
		height:				{ stylesheet.card_height }
		z index:			810
		visible:			{ card.pt != "" }
		render style:		image
		image:				pt.png
	card stamp rim:
		left:				0
		top:				0
		width:				{ stylesheet.card_width }
		height:				{ stylesheet.card_height }
		z index:			610
		visible:			{ is_stamped() }
		render style:		image
		image:				stamp_rim.png
	card stamp border:
		left:				0
		top:				0
		width:				{ stylesheet.card_width }
		height:				{ stylesheet.card_height }
		z index:			600
		visible:			{ is_stamped() }
		mask:				border_stamp_mask.png
	foil layer:
		left:				0
		top:				0
		width:				{ stylesheet.card_width }
		height:				{ stylesheet.card_height }
		z index:			1050
		visible:			{ styling.overlay != "none" and styling.overlay != "" }
		render style:		image
		image:				{ if styling.overlay == "" then "" else styling.overlay + "/overlay.png" }
		mask:				{ "foil_mask" + (if is_stamped() then "_rare" else "") + (if card.pt != "" then "_pt" else "") + (if is_crowned() then "_crown" else "") + ".png" }
