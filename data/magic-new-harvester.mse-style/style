mse version: 2.0.0
game: magic
short name: Modern Harvesters
full name: Cards-as-Lands
icon: card-sample.png
installer group: magic/new style/harvester cards
position hint: 280

version: 2024-05-29
depends on:
	package: magic.mse-game
	version: 2008-06-02
depends on:
	package: magic-default-image.mse-include
	version: 2007-09-23
depends on:
	package: magic-modules.mse-include
	version: 2024-10-01
depends on:
	package: magic-mana-large.mse-symbol-font
	version: 2007-09-23
depends on:
	package: magic-mana-small.mse-symbol-font
	version: 2007-09-23

card width: 375
card height: 523
card dpi: 150
############################################################## Extra scripts
init script:
	# Load scripts for image box
	include file: /magic-default-image.mse-include/scripts
	
	# Should hybrids have a grey name?
	mask_hybrid_with_land := { styling.grey_hybrid_name }
	
	#Should multicolor lands with basic land types have a colored name?
	mask_multi_land_with_color := { styling.colored_multicolor_land_name }
	
	# Which artifact template should be used?  Which multicolor template should be used?
	template      := { input + "{type}.jpg" }
	land_template := { (if input == "a" then "c" else input) + "l{type}.jpg" }
	# Use land templates for previews because they show more contrast
	hybrid_previews := "land,hybrid"
	
	# Use the normal tap symbol
	mana_t := {
		if      styling.tap_symbol == "old"        then "old"
		else if styling.tap_symbol == "diagonal T" then "older"
		else                                            "new"
	}
	
	# Use guild mana symbols?
	guild_mana := { styling.use_guild_mana_symbols }
	
	# Does the harvest ability produce multiple mana?
	multi_mana := { not ( card.loyalty == "" or card.loyalty == "0" or card.loyalty == "1" ) }
	
	# Does the harvest ability produce only one color of mana?
	colored_mana := { is_white() or is_blue() or is_black() or is_red() or is_green() }
	
	# Does the harvest ability produce more than one color of mana?
	hybrid_mana := { contains(card.card_color_2, match:"hybrid") or contains(card.card_color_2, match:"multicolor") }
	
	# Does the harvest ability produce white mana?
	has_white := { contains(card.card_color_2, match:"white") }
	
	# Does the harvest ability produce blue mana?
	has_blue := { contains(card.card_color_2, match:"blue") }
	
	# Does the harvest ability produce black mana?
	has_black := { contains(card.card_color_2, match:"black") }
	
	# Does the harvest ability produce red mana?
	has_red := { contains(card.card_color_2, match:"red") }
	
	# Does the harvest ability produce green mana?
	has_green := { contains(card.card_color_2, match:"green") }
	
	# Does the harvest ability produce only white mana?
	is_white := { card.card_color_2 == "white" }
	
	# Does the harvest ability produce only blue mana?
	is_blue := { card.card_color_2 == "blue" }
	
	# Does the harvest ability produce only black mana?
	is_black := { card.card_color_2 == "black" }
	
	# Does the harvest ability produce only red mana?
	is_red := { card.card_color_2 == "red" }
	
	# Does the harvest ability produce only green mana?
	is_green := { card.card_color_2 == "green" }
	watermark_include := "/magic-modules.mse-include/watermarks"
############################################################## Set info fields
set info style:
	symbol:
		variation:
			name: invertedcommon
			border radius: 0.10
			fill type: solid
			fill color:   rgb(255,255,255)
			border color: rgb(0,0,0)
############################################################## Extra style options
styling field:
	type: boolean
	name: grey hybrid name
	description: Use a grey background for the name and type line on hybrid cards. This is done on real cards.
styling field:
	type: boolean
	name: colored multicolor land name
	description: Use a colored background for the name and type on multicolor land cards with a basic land type. This is done on real cards.
styling field:
	type: boolean
	name: use guild mana symbols
	description: Use the Ravnica guild symbols instead of the official half/half circles for hybrid mana.
	initial: no
styling field:
	type: choice
	name: tap symbol
	description: What tap and untap symbols should be used on cards?
	initial: modern
	choice: modern
	choice: old
	choice: diagonal T
styling field:
	type: package choice
	name: text box mana symbols
	match: magic-mana-*.mse-symbol-font
	initial: magic-mana-small.mse-symbol-font
styling field:
	type: choice
	name: center text
	description: When to center text (short text only means only on one-line cards with no flavor text)
	choice: always
	choice: short text only
	choice: never
	initial: never
styling field:
	type: boolean
	name: inverted common symbol
	description: Should the common rarity symbol be inverted, like in Coldsnap?
	initial: no
styling field:
	type: boolean
	name: upside down watermark
	description: Should the watermark be upside down?
	initial: yes
styling field:
	type: boolean
	name: divider
	description: Should there be a divider to separate the regular text from the upside down text?
	initial: no
styling field:
	type: package choice
	name: overlay
	description: Should there be an overlay applied, such as foil?
	match: magic-overlay-*.mse-include
	required: false
styling field:
	type: choice
	name: image size
	description: Should the art extend into a transparent textbox?
	initial: standard
	choice: standard
	choice: extended
styling style:
	use guild mana symbols:
		choice images:
			yes: /magic-mana-small.mse-symbol-font/mana_guild_rg.png
			no:  /magic-mana-small.mse-symbol-font/mana_rg.png
	tap symbol:
		render style: both
		choice images:
			modern:     /magic-mana-large.mse-symbol-font/mana_t.png
			old:        /magic-mana-large.mse-symbol-font/mana_t_old.png
			diagonal T: /magic-mana-large.mse-symbol-font/mana_t_older.png
	center text:
		render style: both
		choice images:
			always:          /magic.mse-game/icons/center-all-text.png
			short text only: /magic.mse-game/icons/center-short-text.png
			never:           /magic.mse-game/icons/center-no-text.png
	inverted common symbol:
		choice images:
			no:  { symbol_variation(symbol: set.symbol, variation: "common") }
			yes: { symbol_variation(symbol: set.symbol, variation: "invertedcommon") }
	image size:
		render style: both
		choice images:
			standard: /magic.mse-game/icons/small-image.png
			extended: /magic.mse-game/icons/large-image.png
############################################################## Card fields
include file: /magic-modules.mse-include/corners/card_fields
include file: /magic-modules.mse-include/information/the_list_old
card style:
	############################# Background stuff
	border color:
		left: 0
		top : 0
		width:	375
		height:	523
		left width:   17
		right width:  17
		top width:    17
		bottom width: 18
		z index: 5
	card color:
		left:	0
		top:	0
		width:	375
		height:	523
		z index: 0
		render style: image
		popup style: in place
		image: { card_background() }
	############################# Name line
	card color 2:
		left: 24
		top: 29
		height: 25
		width: 25
		z index: 2
		render style: image
		image:
			script:
				if colored_mana() and multi_mana() then (
					if is_white() then "mana_nw.png"
					else if is_blue() then "mana_nu.png"
					else if is_black() then "mana_nb.png"
					else if is_red() then "mana_nr.png"
					else if is_green() then "mana_ng.png"
					else "/magic-mana-small.mse-symbol-font/mana_circle.png"
				) else if hybrid_mana() then (
					if has_white() and has_blue() then "/magic-mana-small.mse-symbol-font/mana_wu.png"
					else if has_white() and has_black() then "/magic-mana-small.mse-symbol-font/mana_wb.png"
					else if has_blue() and has_black() then "/magic-mana-small.mse-symbol-font/mana_ub.png"
					else if has_blue() and has_red() then "/magic-mana-small.mse-symbol-font/mana_ur.png"
					else if has_black() and has_red() then "/magic-mana-small.mse-symbol-font/mana_br.png"
					else if has_black() and has_green() then "/magic-mana-small.mse-symbol-font/mana_bg.png"
					else if has_red() and has_green() then "/magic-mana-small.mse-symbol-font/mana_rg.png"
					else if has_red() and has_white() then "/magic-mana-small.mse-symbol-font/mana_rw.png"
					else if has_green() and has_white() then "/magic-mana-small.mse-symbol-font/mana_gw.png"
					else if has_green() and has_blue() then "/magic-mana-small.mse-symbol-font/mana_gu.png"
					else "/magic-mana-small.mse-symbol-font/mana_circle.png"
				) else if colored_mana() then (
					if is_white() then "/magic-mana-small.mse-symbol-font/mana_w.png"
					else if is_blue() then "/magic-mana-small.mse-symbol-font/mana_u.png"
					else if is_black() then "/magic-mana-small.mse-symbol-font/mana_b.png"
					else if is_red() then "/magic-mana-small.mse-symbol-font/mana_r.png"
					else if is_green() then "/magic-mana-small.mse-symbol-font/mana_g.png"
					else "/magic-mana_small.mse-symbol-font/mana_circle.png"
				) else "/magic-mana-small.mse-symbol-font/mana_circle.png"
	name:
		left: { if card.card_symbol=="none" then 60 else 76 }
		top : 30
		right:  { 341 - card_style.casting_cost.content_width }
		height: 23
		alignment: bottom shrink-overflow
		padding bottom: 0
		z index: 1
		font:
			name: Matrix
			size: 17
			weight: bold
			color: rgb(0,0,0)
	casting cost:
		right: 343
		top : 31
		width: { max(30, card_style.casting_cost.content_width) + 5 }
		height: 23
		alignment: middle right
		font:
			name: MPlantin
			size: 15
		symbol font:
			name: magic-mana-large
			size: 15
			alignment: middle right
		always symbol: true
		z index: 2
		padding top: 0
	card symbol:
		left: {if card.card_symbol=="none" then 0 else 55}
		top : 31
		height: 21
		width: 23
		z index: 5
		render style: image
		image:				{ card_symbol_image(face: 1) }
	loyalty:
		left: { if colored_mana() or not multi_mana() then 28 else 33 }
		top:  { if colored_mana() or not multi_mana() then 32 else 37 }
		height: 9
		width:  9
		z index: 3
		visible: { multi_mana() }
		alignment: middle center
		font:
			name: MPlantin
			size: { if colored_mana() then 10 else 22 }
			color: black
			max stretch: 0.5
	############################# Image
	image:
		left:	32
		top:	62
		width:	311
		height:	{ if styling.image_size == "extended" then 408 else 228 }
		z index: 1
		mask:
			script: if styling.image_size == "extended" then "imagemask_extended.png" else "imagemask_standard.png"
		default: {default_image(card.card_color)}
	############################# Card type
	type:
		left: 35
		top : 298
		width: { 308 - max(22,card_style.rarity.content_width) }
		height: 20
		alignment: top shrink-overflow
		z index: 1
		padding top: 2
		font:
			name: Matrix
			size: 14
			color: rgb(0,0,0)
			separator color: rgb(128,128,128)
	rarity:
		right: 342
		top : 297
		width: 44
		height: 22
		z index: 2
		render style: image
		alignment: middle right
		include file: /magic-modules.mse-include/rarities/choice_images
	############################# Text box
	text:
		left: 31
		top : 328
		width: 311
		height:
			script:
				if card.rule_text_2 == "" then 142
				else ( 142 - card_style.rule_text_2.content_height - 5 )
		font:
			name: MPlantin
			italic name: MPlantin-Italic
			size: 14
			scale down to: 6
			color: rgb(0,0,0)
		symbol font:
			name: { styling.text_box_mana_symbols }
			size: 14
		alignment:
			script:
				if (styling.center_text == "short text only" and
				   not contains(match:"\n", card.rule_text) and
				   card.flavor_text == "<i-flavor></i-flavor>" and
				   card_style.text.content_lines <= 2) or
				   styling.center_text == "always"
				then "middle center"
				else "middle left"
		z index: 2
		padding left:   6
		padding right:  4
		line height hard: 1.2
		line height line: 1.5
		line height soft: 0.9
		line height hard max: 1.3
		line height line max: 1.6
	watermark:
		left: { if styling.upside_down_watermark then 255 else 117 }
		top: { if styling.upside_down_watermark then 477 else 321 }
		width: 138
		height: 156
		angle: { if styling.upside_down_watermark then 180 else 0 }
		z index: 1
		render style: image
		alignment: middle center
		include file:	/magic.mse-game/watermarks/menu_choice_images
		image:			{ watermark_image_1() }
	rule text 2:
		left: 342
		top: 465
		width: 311
		height: { max(20, card_style.rule_text_2.content_height) }
		angle: 180
		font:
			name: MPlantin
			italic name: MPlantin-Italic
			size: 14
			scale down to: 14
			color: rgb(0,0,0)
		symbol font:
			name: { styling.text_box_mana_symbols }
			size: 14
		alignment: top left
		z index: 2
		padding left:   6
		padding right:  4
		line height hard: 1.2
		line height line: 1.5
		line height soft: 0.9
		line height hard max: 1.3
		line height line max: 1.6
	############################# PT
	pt:
		z index: 2
		left:	284
		top:	466
		width:	60
		height:	28
		alignment: center middle shrink-overflow
		font:
			name: ModMatrix
			size: 17
			weight: bold
			color: rgb(0,0,0)
			separator color: rgb(200,0,0)
	############################# Card sorting / numbering
	############################# Copyright stuff
	illustrator:
		left: 56
		top : 478
		width: 217
		height: 16
		z index: 1
		font:
			name: Matrix
			size: 10
			weight: bold
			color: { font_color(card.card_color) }
	copyright line:
		left: 30
		top : 493
		width: 247
		height: 12
		z index: 1
		font:
			name: MPlantin
			size: 6.5
			color: { font_color(card.card_color) }
############################################################## Extra card fields
extra card field:
	type: choice
	name: pt box
	script: card.card_color
	editable: false
	save value: false
extra card field:
	type: choice
	name: foil layer
	choice: foil
	save value: false
	editable: false
extra card field:
	type: choice
	name: mana circle
	choice: circle
	save value: false
	editable: false
extra card field:
	type: choice
	name: divider
	save value: false
	editable: false
	choice: divider
extra card style:
	pt box:
		left:	271
		top:	461
		width:	81
		height:	42
		z index: 1
		mask: ptmask.png
		visible: { card.pt != "" }
		render style: image
		image: { card_ptbox() }
	foil layer:
		left: 0
		top : 0
		width: 375
		height: 523
		z index: 1050
		render style: image
		image: {if styling.overlay == "" then nil else styling.overlay + "/overlay.png"}
	mana circle:
		left: 21
		top: 26
		height: 31
		width: 31
		z index: 1
		render style: image
		image: circle.png
	divider:
		left: 46
		top: { 454 - card_style.rule_text_2.content_height }
		width: 281
		height: 6
		render style: image
		visible: { styling.divider }
		image: divider.png
