############# Localization Hub
############# Strings and Word Lists specific to supported languages
languages := [
	English: [
		code              : "en",
		spellcheck_code   : "en_US",
		fallback          : "English",
		pt_separator      : "/",
		type_separator    : " — ",
		subtype_separator : " ",
		is_battle         : match@(match: "(?i)Battle")
		is_creature       : match@(match: "(?i)Creature")
		is_dungeon        : match@(match: "(?i)Dungeon")
		is_tribal         : match@(match: "(?i)Tribal|Kindred")
		is_kindred        : match@(match: "(?i)Tribal|Kindred")
		is_artifact       : match@(match: "(?i)Artifact")
		is_land           : match@(match: "(?i)Land")
		is_enchantment    : match@(match: "(?i)Enchantment")
		is_spell          : match@(match: "(?i)Instant|Sorcery")
		is_instant        : match@(match: "(?i)Instant")
		is_sorcery        : match@(match: "(?i)Sorcery")
		is_planeswalker   : match@(match: "(?i)Planeswalker")
		is_plane		  : match@(match: "(?i)Plane(?!swalker)")
		is_nonstandard    : match@(match: "(?i)(Token|Emblem|Dungeon|Hero|Conspiracy|Vanguard|Scheme|Phenomenon|Plane\\b)")
		is_token          : match@(match: "(?i)Token")
		is_basic          : match@(match: "(?i)Basic")
		is_conspiracy     : match@(match: "(?i)Conspiracy")
		is_emblem         : match@(match: "(?i)Emblem")
		is_hero           : match@(match: "(?i)Hero")
		is_phenomenon     : match@(match: "(?i)Phenomenon")
		is_scheme         : match@(match: "(?i)Scheme")
		is_vanguard       : match@(match: "(?i)Vanguard")
		is_legendary      : match@(match: "(?i)Legendary")
		is_snow           : match@(match: "(?i)Snow")
		is_vehicle        : match@(match: "(?i)Vehicle")
		is_elite          : match@(match: "(?i)Elite")
		is_host           : match@(match: "(?i)Host")
		is_ongoing        : match@(match: "(?i)Ongoing")
		is_world          : match@(match: "(?i)World")
		is_plains         : match@(match: "(?i)Plains")
		is_island         : match@(match: "(?i)Island")
		is_swamp          : match@(match: "(?i)Swamp")
		is_mountain       : match@(match: "(?i)Mountain")
		is_forest         : match@(match: "(?i)Forest")
		is_wastes         : match@(match: "(?i)Wastes")
		is_saga				: match@(match: "(?i)Saga")
		is_class			: match@(match: "(?i)Class")
		is_nyx				: match@(match: "(?i)Enchantment ")
		is_lesson			: match@(match: "(?i)Lesson")
		is_miracle			: match@(input: keyword_usage(), match: "(?i)Miracle")
		is_mutate			: match@(input: keyword_usage(), match: "(?i)Mutate")
		is_devoid			: match@(input: keyword_usage(), match: "(?i)Devoid")
		get_supertypes    : filter_text@(match: "(?i)(Legendary|Basic|Snow|Token|World|Ongoing|Elite|Host)\\b ?")
		remove_supertypes : replace_text@(match: "(?i)(Legendary|Basic|Snow|Token|World|Ongoing|Elite|Host)\\b ?", replace:"")
		base_supertypes   : "Legendary|Basic|Snow|Token|World|Ongoing|Elite|Host"
		mana_symbol_production	: filter_text@(match:"<sym[^>]*>[^<]+<\\/sym[^>]*>", 					in_context:"\\b[Aa]dd [^(\n|^).]*<match>")
		gold_mana_production 	: filter_text@(match:"(any( one)?|different|combination of) color",		in_context:"\\b[Aa]dd [^(\n|^).]*<match>")
		chosen_mana_production	: filter_text@(match:"that color|chosen color", 						in_context:"\\b[Aa]dd [^(\n|^).]*<match>")

		word_list		  : "word_list",
		word_list_artifact:
			"Attraction,"
			+ "Blood,"
			+ "Clue,"
			+ "Contraption,"
			+ "Equipment,"
			+ "Food,"
			+ "Fortification,"
			+ "Gold,"
			+ "Incubator,"
			+ "Junk,"
			+ "Map,"
			+ "Powerstone,"
			+ "Treasure,"
			+ "Vehicle"
		word_list_battle: "Siege"
		word_list_dungeon: "Undercity"
		word_list_land: 
			"Cave,"
			+ "Desert,"
			+ "Gate,"
			+ "Lair,"
			+ "Locus,"
			+ "Mine,"
			+ "Power-Plant,"
			+ "Sphere,"
			+ "Tower,"
			+ "Urza's"
		word_list_enchantment:
			"Aura,"
			+ "Background,"
			+ "Cartouche,"
			+ "Class,"
			+ "Curse,"
			+ "Role,"
			+ "Rune,"
			+ "Saga,"
			+ "Shard,"
			+ "Shrine"
		word_list_spell:
			"Adventure,"
			+ "Arcane,"
			+ "Lesson,"
			+ "Trap"
		word_list_planeswalker:
			"Ajani,"
			+ "Aminatou,"
			+ "Angrath,"
			+ "Arlinn,"
			+ "Ashiok,"
			+ "Bahamut,"
			+ "Basri,"
			+ "Bolas,"
			+ "Calix,"
			+ "Chandra,"
			+ "Comet,"
			+ "Dack,"
			+ "Dakkon,"
			+ "Daretti,"
			+ "Davriel,"
			+ "Dihada,"
			+ "Domri,"
			+ "Dovin,"
			+ "Ellywick,"
			+ "Elminister,"
			+ "Elspeth,"
			+ "Estrid,"
			+ "Freyalise,"
			+ "Garruk,"
			+ "Gideon,"
			+ "Grist,"
			+ "Guff,"
			+ "Huatli,"
			+ "Jace,"
			+ "Jared,"
			+ "Jaya,"
			+ "Jeska,"
			+ "Kaito,"
			+ "Karn,"
			+ "Kasmina,"
			+ "Kaya,"
			+ "Kiora,"
			+ "Koth,"
			+ "Liliana,"
			+ "Lolth,"
			+ "Lukka,"
			+ "Minsc,"
			+ "Mordenkainen,"
			+ "Nahiri,"
			+ "Narset,"
			+ "Niko,"
			+ "Nissa,"
			+ "Nixilis,"
			+ "Oko,"
			+ "Quintorius,"
			+ "Ral,"
			+ "Rowan,"
			+ "Saheeli,"
			+ "Samut,"
			+ "Sarkhan,"
			+ "Serra,"
			+ "Sivitri,"
			+ "Sorin,"
			+ "Szat,"
			+ "Tamiyo,"
			+ "Tasha,"
			+ "Teferi,"
			+ "Teyo,"
			+ "Tezzeret,"
			+ "Tibalt,"
			+ "Tyvar,"
			+ "Ugin,"
			+ "Urza,"
			+ "Venser,"
			+ "Vivien,"
			+ "Vraska,"
			+ "Vronos,"
			+ "Will,"
			+ "Windgrace,"
			+ "Wrenn,"
			+ "Xenagos,"
			+ "Yanggu,"
			+ "Yanling,"
			+ "Zariel"

############# Very Long Word Lists
############# Split into array of strings for submenus
############# Used directly by the localized word_lists
############# Combined for the upgraded stats page

		word_lists_basic: ["Plains", "Island", "Swamp", "Mountain", "Forest"]
		word_lists_race: [
			  "Aetherborn,"
			+ "Alien,"
			+ "Angel,"
			+ "Antelope,"
			+ "Ape,"
			+ "Archon,"
			+ "Assembly-Worker,"
			+ "Astartes,"
			+ "Atog,"
			+ "Aurochs,"
			+ "Avatar,"
			+ "Azra",

			  "Badger,"
			+ "Balloon,"
			+ "Basilisk,"
			+ "Bat,"
			+ "Bear,"
			+ "Beast,"
			+ "Beeble,"
			+ "Beholder,"
			+ "Bird,"
			+ "Blinkmoth,"
			+ "Boar,"
			+ "Bringer,"
			+ "Brushwagg",

			  "C'tan,"
			+ "Camarid,"
			+ "Camel,"
			+ "Capybara,"
			+ "Caribou,"
			+ "Carrier,"
			+ "Cat,"
			+ "Centaur,"
			+ "Cephalid,"
			+ "Chimera,"
			+ "Cockatrice,"
			+ "Construct,"
			+ "Crab,"
			+ "Crocodile,"
			+ "Custodes,"
			+ "Cyberman,"
			+ "Cyclops",

			  "Dalek,"
			+ "Dauthi,"
			+ "Demigod,"
			+ "Demon,"
			+ "Devil,"
			+ "Dinosaur,"
			+ "Djinn,"
			+ "Dog,"
			+ "Dragon,"
			+ "Drake,"
			+ "Dreadnought,"
			+ "Drone,"
			+ "Dryad,"
			+ "Dwarf",

			  "Efreet,"
			+ "Egg,"
			+ "Eldrazi,"
			+ "Elemental,"
			+ "Elephant,"
			+ "Elf,"
			+ "Elk,"
			+ "Eye",

			  "Faerie,"
			+ "Ferret,"
			+ "Fish,"
			+ "Fox,"
			+ "Fractal,"
			+ "Frog,"
			+ "Fungus",

			  "Gargoyle,"
			+ "Germ,"
			+ "Giant,"
			+ "Gith,"
			+ "Gnoll,"
			+ "Gnome,"
			+ "Goat,"
			+ "Goblin,"
			+ "God,"
			+ "Golem,"
			+ "Gorgon,"
			+ "Graveborn,"
			+ "Gremlin,"
			+ "Griffin",

			  "Hag,"
			+ "Halfling,"
			+ "Hamster,"
			+ "Harpy,"
			+ "Hellion,"
			+ "Hippo,"
			+ "Hippogriff,"
			+ "Homarid,"
			+ "Homunculus,"
			+ "Horror,"
			+ "Horse,"
			+ "Hound,"
			+ "Human,"
			+ "Hydra,"
			+ "Hyena",

			  "Illusion,"
			+ "Imp,"
			+ "Incarnation,"
			+ "Inkling,"
			+ "Insect",

			  "Jackal,"
			+ "Jellyfish,"
			+ "Juggernaut",

			  "Kavu,"
			+ "Kirin,"
			+ "Kithkin,"
			+ "Kobold,"
			+ "Kor,"
			+ "Kraken",

			  "Lamia,"
			+ "Lammasu,"
			+ "Leech,"
			+ "Leviathan,"
			+ "Lhurgoyf,"
			+ "Licid,"
			+ "Lizard,"
			+ "Llama",

			  "Manticore,"
			+ "Masticore,"
			+ "Merfolk,"
			+ "Metathran,"
			+ "Minotaur,"
			+ "Mite,"
			+ "Mole,"
			+ "Mongoose,"
			+ "Monkey,"
			+ "Moonfolk,"
			+ "Mouse,"
			+ "Mutant,"
			+ "Myr",

			  "Nautilus,"
			+ "Necron,"
			+ "Nephilim,"
			+ "Nightmare,"
			+ "Nightstalker,"
			+ "Noggle,"
			+ "Nymph",

			  "Octopus,"
			+ "Ogre,"
			+ "Ooze,"
			+ "Orb,"
			+ "Orc,"
			+ "Orgg,"
			+ "Otter,"
			+ "Ouphe,"
			+ "Ox,"
			+ "Oyster",

			  "Pangolin,"
			+ "Pegasus,"
			+ "Pentavite,"
			+ "Pest,"
			+ "Phelddagrif,"
			+ "Phoenix,"
			+ "Phyrexian,"
			+ "Pincher,"
			+ "Plant,"
			+ "Prism",

			  "Rabbit,"
			+ "Raccoon,"
			+ "Rat,"
			+ "Reflection,"
			+ "Rhino,"
			+ "Robot",

			  "Sable,"
			+ "Salamander,"
			+ "Sand,"
			+ "Saproling,"
			+ "Satyr,"
			+ "Scarecrow,"
			+ "Scorpion,"
			+ "Sculpture,"
			+ "Serpent,"
			+ "Servo,"
			+ "Shade,"
			+ "Shapeshifter,"
			+ "Shark,"
			+ "Sheep,"
			+ "Siren,"
			+ "Skeleton,"
			+ "Slith,"
			+ "Sliver,"
			+ "Slug",

			  "Snail,"
			+ "Snake,"
			+ "Soltari,"
			+ "Spawn,"
			+ "Specter,"
			+ "Sphinx,"
			+ "Spider,"
			+ "Spike,"
			+ "Spirit,"
			+ "Splinter,"
			+ "Sponge,"
			+ "Squid,"
			+ "Squirrel,"
			+ "Starfish,"
			+ "Surrakar",

			  "Tentacle,"
			+ "Tetravite,"
			+ "Thalakos,"
			+ "Thopter,"
			+ "Thrull,"
			+ "Tiefling,"
			+ "Time Lord,"
			+ "Treefolk,"
			+ "Trilobite,"
			+ "Triskelavite,"
			+ "Troll,"
			+ "Turtle,"
			+ "Tyranid",

			  "Unicorn",

			  "Vampire,"
			+ "Vedalken,"
			+ "Viashino,"
			+ "Volver",

			  "Wall,"
			+ "Walrus,"
			+ "Weird,"
			+ "Werewolf,"
			+ "Whale,"
			+ "Wolf,"
			+ "Wolverine,"
			+ "Wombat,"
			+ "Worm,"
			+ "Wraith,"
			+ "Wurm",

			  "Yeti",

			  "Zombie,"
			+ "Zubera"
		]

		word_lists_class: [
			  "Advisor,"
			+ "Ally,"
			+ "Archer,"
			+ "Archon,"
			+ "Army,"
			+ "Artificer,"
			+ "Assassin,"
			+ "Barbarian,"
			+ "Bard,"
			+ "Beast,"
			+ "Berserker,"
			+ "Carrier,"
			+ "Child,"
			+ "Citizen,"
			+ "Cleric,"
			+ "Clown,"
			+ "Coward",

			  "Deserter,"
			+ "Detective,"
			+ "Doctor,"
			+ "Dreadnought,"
			+ "Drone,"
			+ "Druid,"
			+ "Egg,"
			+ "Elder,"
			+ "Employee,"
			+ "Flagbearer,"
			+ "Gamer,"
			+ "Guest,"
			+ "Horror,"
			+ "Incarnation,"
			+ "Inquisitor,"
			+ "Juggernaut,"
			+ "Knight",

			  "Leviathan,"
			+ "Mercenary,"
			+ "Minion,"
			+ "Monger,"
			+ "Monk,"
			+ "Mutant,"
			+ "Mystic,"
			+ "Ninja,"
			+ "Noble,"
			+ "Nomad,"
			+ "Peasant,"
			+ "Performer,"
			+ "Pilot,"
			+ "Pirate,"
			+ "Praetor,"
			+ "Primarch,"
			+ "Processor",

			  "Ranger,"
			+ "Rebel,"
			+ "Reflection,"
			+ "Rigger,"
			+ "Rogue,"
			+ "Samurai,"
			+ "Scientist,"
			+ "Scion,"
			+ "Scout,"
			+ "Serf,"
			+ "Shaman,"
			+ "Skeleton,"
			+ "Soldier,"
			+ "Spawn,"
			+ "Spellshaper,"
			+ "Spirit,"
			+ "Survivor",

			  "Thopter,"
			+ "Vampire,"
			+ "Warlock,"
			+ "Warrior,"
			+ "Werewolf,"
			+ "Wizard,"
			+ "Zombie"
		]

		word_lists_plane: [
			  "Alara,"
			+ "Amonkhet,"
			+ "Arcavios,"
			+ "Bloomburrow,"
			+ "Capenna,"
			+ "Dominaria,"
			+ "Duskmourn,"
			+ "Eldraine,"
			+ "Ikoria,"
			+ "Innistrad,"
			+ "Ixalan,"
			+ "Kaladesh,"
			+ "Kaldheim,"
			+ "Kamigawa,"
			+ "Lorwyn,"
			+ "Mercadia,"
			+ "Mirrodin,"
			+ "New Phyrexia,"
			+ "Rath,"
			+ "Ravnica,"
			+ "Shadowmoor,"
			+ "Tarkir,"
			+ "Theros,"
			+ "Thunder Junction,"
			+ "Ulgrotha,"
			+ "Zendikar",
			
			"The Abyss,"
			+ "Antausia,"
			+ "Arkhos,"
			+ "Azgol,"
			+ "Belenon,"
			+ "Bolas's Meditation Realm,"
			+ "Cridhe,"
			+ "Echoir,"
			+ "Equilor,"
			+ "Ergamon,"
			+ "Fabacin,"
			+ "Fiora,"
			+ "Gargantikar,"
			+ "Gobakhan,"
			+ "Iquatana,"
			+ "Ir,"
			+ "Karsus,"
			+ "Kephalai,"
			+ "Kinshala,"
			+ "Kolbahan,"
			+ "Kylem,"
			+ "Kyneth,"
			+ "Luvion,"
			+ "Moag,"
			+ "Mongseng,"
			+ "Muraganda,"
			+ "Phyrexia,"
			+ "Pyrulea,"
			+ "Rabiah,"
			+ "Regatha,"
			+ "Segovia,"
			+ "Serra's Realm,"
			+ "Shandalar,"
			+ "Shenmeng,"
			+ "Valla,"
			+ "Vryn,"
			+ "Wildfire,"
			+ "Xerex,"
			+ "Zhalfir",
			
			"Alkabah,"
			+ "Aranzhur,"
			+ "Diraden,"
			+ "Kodisha,"
			+ "Metal Island,"
			+ "Skalla,"
			+ "Tavelia,"
			+ "Tolvada",
			
			"Azoria,"
			+ "Cabralin,"
			+ "Celesta,"
			+ "Gastal,"
			+ "Ilcae,"
			+ "Mirrankkar,"
			+ "Nether Void,"
			+ "Obsidias,"
			+ "Torwynn,"
			+ "Vatraquaz",
			
			"Alfava Metraxis,"
			+ "Androzani Minor,"
			+ "Apalapucia,"
			+ "The Dalek Asylum,"
			+ "Darillium,"
			+ "Earth,"
			+ "Gallifrey,"
			+ "Horsehead Nebula,"
			+ "Kandoka,"
			+ "The Library,"
			+ "Mars,"
			+ "Moon,"
			+ "Necros,"
			+ "New Earth,"
			+ "Outside Mutter's Spiral,"
			+ "Skaro,"
			+ "Spacecraft,"
			+ "Time,"
			+ "Trenzalore,"
			+ "Unknown Planet"
		]

	],
	"English (British)": [
		code              : "en",
		spellcheck_code   : "en_GB",
		fallback          : "English",
		pt_separator      : "/",
		type_separator    : " — ",
		subtype_separator : " ",
		is_creature       : match@(match: "(?i)Creature")
		is_tribal         : match@(match: "(?i)Tribal")
		is_artifact       : match@(match: "(?i)Artifact")
		is_land           : match@(match: "(?i)Land")
		is_enchantment    : match@(match: "(?i)Enchantment")
		is_spell          : match@(match: "(?i)Instant|Sorcery")
		is_planeswalkish   : match@(match: "(?i)Planeswalker|Emblem")
		is_plane		  : match@(match: "(?i)Plane(?!swalker)")
		word_list		  : "word_list"
	],
	"English (Canadian)": [
		code              : "en",
		spellcheck_code   : "en_CA",
		fallback          : "English",
		pt_separator      : "/",
		type_separator    : " — ",
		subtype_separator : " ",
		is_creature       : match@(match: "(?i)Creature")
		is_tribal         : match@(match: "(?i)Tribal")
		is_artifact       : match@(match: "(?i)Artifact")
		is_land           : match@(match: "(?i)Land")
		is_enchantment    : match@(match: "(?i)Enchantment")
		is_spell          : match@(match: "(?i)Instant|Sorcery")
		is_planeswalkish   : match@(match: "(?i)Planeswalker|Emblem")
		is_plane		  : match@(match: "(?i)Plane(?!swalker)")
		word_list		  : "word_list"
	],
	Russian: [
		code              : "ru",
		spellcheck_code   : "ru_RU",
		fallback          : "English",
		pt_separator      : "/",
		type_separator    : " — ",
		subtype_separator : " ",
		keyword_types		: ["старый", "ядро", "экспертный", "псевдо", "действие", "персонализированный"]
		is_creature			: match@(match: "(?i)Существо")
		is_tribal			: match@(match: "(?i)Племенное")
		is_artifact			: match@(match: "(?i)Артефакт")
		is_land				: match@(match: "(?i)Земля")
		is_enchantment		: match@(match: "(?i)Чары")
		is_spell			: match@(match: "(?i)Мгновенное заклинание|Волшебство")
		is_instant			: match@(match: "(?i)Мгновенное заклинание")
		is_sorcery			: match@(match: "(?i)Волшебство")
		is_planeswalker		: match@(match: "(?i)Planeswalker|Emblem")
		is_plane			: match@(match: "(?i)Plane(?!swalker)")
		is_dungeon			: match@(match: "(?i)Подземелье")
		is_battle			: match@(match: "(?i)Битва")
		is_saga				: match@(match: "(?i)Сага")
		is_class			: match@(match: "(?i)Класс")
		is_conspiracy		: match@(match: "(?i)Заговор")
		is_legendary		: match@(match: "(?i)Легендарн")
		is_snow				: match@(match: "(?i)Снежн")
		is_basic			: match@(match: "(?i)Базовая")
		is_token			: match@(match: "(?i)фишк")
		is_plains			: match@(match: "(?i)Равнина")
		is_island			: match@(match: "(?i)Остров")
		is_swamp			: match@(match: "(?i)Болото")
		is_mountain			: match@(match: "(?i)Гора")
		is_forest			: match@(match: "(?i)Лес")
		is_nyx				: match@(match: "(?i)Чары ")
		is_vehicle			: match@(match: "(?i)Машина")
		is_lesson			: match@(match: "(?i)Урок")
		is_miracle			: match@(input: keyword_usage(), match: "(?i)Чудо")
		is_mutate			: match@(input: keyword_usage(), match: "(?i)Мутация")
		is_devoid			: match@(input: keyword_usage(), match: "(?i)Лишение")
		word_list		  : "word_list_ru"
	],
	Italiano: [
		code              : "it",
		spellcheck_code   : "it_IT",
		fallback          : "English",
		pt_separator      : "/",
		type_separator    : " — ",
		subtype_separator : " ",
		keyword_types		: ["vecchio", "nucleo", "esperto", "pseudo", "azione", "personalizzato"]
		is_creature			: match@(match: "(?i)Creatura")
		is_tribal			: match@(match: "(?i)Tribale")
		is_artifact			: match@(match: "(?i)Artefatto")
		is_land				: match@(match: "(?i)Terra")
		is_enchantment		: match@(match: "(?i)Incantesimo")
		is_spell			: match@(match: "(?i)Istantaneo|Stregoneria")
		is_instant			: match@(match: "(?i)Istantaneo")
		is_sorcery			: match@(match: "(?i)Stregoneria")
		is_planeswalker		: match@(match: "(?i)Planeswalker|Emblem")
		is_plane			: match@(match: "(?i)Plane(?!swalker)")
		is_dungeon			: match@(match: "(?i)Dungeon")
		is_battle			: match@(match: "(?i)Battaglia")
		is_saga				: match@(match: "(?i)Saga")
		is_class			: match@(match: "(?i)Classe")
		is_conspiracy		: match@(match: "(?i)Cospirazione")
		is_legendary		: match@(match: "(?i)Leggendari")
		is_snow				: match@(match: "(?i) Neve")
		is_basic			: match@(match: "(?i)Base")
		is_token			: match@(match: "(?i)Pedin")
		is_plains			: match@(match: "(?i)Pianura")
		is_island			: match@(match: "(?i)Isola")
		is_swamp			: match@(match: "(?i)Palude")
		is_mountain			: match@(match: "(?i)Montagna")
		is_forest			: match@(match: "(?i)Foresta")
		is_nyx				: match@(match: "(?i) Incantesimo")
		is_vehicle			: match@(match: "(?i)Veicolo")
		is_lesson			: match@(match: "(?i)Lezione")
		is_miracle			: match@(input: keyword_usage(), match: "(?i)Miracolo")
		is_mutate			: match@(input: keyword_usage(), match: "(?i)Mutazione")
		is_devoid			: match@(input: keyword_usage(), match: "(?i)Vacuità")
		word_list		  : "word_list_it"
	],
	Español: [
		code				: "es",
		spellcheck_code		: "es_ES",
		fallback          : "English",
		pt_separator		: "/",
		type_separator		: " — ",
		subtype_separator	: " ",
		keyword_types		: ["viejo", "núcleo", "experto", "seudo", "acción", "personalizado"]
		is_creature			: match@(match: "(?i)Criatura")
		is_tribal			: match@(match: "(?i)Tribal")
		is_artifact			: match@(match: "(?i)Artefacto")
		is_land				: match@(match: "(?i)Tierra")
		is_enchantment		: match@(match: "(?i)Encantamiento")
		is_spell			: match@(match: "(?i)Instantáneo|Conjuro")
		is_instant			: match@(match: "(?i)Instantáneo")
		is_sorcery			: match@(match: "(?i)Sorcery")
		is_planeswalker		: match@(match: "(?i)Planeswalker")
		is_plane			: match@(match: "(?i)Plano")
		is_dungeon			: match@(match: "(?i)Mazmorra")
		is_battle			: match@(match: "(?i)Batalla")
		is_saga				: match@(match: "(?i)Saga")
		is_class			: match@(match: "(?i)Clase")
		is_conspiracy		: match@(match: "(?i)Conspiración")
		is_legendary		: match@(match: "(?i)Legendari")
		is_snow				: match@(match: "(?i)nevad")
		is_basic			: match@(match: "(?i)básica")
		is_token			: match@(match: "(?i)Ficha ")
		is_plains			: match@(match: "(?i)Llanura")
		is_island			: match@(match: "(?i)Isla")
		is_swamp			: match@(match: "(?i)Pantano")
		is_mountain			: match@(match: "(?i)Montaña")
		is_forest			: match@(match: "(?i)Bosque")
		is_nyx				: match@(match: "(?i) encantamiento")
		is_vehicle			: match@(match: "(?i)Vehículo")
		is_lesson			: match@(match: "(?i)Lección")
		is_miracle			: match@(input: keyword_usage(), match: "(?i)Milagro")
		is_mutate			: match@(input: keyword_usage(), match: "(?i)Mutación")
		is_devoid			: match@(input: keyword_usage(), match: "(?i)Vacío")
		word_list			: "word_list_es"
	]
	"Português do Brasil" : [
		code              : "pt-br",
		spellcheck_code   : "pt_BR",
		fallback          : "English",
		pt_separator      : "/",
		type_separator    : " — ",
		subtype_separator : " ",
		keyword_types		: ["velho", "núcleo", "perito", "pseudo", "ação", "personalizado"]
		is_creature			: match@(match: "(?i)Criatura")
		is_tribal			: match@(match: "(?i)Tribal")
		is_artifact			: match@(match: "(?i)Artefato")
		is_land				: match@(match: "(?i)Terreno")
		is_enchantment		: match@(match: "(?i)Encantamento")
		is_spell			: match@(match: "(?i)Mágica Instantânea|Feitiço")
		is_instant			: match@(match: "(?i)Mágica Instantânea")
		is_sorcery			: match@(match: "(?i)Feitiço")
		is_planeswalker		: match@(match: "(?i)Planeswalker|Emblem")
		is_plane			: match@(match: "(?i)Plane(?!swalker)")
		is_dungeon			: match@(match: "(?i)Masmorra")
		is_battle			: match@(match: "(?i)Batalha")
		is_saga				: match@(match: "(?i)Saga")
		is_class			: match@(match: "(?i)Classe")
		is_conspiracy		: match@(match: "(?i)Conspiração")
		is_legendary		: match@(match: "(?i)Lendári")
		is_snow				: match@(match: "(?i)da Neve")
		is_basic			: match@(match: "(?i)Básico")
		is_token			: match@(match: "(?i)Ficha")
		is_plains			: match@(match: "(?i)Planície")
		is_island			: match@(match: "(?i)Ilha")
		is_swamp			: match@(match: "(?i)Pântano")
		is_mountain			: match@(match: "(?i)Montanha")
		is_forest			: match@(match: "(?i)Floresta")
		is_nyx				: match@(match: "(?i) Encantamento")
		is_vehicle			: match@(match: "(?i)Veículo")
		is_lesson			: match@(match: "(?i)Lição")
		is_miracle			: match@(input: keyword_usage(), match: "(?i)Milagre")
		is_mutate			: match@(input: keyword_usage(), match: "(?i)Mutação")
		is_devoid			: match@(input: keyword_usage(), match: "(?i)Desprovido")
		word_list		  : "word_list_pt"
	],
	Français: [
		code              : "fr",
		spellcheck_code   : "fr_FR",
		fallback          : "English",
		pt_separator      : "/",
		type_separator    : " : "
		subtype_separator : "<atom-sep> et </atom-sep>",
		keyword_types		: ["vieux", "noyau", "expert", "pseudo", "action", "personnalisé"]
		is_creature			: match@(match: "(?i)Creature|Créature")
		is_tribal			: match@(match: "(?i)Tribal")
		is_artifact			: match@(match: "(?i)Artefact")
		is_land				: match@(match: "(?i)Terrain")
		is_enchantment		: match@(match: "(?i)Enchantement")
		is_spell			: match@(match: "(?i)Éphémère|Rituel")
		is_instant			: match@(match: "(?i)Éphémère")
		is_sorcery			: match@(match: "(?i)Rituel")
		is_planeswalker		: match@(match: "(?i)Planeswalker|Emblème")
		is_plane			: match@(match: "(?i)Plane(?!swalker)")
		is_dungeon			: match@(match: "(?i)Donjon")
		is_battle			: match@(match: "(?i)Bataille")
		is_saga				: match@(match: "(?i)Saga")
		is_class			: match@(match: "(?i)Classe")
		is_conspiracy		: match@(match: "(?i)Conspiration")
		is_legendary		: match@(match: "(?i)Légendaire")
		is_snow				: match@(match: "(?i)neigeu|enneigé")
		is_basic			: match@(match: "(?i)de base")
		is_token			: match@(match: "(?i)Jeton")
		is_plains			: match@(match: "(?i)Plaine")
		is_island			: match@(match: "(?i)Île")
		is_swamp			: match@(match: "(?i)Marais")
		is_mountain			: match@(match: "(?i)Montagne")
		is_forest			: match@(match: "(?i)Forêt")
		is_nyx				: match@(match: "(?i)-enchantement")
		is_vehicle			: match@(match: "(?i)véhicule")
		is_lesson			: match@(match: "(?i)leçon")
		is_miracle			: match@(input: keyword_usage(), match: "(?i)Miracle")
		is_mutate			: match@(input: keyword_usage(), match: "(?i)Mutation")
		is_devoid			: match@(input: keyword_usage(), match: "(?i)Carence")
		word_list		  : "word_list",
		word_lists_basic: ["Plaine", "Île", "Marais", "Montagne", "Forêt"]
		word_list_artifact:
			"Attraction,"
			+ "Sang,"
			+ "Indice,"
			+ "Appareil,"
			+ "Équipement,"
			+ "Nourriture,"
			+ "Fortification,"
			+ "Or,"
			+ "Incubateur,"
			+ "Lithoforce,"
			+ "Trésor,"
			+ "Véhicule"
		word_list_land: 
			"Grotte,"
			+ "Désert,"
			+ "Porte,"
			+ "Repaire,"
			+ "Site,"
			+ "Mine,"
			+ "Centrale énergétique,"
			+ "Sphère,"
			+ "Tour,"
			+ "D'urza"
	]
	Deutsch: [
		code				: "de",
		spellcheck_code		: "de_DE",
		fallback          : "English",
		pt_separator		: "/",
		type_separator		: " — ",
		subtype_separator	: " ",
		keyword_types		: ["alt", "Kern", "Experte", "Pseudo", "Aktion", "personalisiert"]
		is_creature			: match@(match: "(?i)Kreatur")
		is_tribal			: match@(match: "(?i)Stammes")
		is_artifact			: match@(match: "(?i)Artefakt")
		is_land				: match@(match: "(?i)Land")
		is_enchantment		: match@(match: "(?i)Verzauberung")
		is_spell			: match@(match: "(?i)Spontanzauber|Hexerei")
		is_instant			: match@(match: "(?i)Spontanzauber")
		is_sorcery			: match@(match: "(?i)Hexerei")
		is_planeswalker		: match@(match: "(?i)Planeswalker")
		is_plane			: match@(match: "(?i)Welt")
		is_dungeon			: match@(match: "(?i)Gewölbe")
		is_battle			: match@(match: "(?i)Schlacht")
		is_saga				: match@(match: "(?i)Sage")
		is_class			: match@(match: "(?i)Klasse")
		is_conspiracy		: match@(match: "(?i)Verschwörung")
		is_legendary		: match@(match: "(?i)Legendäre")
		is_snow				: match@(match: "(?i)Verschneit")
		is_basic			: match@(match: "(?i)Standard")
		is_token			: match@(match: "(?i)Spielstein")
		is_plains			: match@(match: "(?i)Ebene")
		is_island			: match@(match: "(?i)Insel")
		is_swamp			: match@(match: "(?i)Sumpf")
		is_mountain			: match@(match: "(?i)Gebirge")
		is_forest			: match@(match: "(?i)Wald")
		is_nyx				: match@(match: "(?i)Verzauberungs")
		is_vehicle			: match@(match: "(?i)Fahrzeug")
		is_lesson			: match@(match: "(?i)Lektion")
		is_miracle			: match@(input: keyword_usage(), match: "(?i)Mirakulum")
		is_mutate			: match@(input: keyword_usage(), match: "(?i)Mutation")
		is_devoid			: match@(input: keyword_usage(), match: "(?i)Fahl")
		word_list			: "word_list_de"
	]
	한국어: [
		code				: "ko",
		spellcheck_code		: "ko_KO",
		fallback          : "English",
		pt_separator		: "/",
		type_separator		: " — ",
		subtype_separator	: " ",
		keyword_types		: ["늙은", "핵심", "숙련된", "가짜", "행동", "맞춤형"]
		is_creature			: match@(match: "(?i)생물")
		is_tribal			: match@(match: "(?i)종족")
		is_artifact			: match@(match: "(?i)마법물체")
		is_land				: match@(match: "(?i)대지")
		is_enchantment		: match@(match: "(?i)부여마법")
		is_spell			: match@(match: "(?i)순간마법|집중마법")
		is_instant			: match@(match: "(?i)순간마법")
		is_sorcery			: match@(match: "(?i)집중마법")
		is_planeswalker		: match@(match: "(?i)플레인즈워커")
		is_plane			: match@(match: "(?i)Plane(?!swalker)")		#Couldn't find translation
		is_dungeon			: match@(match: "(?i)던전")
		is_battle			: match@(match: "(?i)전투")
		is_saga				: match@(match: "(?i)서사시")
		is_class			: match@(match: "(?i)직업")
		is_conspiracy		: match@(match: "(?i)음모")					#Google translation
		is_legendary		: match@(match: "(?i)전설적")
		is_snow				: match@(match: "(?i)눈 ")
		is_basic			: match@(match: "(?i)기본")
		is_token			: match@(match: "(?i)토큰")
		is_plains			: match@(match: "(?i)들")
		is_island			: match@(match: "(?i)섬")
		is_swamp			: match@(match: "(?i)늪")
		is_mountain			: match@(match: "(?i)산")
		is_forest			: match@(match: "(?i)숲")
		is_nyx				: match@(match: "(?i)부여마법 ")
		is_vehicle			: match@(match: "(?i)탑승물")
		is_lesson			: match@(match: "(?i)수업")
		is_miracle			: match@(input: keyword_usage(), match: "(?i)기적")
		is_mutate			: match@(input: keyword_usage(), match: "(?i)돌연변이화")
		is_devoid			: match@(input: keyword_usage(), match: "(?i)결여")
		word_list			: "word_list_ko"
	]
	日本語: [
		code				: "ja",
		spellcheck_code		: "ja_JP",
		fallback          : "English",
		pt_separator		: "/",
		type_separator		: " — ",
		subtype_separator	: "・",
		keyword_types		: ["古い", "中核", "習熟", "疑似", "アクション", "パーソナライズされた"]
		is_creature			: match@(match: "(?i)クリーチャー")
		is_tribal			: match@(match: "(?i)部族")
		is_artifact			: match@(match: "(?i)アーティファクト")
		is_land				: match@(match: "(?i)土地")
		is_enchantment		: match@(match: "(?i)エンチャント")
		is_spell			: match@(match: "(?i)インスタント|ソーサリー")
		is_instant			: match@(match: "(?i)インスタント")
		is_sorcery			: match@(match: "(?i)ソーサリー")
		is_planeswalker		: match@(match: "(?i)プレインズウォーカー")
		is_plane			: match@(match: "(?i)次元")
		is_dungeon			: match@(match: "(?i)ダンジョン")
		is_battle			: match@(match: "(?i)バトル")
		is_saga				: match@(match: "(?i)英雄譚")
		is_class			: match@(match: "(?i)クラス")
		is_conspiracy		: match@(match: "(?i)策略")
		is_legendary		: match@(match: "(?i)伝説の")
		is_snow				: match@(match: "(?i)氷雪")
		is_basic			: match@(match: "(?i)基本")
		is_token			: match@(match: "(?i)トークン")
		is_plains			: match@(match: "(?i)平地")
		is_island			: match@(match: "(?i)島")
		is_swamp			: match@(match: "(?i)沼")
		is_mountain			: match@(match: "(?i)山")
		is_forest			: match@(match: "(?i)森")
		is_nyx				: match@(match: "(?i)・エンチャント")
		is_vehicle			: match@(match: "(?i)機体")
		is_lesson			: match@(match: "(?i)講義")
		is_miracle			: match@(input: keyword_usage(), match: "(?i)奇跡")
		is_mutate			: match@(input: keyword_usage(), match: "(?i)変容")
		is_devoid			: match@(input: keyword_usage(), match: "(?i)欠色")
		word_list			: "word_list_ja"
	]
	汉语: [
		code				: "cn",
		spellcheck_code		: "cn_ZHS",
		fallback          : "漢語",
		pt_separator		: "/",
		type_separator		: " ～ ",
		subtype_separator	: "<atom-sep>／</atom-sep>",
		keyword_types		: ["旧", "核心", "专", "伪", "行动", "专门"]
		is_creature			: match@(match: "(?i)生物")
		is_tribal			: match@(match: "(?i)部族")
		is_artifact			: match@(match: "(?i)神器")
		is_land				: match@(match: "(?i)地")
		is_enchantment		: match@(match: "(?i)结界")
		is_spell			: match@(match: "(?i)瞬间|法术")
		is_instant			: match@(match: "(?i)瞬间")
		is_sorcery			: match@(match: "(?i)法术")
		is_planeswalker		: match@(match: "(?i)鹏洛客")
		is_plane			: match@(match: "(?i)时空")
		is_dungeon			: match@(match: "(?i)地城")
		is_battle			: match@(match: "(?i)战役")
		is_saga				: match@(match: "(?i)传纪")
		is_class			: match@(match: "(?i)职业")
		is_conspiracy		: match@(match: "(?i)诡局")
		is_legendary		: match@(match: "(?i)传奇")
		is_snow				: match@(match: "(?i)雪境")
		is_basic			: match@(match: "(?i)基本")
		is_token			: match@(match: "(?i)衍生")
		is_plains			: match@(match: "(?i)平原")
		is_island			: match@(match: "(?i)海岛")
		is_swamp			: match@(match: "(?i)沼泽")
		is_mountain			: match@(match: "(?i)山脉")
		is_forest			: match@(match: "(?i)树林")
		is_nyx				: match@(match: "(?i)结界(生物|神器)")
		is_vehicle			: match@(match: "(?i)载具")
		is_lesson			: match@(match: "(?i)课程")
		is_miracle			: match@(input: keyword_usage(), match: "(?i)奇迹")
		is_mutate			: match@(input: keyword_usage(), match: "(?i)合变")
		is_devoid			: match@(input: keyword_usage(), match: "(?i)虚色")
		word_list			: "word_list_zhs"
	]
	漢語: [
		code				: "cn",
		spellcheck_code		: "cn_ZHT",
		fallback          : "汉语",
		pt_separator		: "/",
		type_separator		: " ～ ",
		subtype_separator	: "<atom-sep>／</atom-sep>",
		keyword_types		: ["古老", "核心", "嫻", "偽", "行動", "專門"]
		is_creature			: match@(match: "(?i)生物")
		is_tribal			: match@(match: "(?i)部族")
		is_artifact			: match@(match: "(?i)神器")
		is_land				: match@(match: "(?i)地")
		is_enchantment		: match@(match: "(?i)結界")
		is_spell			: match@(match: "(?i)瞬間|巫術")
		is_instant			: match@(match: "(?i)瞬間")
		is_sorcery			: match@(match: "(?i)巫術")
		is_planeswalker		: match@(match: "(?i)鵬洛客")
		is_plane			: match@(match: "(?i)時空")					#Google translation
		is_dungeon			: match@(match: "(?i)地城")
		is_battle			: match@(match: "(?i)戰役")					#Google translation
		is_saga				: match@(match: "(?i)傳紀")
		is_class			: match@(match: "(?i)職業")
		is_conspiracy		: match@(match: "(?i)陰謀")					#Google translation
		is_legendary		: match@(match: "(?i)傳奇")
		is_snow				: match@(match: "(?i)雪境")
		is_basic			: match@(match: "(?i)基本")
		is_token			: match@(match: "(?i)衍生")
		is_plains			: match@(match: "(?i)平原")
		is_island			: match@(match: "(?i)海島")
		is_swamp			: match@(match: "(?i)沼澤")
		is_mountain			: match@(match: "(?i)山脈")
		is_forest			: match@(match: "(?i)樹林")
		is_nyx				: match@(match: "(?i)結界(生物|神器)")
		is_vehicle			: match@(match: "(?i)載具")
		is_lesson			: match@(match: "(?i)課程")
		is_miracle			: match@(input: keyword_usage(), match: "(?i)奇蹟")
		is_mutate			: match@(input: keyword_usage(), match: "(?i)合變")
		is_devoid			: match@(input: keyword_usage(), match: "(?i)虛色")
		word_list			: "word_list_zht"
	]
]

# The selected language
language := { languages[set.card_language] or else languages.English }
# The language's name
lang_name := { 
	if languages[set.card_language].code or else false != false then
		set.card_language
	else "English"
}
# Get a setting from a language, or use a fallback
lang_setting := {
	language()[input] or else languages[language().fallback][input] or else languages.English[input] or else ""
}
# language scripts
spanish_number := {
	input := remove_tags(input)
	espanol_ones_array := ["cero", "uno", "dos", "tres", "cuatro", "cinco", "seis", "siete", "ocho", "nueve", "diez", "once", "doce", "trece", "catorce", "quince"]
	espanol_tens_array := ["cero", "diec", "viente", "treinta", "cuarenta", "cincuenta", "sesenta", "setenta", "ochenta", "noventa"]
	function_map := [
		small: {espanol_ones_array[input]},
		large: {
			ones := input mod 10
			tens := (input - ones) / 10
			final_answer := espanol_tens_array[tens] + " y " + espanol_ones_array[ones]
			final_answer := replace(final_answer, match:" y cero", replace:"") ##remove redundant "and zero"
			final_answer := replace(final_answer, match:"(diec|vient)e? y ", replace:"\\1i") ##16-29 are one word
			final_answer
		},
		oversized: {input}
	]
	if input == "number" then ""
	else if input < 16 then function_map["small"]()
	else if input < 100 then function_map["large"]()
	else function_map["oversized"]()
}
portuguese_number := {
	input := remove_tags(input)
	portugues_ones_array := ["zero", "um", "dois", "três", "quatro", "cinco", "seis", "sete", "oito", "nove", "dez", "onze", "doze", "treze", "catorze", "quinze", "dezesseis", "dezessete", "dezoito", "dezenove"]
	portugues_tens_array := ["zero", "deze", "vinte", "trinta", "quarenta", "cinquenta", "sessenta", "setenta", "oitenta", "noventa"]
	function_map := [
		small: {portugues_ones_array[input]},
		large: {
			ones := input mod 10
			tens := (input - ones) / 10
			final_answer := portugues_tens_array[tens] + " e " + portugues_ones_array[ones]
			final_answer := replace(final_answer, match:" e zero", replace:"") ##remove redundant "and zero"
			final_answer
		},
		oversized: {input}
	]
	if input == "number" then ""
	else if input < 20 then function_map["small"]()
	else if input < 100 then function_map["large"]()
	else function_map["oversized"]()
}
french_number := {
	input := remove_tags(input)
	francais_ones_array := ["zéro", "un", "deux", "trois", "quatre", "cinq", "six", "sept", "huit", "nuef", "dix", "onze", "douze", "treize", "quatorze", "quinze", "seize","dix-sept","dix-huit","dix-neuf"]
	francais_tens_array := ["zéro", "dix", "vingt", "trente", "quarante", "cinquante", "soixante", "soixante-dix", "quatre-vingts", "quatre-vingt-dix"]
	function_map := [
		small: {francais_ones_array[input]},
		large: {
			ones := input mod 10
			tens := (input - ones) / 10
			final_answer := francais_tens_array[tens] + "-" + francais_ones_array[ones]
			final_answer := replace(final_answer, match:"-zéro", replace:"") ##remove redundant "and zero"
			final_answer := replace(final_answer, match:"-un", replace:" et un") ##21, 31 et al. use "et un"
			final_answer
		},
		oversized: {input}
	]
	if input == "number" then ""
	else if input < 20 then function_map["small"]()
	else if input < 100 then function_map["large"]()
	else function_map["oversized"]()
}
