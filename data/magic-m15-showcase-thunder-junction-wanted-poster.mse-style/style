mse version:		2.1.2
game:				magic
short name:			Wanted Poster
full name:			Thunder Junction Showcase
icon:				card_sample.png
position hint:		095

version:			2024-05-20
depends on:
	package:			magic.mse-game
	version:			2014-06-25
depends on:
	package:			magic-mana-large.mse-symbol-font
	version:			2007-09-23
depends on:
	package:			magic-mana-small.mse-symbol-font
	version:			2007-09-23
depends on:
	package:			magic-modules.mse-include
	version:			2024-05-20
depends on:
	package:			magic-mainframe-extras.mse-include
	version:			2007-09-23

card width:			744
card height:		1039
card dpi:			297

### blanks by GenevensiS
### code by GenevensiS

############################################################## Extra scripts

init script:
	swap_fonts_pt_default :=
	[
		name: {"HelveticaNowText Black"},
		size: {27.0},
		color: { rgb(82, 60, 41) },
		vertical: {0},
		italic: {"HelveticaNowText Black"}
	]
	
	swap_fonts_body_default :=
	[
		name: {"Schnebel Slab Pro Regular"},
		size: {22.0},
		color: {"black"},
		vertical: {0},
		italic: {"Schnebel Slab Pro Italic"}
	]
	
	typeline_offset_top_1 := { 48 }
	typeline_offset_width_1 := { 12 }
	typeline_offset_left_1 := { -6 }
	swap_fonts_type_default :=
	[
		name: {"ITC Officina Serif W04 AllCaps"},
		size: {22.0},
		color: { rgb(82, 60, 41) },
		vertical: {0},
		italic: {""}
	]
	
	swap_fonts_name_default :=
	[
		name: {"Saddlebag AllCaps"},
		size: {75.0},
		color: { rgb(82, 60, 41) },
		vertical: {0},
		italic: {""}
	]
	
	card_full_name_default := { if card.name_2 != "" then card.name + " " + card.name_2 else card.name }
	card_full_name := { if card.name_2 != "" then card.name + " " + card.name_2 else card.name }
	
	card_hybrid_2 :=
	{
		masked_blend(mask: "special_blend_card.png", dark: template(colors.0), light: template(colors.1))
	}
	horizontal_card_hybrid :=
	[
		0:	horizontal_card_hybrid[0]
		1:	horizontal_card_hybrid[1]
		2:	card_hybrid_2
		3:	horizontal_card_hybrid[3]
		4:	horizontal_card_hybrid[4]
		5:	horizontal_card_hybrid[5]
		6:	horizontal_card_hybrid[6]
		7:	horizontal_card_hybrid[7]
	]
	card_hybrid :=
	[
		radial:		card_hybrid["radial"]
		horizontal:	horizontal_card_hybrid
		overlay:	card_hybrid["overlay"]
		vertical:	card_hybrid["vertical"]
	]
	
	template_prefix :=
	[
		card:				"card/",
		pt:					"pt/",
		crown:				"crown/",
		alias:				"alias/",
		stamp:				"stamp/",
		nonstamp:			"nonstamp/"
		identity:			"/magic-modules.mse-include/indicators/",
		identity2:			"/magic-modules.mse-include/indicators/",
	]
	template_suffix :=
	[
		card:				"card.png",
		pt:					"pt.png",
		crown:				"crown.png",
		alias:				"alias.png",
		stamp:				"stamp.png",
		nonstamp:			"nonstamp.png"
		identity:			"identity.png",
		identity2:			"identity.png",
	]
	template := { template_prefix[type] + input + template_suffix[type] }
	land_template := { template_prefix[type] + (if input == "a" then "c" else input) + template_suffix[type] }
	
	card_background :=			{ color_background(input: card.card_color, type: "card",		base_hybrid: card_hybrid) }
	card_ptbox :=				{ color_background(input: card.card_color, type: "pt",			base_hybrid: card_hybrid) }
	card_crown :=				{ color_background(input: card.card_color, type: "crown",		base_hybrid: card_hybrid) }
	card_alias :=				{ color_background(input: card.card_color, type: "alias",		base_hybrid: card_hybrid) }
	card_stamp :=				{ color_background(input: card.card_color, type: "stamp",		base_hybrid: card_hybrid) }
	card_nonstamp :=			{ color_background(input: card.card_color, type: "nonstamp",	base_hybrid: card_hybrid) }
	
	pure_colors :=
	{
		sort_text(
			order: if card_is_wedge(input) then "(wbgur)" else "(wubrg)",
			(if chosen(card.card_color, choice:"white")	then "w") +
			(if chosen(card.card_color, choice:"blue")	then "u") +
			(if chosen(card.card_color, choice:"black")	then "b") +
			(if chosen(card.card_color, choice:"red")	then "r") +
			(if chosen(card.card_color, choice:"green")	then "g")
		)
	}
	pt_colors := { if styling.PT_color_scheme == "canon" then pt_colors_canon() else styling.PT_color_scheme }
	pt_colors_canon := { "colored" }
	
	has_identity := { styling.color_indicator_dot }
	has_identity_2 := { false }
	
	is_promo := { styling.promo }
	
	is_unsorted := { styling.remove_from_autocount }

	
	is_crowned := { styling.legend_crown == "yes" or (styling.legend_crown == "if legendary" and lang_setting("is_legendary")(card.super_type)) }
	
	chop_top := { split := split_comma(styling.chop_text_box); if length(split) > 0 and split.0 != "" then clamp(split.0, maximum: 1500, minimum: -1500) else 0 }
	chop_bot := { split := split_comma(styling.chop_text_box); if length(split) > 1 and split.1 != "" then clamp(split.1, maximum: 1500, minimum: -1500) else 0 }
	
	popout_left := { split := split_comma(styling.popout_image_coordinates); if length(split) > 3 and split.0 != "" then clamp(split.0, maximum: 1500, minimum: -500) else 0 }
	popout_top := { split := split_comma(styling.popout_image_coordinates); if length(split) > 3 and split.1 != "" then clamp(split.1, maximum: 2000, minimum: -500) else 0 }
	popout_width := { split := split_comma(styling.popout_image_coordinates); if length(split) > 3 and split.2 != "" then clamp(split.2, maximum: 1500, minimum: 0) else 0 }
	popout_height := { split := split_comma(styling.popout_image_coordinates); if length(split) > 3 and split.3 != "" then clamp(split.3, maximum: 2000, minimum: 0) else 0 }

############################################################## Extra style options

styling field:
	type:			text
	name:			popout image coordinates
	description:	The coordinates for the popout image field, formatted as "left,top,width,height". Used to make the illustration jump in front of the frame.
styling field:
	type:			boolean
	name:			stretch image to whole card
	description:	Make the image span the whole card instead of just the visible part. Use this to help make popout effects.
	initial:		no

include file: /magic-modules.mse-include/texts/styling_fields

styling field:
	type:			choice
	name:			PT color scheme
	description:	Use the selected color scheme for the PT box on two color cards. Canon is "colored".
	choice:			canon
	choice:			gold
	choice:			hybrid
	choice:			colored
	choice:			land
	initial:		canon

include file: /magic-modules.mse-include/stamps/styling_fields

include file: /magic-modules.mse-include/rarities/styling_fields

include file: /magic-modules.mse-include/indicators/styling_fields

include file: /magic-modules.mse-include/watermarks/styling_fields

styling field:
	type:			package choice
	name:			overlay
	description:	Should there be an overlay applied, such as foil?
	match:			magic-overlay-*.mse-include
	required:		false

include file: /magic-modules.mse-include/information/styling_fields

styling field:
	type:			package choice
	name:			casting cost mana symbols
	description:	Mana symbols used for casting cost, name, banner, fuse and transformation reminder.
	match:			magic-mana-*.mse-symbol-font
	initial:		magic-mana-thunder-junction-wanted-poster.mse-symbol-font
styling field:
	type:			package choice
	name:			text box mana symbols
	description:	Mana symbols used inside rule text.
	match:			magic-mana-*.mse-symbol-font
	initial:		magic-mana-small.mse-symbol-font
styling field:
	type:			boolean
	name:			use ancestral mana symbols
	description:	Enables ancestral's modified generic mana.
	initial:		no
styling field:
	type:			boolean
	name:			use guild mana symbols
	description:	Use the Ravnica guild symbols instead of the official half/half circles for hybrid mana.
	initial:		no
styling field:
	type:			choice
	name:			tap symbol
	description:	What tap and untap symbols should be used on cards?
	choice:			modern
	choice:			old
	choice:			diagonal T
	initial:		modern
styling style:
	use ancestral mana symbols:
		choice images:
			yes:				/magic-modules.mse-include/symbol-fonts/generic_ancestral.png
			no:					/magic-modules.mse-include/symbol-fonts/generic_normal.png
	use guild mana symbols:
		choice images:
			yes:				/magic-modules.mse-include/symbol-fonts/hybrid_guild.png
			no:					/magic-modules.mse-include/symbol-fonts/hybrid_normal.png
	tap symbol:
		render style:	both
		choice images:
			modern:				/magic-modules.mse-include/symbol-fonts/tap_new.png
			old:				/magic-modules.mse-include/symbol-fonts/tap_old.png
			diagonal T:			/magic-modules.mse-include/symbol-fonts/tap_older.png

include file: /magic-modules.mse-include/fonts/styling_fields

############################################################## Card fields

include file: /magic-modules.mse-include/information/card_fields

include file: /magic-modules.mse-include/stamps/card_fields

include file: /magic-modules.mse-include/corners/card_fields

include file: /magic-modules.mse-include/watermarks/card_fields

include file: /magic-modules.mse-include/separators/card_fields

include file: /magic-modules.mse-include/typelines/card_fields

card style:
	############################# Background stuff
	card color:
		left:				0
		top:				0
		width:				{ stylesheet.card_width }
		height:				{ stylesheet.card_height }
		z index:			210
		popup style:		in place
		render style:		image
		image:				{ card_background() }
		mask:				card_mask.png
	############################# Name line
	name:
		left:				30
		top:				{ (if card.name_2 == "" then 95 else 73) + name_font_vertical() }
		right:				714
		height:				{ if card.name_2 == "" then 73 else 86 }
		z index:			1000
		alignment:			{ if card.name_2 == "" then "top center shrink-overflow" else "middle center shrink-overflow" }
		font:
			name:				{ name_font() }
			italic name:		{ name_font_italic() }
			size:				{ name_font_size() }
			scale down to:		8
			color:				{ name_font_color() }
	name 2:
		left:				30
		top:				149
		right:				714
		height:				85
		z index:			1000
		alignment:			top center shrink-overflow
		font:
			name:				{ name_font() }
			italic name:		{ name_font_italic() }
			size:				{ name_font_size()*40/75 }
			scale down to:		8
			color:				{ name_font_color() }
	casting cost:
		left:				671
		top:				230
		width:				30
		height:				350
		z index:			1010
		alignment:			top left
		direction:			vertical
		#mask:				casting_cost_mask.png
		always symbol:		true
		font:
			name:				MPlantin
			size:				23
			scale down to:		23
			color:				black
		symbol font:
			name:				{ styling.casting_cost_mana_symbols }
			size:				23
			scale down to:		23
	#alias:
	#	left:				114
	#	top:				120
	#	right:				630
	#	height:				22
	#	z index:			1000
	#	alignment:			middle center shrink-overflow
	#	font:
	#		name:				{ if styling.name_font == "" then "Beleren Bold" else styling.name_font }
	#		size:				16
	#		color:				black
	############################# Image
	image:
		left:				{ if styling.stretch_image_to_whole_card then 0							else 80 }
		top:				{ if styling.stretch_image_to_whole_card then 0							else 240 }
		width:				{ if styling.stretch_image_to_whole_card then stylesheet.card_width		else 584 }
		height:				{ if styling.stretch_image_to_whole_card then stylesheet.card_height	else 394 }
		z index:			0
		#mask:				{ if styling.stretch_image_to_whole_card then "image_mask_full.png" else "" }
	mainframe image:
		left:				{ popout_left() }
		top:				{ popout_top() }
		width:				{ popout_width() }
		height:				{ popout_height() }
		z index:			1010
	############################# Text box
	text:
		left:				56
		top:				{ 682 + chop_top() + (if is_stamped() then 3 else 0) + body_font_vertical() }
		right:				688
		bottom:				{ 947 - chop_bot() - if is_stamped() then 12 else 0 }
		z index:			900
		line height hard:	{ if is_modal(card.rule_text) then 0.9 else 1.2 }
		line height line:	1.5
		line height soft:	0.9
		line height hard max:	{ if is_modal(card.rule_text) then 1.0 else 1.3 }
		line height line max:	1.6
		alignment:
			script:
				if (styling.center_text == "short text only" and
				   not contains(match:"\n", card.rule_text) and
				   card.flavor_text == "<i-flavor></i-flavor>" and
				   card_style.text.content_lines <= 2) or
				   styling.center_text == "always"
				then "middle center"
				else "middle left"
		font:
			name:				{ body_font() }
			italic name:		{ body_font_italic() }
			size:				{ body_font_size() }
			scale down to:		12
			color:				{ body_font_color() }
		symbol font:
			name:				{ styling.text_box_mana_symbols }
			size:				{ body_font_size() }
			scale down to:		12
	############################# PT
	pt:
		left:				596
		top:				{ 928 + pt_font_vertical() }
		width:				93
		height:				47
		z index:			900
		alignment:			center middle shrink-overflow
		font:
			name:				{ pt_font() }
			size:				{ pt_font_size() }
			color:				{ pt_font_color() }
			separator color:	red

############################################################## Extra card fields

extra card field:
	type:				choice
	name:				pt box
	editable:			false
	save value:			false
	show statistics:	false
	choice:				pt box
extra card field:
	type:				choice
	name:				card stamp rim
	editable:			false
	save value:			false
	show statistics:	false
	choice:				card stamp rim
extra card field:
	type:				choice
	name:				foil layer
	editable:			false
	save value:			false
	show statistics:	false
	choice:				foil layer

extra card style:
	pt box:
		left:				0
		top:				0
		width:				{ stylesheet.card_width }
		height:				{ stylesheet.card_height }
		z index:			810
		visible:			{ card.pt != "" }
		render style:		image
		image:
			script:
				pure := pure_colors()
				count := length(pure)
				color := pt_colors()
				if color == "gold" and count > 1 then template("m", type: "pt")
				else if color == "land" and count > 1 then template("c", type: "pt")
				else if color == "hybrid" and count == 2 then masked_blend(mask: "special_blend_pt.png", dark: template(pure.0, type: "pt"), light: template(pure.1, type: "pt"))
				else card_ptbox()
	card stamp rim:
		left:				0
		top:				0
		width:				{ stylesheet.card_width }
		height:				{ stylesheet.card_height }
		z index:			610
		render style:		image
		image:				{ if is_stamped() then "" else "non_stamp_rim.png" }
	foil layer:
		left:				0
		top:				0
		width:				{ stylesheet.card_width }
		height:				{ stylesheet.card_height }
		z index:			1050
		visible:			{ styling.overlay != "none" and styling.overlay != "" }
		render style:		image
		image:				{ if styling.overlay == "" then "" else styling.overlay + "/overlay.png" }
