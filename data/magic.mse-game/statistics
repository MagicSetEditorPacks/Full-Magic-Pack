
############################################################## Statistics dimensions 03-03-2023
############################################################## Blame GenevensiS for this

statistics dimension:
	name: color
	position hint: 000
	icon: stats/color.png
	description: The color of the card, as defined by the comprehensive rules. Does not take into account the back side or secondary face (like on adventures for example), except for split cards.
	show empty: false
	script: if filter_from_statistic() == "Filtered" or trim_from_statistic() then "" else color_statistic()
	group: C
	group: W
	group: U
	group: B
	group: R
	group: G
	group: WU
	group: WB
	group: WR
	group: WG
	group: UB
	group: UR
	group: UG
	group: BR
	group: BG
	group: RG
	group: WUB
	group: WUR
	group: WUG
	group: WBR
	group: WBG
	group: WRG
	group: UBR
	group: UBG
	group: URG
	group: BRG
	group: WUBR
	group: WUBG
	group: WURG
	group: WBRG
	group: UBRG
	group: WUBRG
	colors:
		C 		: rgb(101,104,94)
		W 		: rgb(255,231,185)
		U 		: rgb(15,80,166)
		B 		: rgb(22,22,22)
		R 		: rgb(156,15,15)
		G 		: rgb(68,144,15)
		WU		: rgb(254,192,80)
		WB		: rgb(254,192,80)
		WR		: rgb(254,192,80)
		WG		: rgb(254,192,80)
		UB		: rgb(254,192,80)
		UR		: rgb(254,192,80)
		UG		: rgb(254,192,80)
		BR		: rgb(254,192,80)
		BG		: rgb(254,192,80)
		RG		: rgb(254,192,80)
		WUB		: rgb(244,177,10)
		WUR		: rgb(244,177,10)
		WUG		: rgb(244,177,10)
		WBR		: rgb(244,177,10)
		WBG		: rgb(244,177,10)
		WRG		: rgb(244,177,10)
		UBR		: rgb(244,177,10)
		UBG		: rgb(244,177,10)
		URG		: rgb(244,177,10)
		BRG		: rgb(244,177,10)
		WUBR	: rgb(232,154,9)
		WUBG	: rgb(232,154,9)
		WURG	: rgb(232,154,9)
		WBRG	: rgb(232,154,9)
		UBRG	: rgb(232,154,9)
		WUBRG	: rgb(224,133,8)

statistics dimension:
	name: color identity
	position hint: 001
	icon: stats/color.png
	description: The commander color identity of the card, as defined by the comprehensive rules. Takes into account all sides and faces of the card.
	show empty: false
	script: if filter_from_statistic() == "Filtered" or trim_from_statistic() then "" else color_identity_statistic()
	group: C
	group: W
	group: U
	group: B
	group: R
	group: G
	group: WU
	group: WB
	group: WR
	group: WG
	group: UB
	group: UR
	group: UG
	group: BR
	group: BG
	group: RG
	group: WUB
	group: WUR
	group: WUG
	group: WBR
	group: WBG
	group: WRG
	group: UBR
	group: UBG
	group: URG
	group: BRG
	group: WUBR
	group: WUBG
	group: WURG
	group: WBRG
	group: UBRG
	group: WUBRG
	colors:
		C 		: rgb(101,104,94)
		W 		: rgb(255,231,185)
		U 		: rgb(15,80,166)
		B 		: rgb(22,22,22)
		R 		: rgb(156,15,15)
		G 		: rgb(68,144,15)
		WU		: rgb(254,192,80)
		WB		: rgb(254,192,80)
		WR		: rgb(254,192,80)
		WG		: rgb(254,192,80)
		UB		: rgb(254,192,80)
		UR		: rgb(254,192,80)
		UG		: rgb(254,192,80)
		BR		: rgb(254,192,80)
		BG		: rgb(254,192,80)
		RG		: rgb(254,192,80)
		WUB		: rgb(244,177,10)
		WUR		: rgb(244,177,10)
		WUG		: rgb(244,177,10)
		WBR		: rgb(244,177,10)
		WBG		: rgb(244,177,10)
		WRG		: rgb(244,177,10)
		UBR		: rgb(244,177,10)
		UBG		: rgb(244,177,10)
		URG		: rgb(244,177,10)
		BRG		: rgb(244,177,10)
		WUBR	: rgb(232,154,9)
		WUBG	: rgb(232,154,9)
		WURG	: rgb(232,154,9)
		WBRG	: rgb(232,154,9)
		UBRG	: rgb(232,154,9)
		WUBRG	: rgb(224,133,8)

statistics dimension:
	name: casting cost
	position hint: 010
	icon: stats/casting_cost.png
	split list: true
	show empty: false
	script: if filter_from_statistic() == "Filtered" or trim_from_statistic() then "" else casting_cost_statistic()

statistics dimension:
	name: mana value
	position hint: 011
	icon: stats/mana_value.png
	numeric: true
	show empty: false
	script: if filter_from_statistic() == "Filtered" or trim_from_statistic() then "" else mana_value_statistic()

statistics dimension:
	name: casting costs pips
	position hint: 014
	icon: stats/color_pips.png
	description: Counts how many cards have a single white pip in their casting cost. Repeat for two white pips. Then three, then four+, then for all other colors. Counts each side/face separatly.
	split list: true
	show empty: false
	script: if filter_from_statistic() == "Filtered" or trim_from_statistic() then "" else cc_colored_pips_statistic()
	group: C
	group: CC
	group: CCC
	group: CCCC+
	group: W
	group: WW
	group: WWW
	group: WWWW+
	group: U
	group: UU
	group: UUU
	group: UUUU+
	group: B
	group: BB
	group: BBB
	group: BBBB+
	group: R
	group: RR
	group: RRR
	group: RRRR+
	group: G
	group: GG
	group: GGG
	group: GGGG+
	colors:
		C		: rgb(101,104,94)
		CC		: rgb(96,99,89)
		CCC		: rgb(91,94,84)
		CCCC+	: rgb(86,89,79)
		W		: rgb(255,231,185)
		WW		: rgb(250,226,180)
		WWW		: rgb(245,221,175)
		WWWW+	: rgb(240,216,170)
		U		: rgb(15,80,166)
		UU		: rgb(10,75,161)
		UUU		: rgb(5,70,156)
		UUUU+	: rgb(0,65,151)
		B		: rgb(33,33,33)
		BB		: rgb(28,28,28)
		BBB		: rgb(23,23,23)
		BBBB+	: rgb(18,18,18)
		R		: rgb(156,15,15)
		RR		: rgb(151,10,10)
		RRR		: rgb(146,5,5)
		RRRR+	: rgb(141,0,0)
		G		: rgb(68,144,15)
		GG		: rgb(63,139,10)
		GGG		: rgb(58,134,5)
		GGGG+	: rgb(53,129,0)

statistics dimension:
	name: cast. costs pips totals
	position hint: 015
	icon: stats/color_pips.png
	description: Counts the total number of white pips in all the casting costs. Repeat for all other colors.
	split list: true
	show empty: false
	script: if filter_from_statistic() == "Filtered" or trim_from_statistic() then "" else cc_colored_pips_totals_statistic()
	group: C
	group: W
	group: U
	group: B
	group: R
	group: G
	colors:
		C	: rgb(101,104,94)
		W	: rgb(255,231,185)
		U	: rgb(15,80,166)
		B	: rgb(33,33,33)
		R	: rgb(156,15,15)
		G	: rgb(68,144,15)

statistics dimension:
	name: ability costs pips
	position hint: 016
	icon: stats/color_pips.png
	description: Counts how many activated/triggered/keyworded abilities have a single white pip in their cost. Repeat for two white pips. Then three, then four+, then for all other colors. Counts each ability on each side/face separatly.
	split list: true
	show empty: false
	script: if filter_from_statistic() == "Filtered" or trim_from_statistic() then "" else ability_colored_pips_statistic()
	group: C
	group: CC
	group: CCC
	group: CCCC+
	group: W
	group: WW
	group: WWW
	group: WWWW+
	group: U
	group: UU
	group: UUU
	group: UUUU+
	group: B
	group: BB
	group: BBB
	group: BBBB+
	group: R
	group: RR
	group: RRR
	group: RRRR+
	group: G
	group: GG
	group: GGG
	group: GGGG+
	colors:
		C		: rgb(101,104,94)
		CC		: rgb(96,99,89)
		CCC		: rgb(91,94,84)
		CCCC+	: rgb(86,89,79)
		W		: rgb(255,231,185)
		WW		: rgb(250,226,180)
		WWW		: rgb(245,221,175)
		WWWW+	: rgb(240,216,170)
		U		: rgb(15,80,166)
		UU		: rgb(10,75,161)
		UUU		: rgb(5,70,156)
		UUUU+	: rgb(0,65,151)
		B		: rgb(33,33,33)
		BB		: rgb(28,28,28)
		BBB		: rgb(23,23,23)
		BBBB+	: rgb(18,18,18)
		R		: rgb(156,15,15)
		RR		: rgb(151,10,10)
		RRR		: rgb(146,5,5)
		RRRR+	: rgb(141,0,0)
		G		: rgb(68,144,15)
		GG		: rgb(63,139,10)
		GGG		: rgb(58,134,5)
		GGGG+	: rgb(53,129,0)

statistics dimension:
	name: abil. costs pips totals
	position hint: 017
	icon: stats/color_pips.png
	description: Counts the total number of white pips in all the ability costs. Repeat for all other colors.
	split list: true
	show empty: false
	script: if filter_from_statistic() == "Filtered" or trim_from_statistic() then "" else ability_colored_pips_totals_statistic()
	group: C
	group: W
	group: U
	group: B
	group: R
	group: G
	colors:
		C	: rgb(101,104,94)
		W	: rgb(255,231,185)
		U	: rgb(15,80,166)
		B	: rgb(33,33,33)
		R	: rgb(156,15,15)
		G	: rgb(68,144,15)

statistics dimension:
	name: all costs pips
	position hint: 018
	icon: stats/color_pips.png
	description: Counts how many costs contain a single white pip. Repeat for two white pips. Then three, then four+, then for all other colors. Counts each cost on each side/face separatly.
	split list: true
	show empty: false
	script: if filter_from_statistic() == "Filtered" or trim_from_statistic() then "" else colored_pips_statistic()
	group: C
	group: CC
	group: CCC
	group: CCCC+
	group: W
	group: WW
	group: WWW
	group: WWWW+
	group: U
	group: UU
	group: UUU
	group: UUUU+
	group: B
	group: BB
	group: BBB
	group: BBBB+
	group: R
	group: RR
	group: RRR
	group: RRRR+
	group: G
	group: GG
	group: GGG
	group: GGGG+
	colors:
		C		: rgb(101,104,94)
		CC		: rgb(96,99,89)
		CCC		: rgb(91,94,84)
		CCCC+	: rgb(86,89,79)
		W		: rgb(255,231,185)
		WW		: rgb(250,226,180)
		WWW		: rgb(245,221,175)
		WWWW+	: rgb(240,216,170)
		U		: rgb(15,80,166)
		UU		: rgb(10,75,161)
		UUU		: rgb(5,70,156)
		UUUU+	: rgb(0,65,151)
		B		: rgb(33,33,33)
		BB		: rgb(28,28,28)
		BBB		: rgb(23,23,23)
		BBBB+	: rgb(18,18,18)
		R		: rgb(156,15,15)
		RR		: rgb(151,10,10)
		RRR		: rgb(146,5,5)
		RRRR+	: rgb(141,0,0)
		G		: rgb(68,144,15)
		GG		: rgb(63,139,10)
		GGG		: rgb(58,134,5)
		GGGG+	: rgb(53,129,0)

statistics dimension:
	name: all costs pips totals
	position hint: 019
	icon: stats/color_pips.png
	description: Counts the total number of white pips in all the costs. Repeat for all other colors.
	split list: true
	show empty: false
	script: if filter_from_statistic() == "Filtered" or trim_from_statistic() then "" else colored_pips_totals_statistic()
	group: C
	group: W
	group: U
	group: B
	group: R
	group: G
	colors:
		C	: rgb(101,104,94)
		W	: rgb(255,231,185)
		U	: rgb(15,80,166)
		B	: rgb(33,33,33)
		R	: rgb(156,15,15)
		G	: rgb(68,144,15)

statistics dimension:
	name: land mana prod.
	position hint: 020
	icon: stats/land_production.png
	description: Counts how many lands can produce white mana. Repeat for all other colors. Then counts how many lands can produce mana of any color, then how many lands can produce mana of a chosen color. If either side/face is a land, the card will be counted here.
	split list: true
	show empty: false
	script: if filter_from_statistic() == "Filtered" or trim_from_statistic() then "" else mana_production_list_statistic(check: "land")
	group: C
	group: W
	group: U
	group: B
	group: R
	group: G
	group: Any
	group: Chosen
	colors:
		C		: rgb(101,104,94)
		W		: rgb(255,231,185)
		U		: rgb(15,80,166)
		B		: rgb(33,33,33)
		R		: rgb(156,15,15)
		G		: rgb(68,144,15)
		Any		: rgb(112,38,128)
		Chosen	: rgb(112,38,128)

statistics dimension:
	name: nonland mana prod.
	position hint: 020
	icon: stats/land_production.png
	description: Same as 'land mana prod.' but for nonland cards.
	split list: true
	show empty: false
	script: if filter_from_statistic() == "Filtered" or trim_from_statistic() then "" else mana_production_list_statistic(check: "nonland")
	group: C
	group: W
	group: U
	group: B
	group: R
	group: G
	group: Any
	group: Chosen
	colors:
		C		: rgb(101,104,94)
		W		: rgb(255,231,185)
		U		: rgb(15,80,166)
		B		: rgb(33,33,33)
		R		: rgb(156,15,15)
		G		: rgb(68,144,15)
		Any		: rgb(112,38,128)
		Chosen	: rgb(112,38,128)

statistics dimension:
	name: all mana production
	position hint: 020
	icon: stats/land_production.png
	description: Sum of 'land mana prod.' and 'nonland mana prod.'.
	split list: true
	show empty: false
	script: if filter_from_statistic() == "Filtered" or trim_from_statistic() then "" else mana_production_list_statistic(check: "all")
	group: C
	group: W
	group: U
	group: B
	group: R
	group: G
	group: Any
	group: Chosen
	colors:
		C		: rgb(101,104,94)
		W		: rgb(255,231,185)
		U		: rgb(15,80,166)
		B		: rgb(33,33,33)
		R		: rgb(156,15,15)
		G		: rgb(68,144,15)
		Any		: rgb(112,38,128)
		Chosen	: rgb(112,38,128)

statistics dimension:
	name: permanent/Nonperm.
	position hint: 025
	icon: stats/type.png
	description: Counts the number of creatures, noncreature permanents, and nonpermanents. Counts each side/face separatly.
	split list: true
	show empty: false
	script: if filter_from_statistic() == "Filtered" or trim_from_statistic() then "" else permanent_statistic()
	colors:
		​Creature		: rgb(15,80,166)
		​​Permanent		: rgb(18,105,166)
		​​​Non Permanent	: rgb(156,15,15)
		​​​​Command Zone	: rgb(244,227,21)
		​​​​​Unknown			: rgb(33,33,33)

statistics dimension:
	name: supertype
	position hint: 026
	icon: stats/type.png
	description: The card's supertype, not including types. Counts each side/face separatly.
	split list: true
	show empty: false
	script: if filter_from_statistic() == "Filtered" or trim_from_statistic() then "" else supertype_statistic()
	group: Basic
	group: Snow
	group: World
	group: Legendary
	group: Token
	group: Ongoing
	group: Elite
	group: Host
	colors:
		Basic			: rgb(103,64,35)
		Snow			: rgb(109,132,158)
		World			: rgb(120,100,180)
		Legendary		: rgb(70,49,125)
		Token			: rgb(15,80,166)
		Ongoing			: rgb(56,169,138)
		Elite			: rgb(195,221,62)
		Host			: rgb(157,168,115)
	
statistics dimension:
	name: combined type
	position hint: 027
	icon: stats/type.png
	description: All supertypes and types concatenated. Counts each side/face separatly.
	split list: true
	show empty: false
	script: if filter_from_statistic() == "Filtered" or trim_from_statistic() then "" else combined_type_statistic()

statistics dimension:
	name: type
	position hint: 028
	icon: stats/type.png
	description: The card's type, not including supertypes. Only showing the 7 most common types.
	split list: true
	show empty: false
	script: if filter_from_statistic() == "Filtered" or trim_from_statistic() then "" else type_statistic()
	group: Land
	group: Creature
	group: Artifact
	group: Enchantment
	group: Planeswalker
	group: Sorcery
	group: Instant
	colors:
		Land					: rgb(103,64,35)
		Creature				: rgb(15,80,166)
		Artifact				: rgb(109,132,158)
		Enchantment				: rgb(120,100,180)
		Planeswalker			: rgb(70,49,125)
		Sorcery					: rgb(156,15,15)
		Instant					: rgb(216,72,98)

statistics dimension:
	name: extended type
	position hint: 029
	icon: stats/type.png
	description: The card's type, not including supertypes.
	split list: true
	show empty: false
	script: type_extended_statistic()
	colors:
		​Land				: rgb(103,64,35)			# There is a zero width space before the "Land" so that it always appears after custom types.
		​​Creature			: rgb(15,80,166)			# There are two zero width spaces before the "Creature" so that it always appears after lands.
		​​​Tribal				: rgb(65,107,162)			# There are three zero width spaces before the "Tribal", etc...
		​​​​Artifact			: rgb(109,132,158)
		​​​​​Enchantment			: rgb(120,100,180)
		​​​​​​Emblem				: rgb(85,75,152)
		​​​​​​​Planeswalker		: rgb(70,49,125)
		​​​​​​​​Sorcery				: rgb(156,15,15)
		​​​​​​​​​Instant				: rgb(216,72,98)
		​​​​​​​​​​Conspiracy			: rgb(236,134,32)
		​​​​​​​​​​​Dungeon				: rgb(244,227,21)
		​​​​​​​​​​​​Hero				: rgb(195,221,62)
		​​​​​​​​​​​​​Phenomenon			: rgb(145,215,102)
		​​​​​​​​​​​​​​Plane				: rgb(123,198,55)
		​​​​​​​​​​​​​​​Scheme				: rgb(56,169,138)
		​​​​​​​​​​​​​​​​Vanguard			: rgb(72,165,172)
		​​​​​​​​​​​​​​​​​No Type				: rgb(33,33,33)

statistics dimension:
	name: combined subtype
	position hint: 030
	icon: stats/type.png
	description: All subtypes concatenated. Counts each side/face separatly.
	split list: true
	show empty: false
	script: if filter_from_statistic() == "Filtered" or trim_from_statistic() then "" else combined_subtype_statistic()

statistics dimension:
	name: creature subtype
	position hint: 032
	icon: stats/creature_subtype.png
	description: Subtypes of the creature/tribal type.
	split list: true
	show empty: false
	script: if filter_from_statistic() == "Filtered" or trim_from_statistic() then "" else creature_subtype_statistic()

statistics dimension:
	name: noncreature subtype
	position hint: 033
	icon: stats/noncreature_subtype.png
	description: Subtypes of all types except creature/tribal.
	split list: true
	show empty: false
	script: if filter_from_statistic() == "Filtered" or trim_from_statistic() then "" else noncreature_subtype_statistic()
	colors:
	#Land
		​Desert						: rgb(103,64,35)		# There is a zero width space before land types so that they always appear after custom types.
		​Forest						: rgb(103,64,35)
		​Gate						: rgb(103,64,35)
		​Island						: rgb(103,64,35)
		​Lair						: rgb(103,64,35)
		​Locus						: rgb(103,64,35)
		​Mine						: rgb(103,64,35)
		​Mountain					: rgb(103,64,35)
		​Plains						: rgb(103,64,35)
		​Power-Plant					: rgb(103,64,35)
		​Swamp						: rgb(103,64,35)
		​Tower						: rgb(103,64,35)
		​Urza’s						: rgb(103,64,35)
	#Artifact
		​​Attraction					: rgb(109,132,158)		# There are two zero width spaces before artifact types so that they always appear after land types, etc...
		​​Blood						: rgb(109,132,158)
		​​Clue						: rgb(109,132,158)
		​​Contraption					: rgb(109,132,158)
		​​Equipment					: rgb(109,132,158)
		​​Food						: rgb(109,132,158)
		​​Fortification				: rgb(109,132,158)
		​​Gold						: rgb(109,132,158)
		​​Powerstone					: rgb(109,132,158)
		​​Treasure					: rgb(109,132,158)
		​​Vehicle						: rgb(109,132,158)
	#Enchantment
		​​​Aura						: rgb(120,100,180)
		​​​Background					: rgb(120,100,180)
		​​​Cartouche					: rgb(120,100,180)
		​​​Class						: rgb(120,100,180)
		​​​Curse						: rgb(120,100,180)
		​​​Rune						: rgb(120,100,180)
		​​​Saga						: rgb(120,100,180)
		​​​Shard						: rgb(120,100,180)
		​​​Shrine						: rgb(120,100,180)
	#Planeswalker
		​​​​Ajani						: rgb(70,49,125)
		​​​​Aminatou					: rgb(70,49,125)
		​​​​Angrath						: rgb(70,49,125)
		​​​​Arlinn						: rgb(70,49,125)
		​​​​Ashiok						: rgb(70,49,125)
		​​​​Bahamut						: rgb(70,49,125)
		​​​​Basri						: rgb(70,49,125)
		​​​​Bolas						: rgb(70,49,125)
		​​​​Calix						: rgb(70,49,125)
		​​​​Chandra						: rgb(70,49,125)
		​​​​Comet						: rgb(70,49,125)
		​​​​Dack						: rgb(70,49,125)
		​​​​Dakkon						: rgb(70,49,125)
		​​​​Daretti						: rgb(70,49,125)
		​​​​Davriel						: rgb(70,49,125)
		​​​​Dihada						: rgb(70,49,125)
		​​​​Domri						: rgb(70,49,125)
		​​​​Dovin						: rgb(70,49,125)
		​​​​Ellywick					: rgb(70,49,125)
		​​​​Elminster					: rgb(70,49,125)
		​​​​Elspeth						: rgb(70,49,125)
		​​​​Estrid						: rgb(70,49,125)
		​​​​Freyalise					: rgb(70,49,125)
		​​​​Garruk						: rgb(70,49,125)
		​​​​Gideon						: rgb(70,49,125)
		​​​​Grist						: rgb(70,49,125)
		​​​​Huatli						: rgb(70,49,125)
		​​​​Jace						: rgb(70,49,125)
		​​​​Jared						: rgb(70,49,125)
		​​​​Jaya						: rgb(70,49,125)
		​​​​Jeska						: rgb(70,49,125)
		​​​​Kaito						: rgb(70,49,125)
		​​​​Karn						: rgb(70,49,125)
		​​​​Kasmina						: rgb(70,49,125)
		​​​​Kaya						: rgb(70,49,125)
		​​​​Kiora						: rgb(70,49,125)
		​​​​Koth						: rgb(70,49,125)
		​​​​Liliana						: rgb(70,49,125)
		​​​​Lolth						: rgb(70,49,125)
		​​​​Lukka						: rgb(70,49,125)
		​​​​Minsc						: rgb(70,49,125)
		​​​​Mordenkainen				: rgb(70,49,125)
		​​​​Nahiri						: rgb(70,49,125)
		​​​​Narset						: rgb(70,49,125)
		​​​​Niko						: rgb(70,49,125)
		​​​​Nissa						: rgb(70,49,125)
		​​​​Nixilis						: rgb(70,49,125)
		​​​​Oko							: rgb(70,49,125)
		​​​​Ral							: rgb(70,49,125)
		​​​​Rowan						: rgb(70,49,125)
		​​​​Saheeli						: rgb(70,49,125)
		​​​​Samut						: rgb(70,49,125)
		​​​​Sarkhan						: rgb(70,49,125)
		​​​​Serra						: rgb(70,49,125)
		​​​​Sivitri						: rgb(70,49,125)
		​​​​Sorin						: rgb(70,49,125)
		​​​​Szat						: rgb(70,49,125)
		​​​​Tamiyo						: rgb(70,49,125)
		​​​​Tasha						: rgb(70,49,125)
		​​​​Teferi						: rgb(70,49,125)
		​​​​Teyo						: rgb(70,49,125)
		​​​​Tezzeret					: rgb(70,49,125)
		​​​​Tibalt						: rgb(70,49,125)
		​​​​Tyvar						: rgb(70,49,125)
		​​​​Ugin						: rgb(70,49,125)
		​​​​Urza						: rgb(70,49,125)
		​​​​Venser						: rgb(70,49,125)
		​​​​Vivien						: rgb(70,49,125)
		​​​​Vraska						: rgb(70,49,125)
		​​​​Will						: rgb(70,49,125)
		​​​​Windgrace					: rgb(70,49,125)
		​​​​Wrenn						: rgb(70,49,125)
		​​​​Xenagos						: rgb(70,49,125)
		​​​​Yanggu						: rgb(70,49,125)
		​​​​Yanling						: rgb(70,49,125)
		​​​​Zariel						: rgb(70,49,125)
	#Spell
		​​​​​Adventure					: rgb(156,15,15)
		​​​​​Arcane						: rgb(156,15,15)
		​​​​​Lesson						: rgb(156,15,15)
		​​​​​Trap						: rgb(156,15,15)
	#Dungeon
		​​​​​​Undercity					: rgb(244,227,21)
	#Plane
		​​​​​​​Alara						: rgb(123,198,55)
		​​​​​​​Arkhos						: rgb(123,198,55)
		​​​​​​​Azgol						: rgb(123,198,55)
		​​​​​​​Belenon						: rgb(123,198,55)
		​​​​​​​Bolas’s Meditation Realm	: rgb(123,198,55)
		​​​​​​​Dominaria					: rgb(123,198,55)
		​​​​​​​Equilor						: rgb(123,198,55)
		​​​​​​​Ergamon						: rgb(123,198,55)
		​​​​​​​Fabacin						: rgb(123,198,55)
		​​​​​​​Innistrad					: rgb(123,198,55)
		​​​​​​​Iquatana					: rgb(123,198,55)
		​​​​​​​Ir							: rgb(123,198,55)
		​​​​​​​Kaldheim					: rgb(123,198,55)
		​​​​​​​Kamigawa					: rgb(123,198,55)
		​​​​​​​Karsus						: rgb(123,198,55)
		​​​​​​​Kephalai					: rgb(123,198,55)
		​​​​​​​Kinshala					: rgb(123,198,55)
		​​​​​​​Kolbahan					: rgb(123,198,55)
		​​​​​​​Kyneth						: rgb(123,198,55)
		​​​​​​​Lorwyn						: rgb(123,198,55)
		​​​​​​​Luvion						: rgb(123,198,55)
		​​​​​​​Mercadia					: rgb(123,198,55)
		​​​​​​​Mirrodin					: rgb(123,198,55)
		​​​​​​​Moag						: rgb(123,198,55)
		​​​​​​​Mongseng					: rgb(123,198,55)
		​​​​​​​Muraganda					: rgb(123,198,55)
		​​​​​​​New Phyrexia				: rgb(123,198,55)
		​​​​​​​Phyrexia					: rgb(123,198,55)
		​​​​​​​Pyrulea						: rgb(123,198,55)
		​​​​​​​Rabiah						: rgb(123,198,55)
		​​​​​​​Rath						: rgb(123,198,55)
		​​​​​​​Ravnica						: rgb(123,198,55)
		​​​​​​​Regatha						: rgb(123,198,55)
		​​​​​​​Segovia						: rgb(123,198,55)
		​​​​​​​Serra’s Realm				: rgb(123,198,55)
		​​​​​​​Shadowmoor					: rgb(123,198,55)
		​​​​​​​Shandalar					: rgb(123,198,55)
		​​​​​​​Ulgrotha					: rgb(123,198,55)
		​​​​​​​Valla						: rgb(123,198,55)
		​​​​​​​Vryn						: rgb(123,198,55)
		​​​​​​​Wildfire					: rgb(123,198,55)
		​​​​​​​Xerex						: rgb(123,198,55)
		​​​​​​​Zendikar					: rgb(123,198,55)

statistics dimension:
	name: power
	position hint: 050
	icon: stats/power.png
	split list: true
	show empty: false
	script: if filter_from_statistic() == "Filtered" or trim_from_statistic() then "" else power_statistic()
	group : 0
	group : 1
	group : 2
	group : 3
	group : 4
	group : 5
	group : 6
	group : 7
	group : 8
	group : 9
	group : 10
	group : 11+
	colors:
		0		: rgb(255,159,149)
		1		: rgb(255,117,102)
		2		: rgb(255,71,52)
		3		: rgb(255,39,15)
		4		: rgb(235,23,0)
		5		: rgb(201,20,0)
		6		: rgb(163,16,0)
		7		: rgb(125,12,0)
		8		: rgb(82,8,0)
		9		: rgb(61,6,0)
		10		: rgb(42,4,0)
		11+		: rgb(0,0,0)

statistics dimension:
	name: toughness
	position hint: 051
	icon: stats/toughness.png
	split list: true
	show empty: false
	script: if filter_from_statistic() == "Filtered" or trim_from_statistic() then "" else toughness_statistic()
	group : 0
	group : 1
	group : 2
	group : 3
	group : 4
	group : 5
	group : 6
	group : 7
	group : 8
	group : 9
	group : 10
	group : 11+
	colors:
		0		: rgb(186,205,230)
		1		: rgb(147,176,214)
		2		: rgb(103,144,198)
		3		: rgb(64,116,184)
		4		: rgb(37,97,175)
		5		: rgb(15,80,166)
		6		: rgb(13,71,146)
		7		: rgb(11,56,116)
		8		: rgb(8,41,87)
		9		: rgb(5,27,56)
		10		: rgb(1,4,26)
		11+		: rgb(0,0,0)

statistics dimension:
	name: loyalty
	position hint: 052
	icon: stats/loyalty.png
	split list: true
	show empty: false
	script: if filter_from_statistic() == "Filtered" or trim_from_statistic() then "" else loyalty_statistic()
	group : 0
	group : 1
	group : 2
	group : 3
	group : 4
	group : 5
	group : 6
	group : 7
	group : 8
	group : 9
	group : 10
	group : 11+
	colors:
		0		: rgb(200,200,242)
		1		: rgb(170,170,225)
		2		: rgb(138,133,205)
		3		: rgb(117,103,188)
		4		: rgb(105,80,175)
		5		: rgb(95,60,160)
		6		: rgb(85,53,143)
		7		: rgb(74,45,123)
		8		: rgb(62,39,109)
		9		: rgb(51,30,88)
		10		: rgb(38,22,67)
		11+		: rgb(0,0,0)

statistics dimension:
	name: rarity
	position hint: 100
	icon: stats/rarity.png
	show empty: false
	script: if filter_from_statistic() == "Filtered" or trim_from_statistic() then "" else rarity_statistic()
	group: basic land
	group: common
	group: uncommon
	group: rare
	group: mythic rare
	group: masterpiece
	group: special
	group: token
	colors:
		basic land		: rgb(103,64,35)
		common			: rgb(33,33,33)
		uncommon		: rgb(187,187,187)
		rare			: rgb(209,191,91)
		mythic rare		: rgb(210,96,34)
		masterpiece		: rgb(176,11,15)
		special			: rgb(112,38,128)
		token			: rgb(15,80,166)

statistics dimension:
	name: watermark
	position hint: 300
	icon: stats/watermark.png
	split list: true
	show empty: false
	script: if filter_from_statistic() == "Filtered" or trim_from_statistic() then "" else watermark_statistic()

statistics dimension:
	name: stamp
	position hint: 310
	icon: stats/stamp.png
	split list: true
	show empty: false
	script: if filter_from_statistic() == "Filtered" or trim_from_statistic() then "" else stamp_statistic()

statistics dimension:
	name: tombstone
	position hint: 320
	icon: stats/tombstone.png
	split list: true
	show empty: false
	script: if filter_from_statistic() == "Filtered" or trim_from_statistic() then "" else tombstone_statistic()

statistics dimension:
	name: keywords
	position hint: 400
	icon: stats/keywords.png
	split list: true
	show empty: false
	script: if filter_from_statistic() == "Filtered" or trim_from_statistic() then "" else keyword_usage(unique: true)

statistics dimension:
	name: word count
	position hint: 410
	icon: stats/text_length.png
	numeric: true
	bin size: 5
	show empty: false
	script: if filter_from_statistic() == "Filtered" or trim_from_statistic() then "" else total_word_count_statistic()

#statistics dimension:
#	name: line count
#	position hint: 410
#	icon: stats/text_length.png
#	numeric: true
#	show empty: false
#	script: if filter_from_statistic() == "Filtered" or trim_from_statistic() then "" else total_line_count_statistic()		# Not reliable atm.

statistics dimension:
	name: paragraph count
	position hint: 410
	icon: stats/text_length.png
	numeric: true
	show empty: false
	script: if filter_from_statistic() == "Filtered" or trim_from_statistic() then "" else total_paragraph_count_statistic()

statistics dimension:
	name: sorted notes words
	position hint: 420
	icon: stats/text_length.png
	description: Counts all the words that appear in the sorted notes.
	split list: true
	show empty: false
	script: if filter_from_statistic() == "Filtered" or trim_from_statistic() then "" else split_notes_words_statistic(card.notes)

statistics dimension:
	name: sorted notes clauses
	position hint: 420
	icon: stats/text_length.png
	description: Cuts the sorted notes at each semi-colon, each dot and each comma. So for example, if you write "Removal, Board Wipe; Draw" the card will count in the "Removal" category, the "Board Wipe" and the "Draw" category. You can make whatever categories you like.
	split list: true
	show empty: false
	script: if filter_from_statistic() == "Filtered" or trim_from_statistic() then "" else split_notes_clauses_statistic(card.notes)

statistics dimension:
	name: illustrator
	position hint: 500
	icon: stats/illustrator.png
	split list: true
	show empty: false
	script: if filter_from_statistic() == "Filtered" or trim_from_statistic() then "" else illustrator_statistic()

statistics dimension:
	name: template
	position hint: 600
	icon: stats/stylesheet.png
	show empty: false
	script: if filter_from_statistic() == "Filtered" or trim_from_statistic() then "" else stylesheet.short_name

statistics dimension:
	name: land drop hit % (Play)
	position hint: 700
	icon: stats/land_drops.png
	description: If the set is a deck, probability of hitting every single land drop up to the given turn, when on the play. Always excludes cards with the word 'commander' in their sorted notes, as well as tokens, emblems, dungeons, conspiracies, heroes, vanguards, schemes, planes and phenomenons.
	split list: true
	show empty: false
	script: land_drop_hit_percentage_statistic(start: 6)

statistics dimension:
	name: land drop hit % (Draw)
	position hint: 700
	icon: stats/land_drops.png
	description: Same as 'land drop hit % (Play)' but when on the draw
	split list: true
	show empty: false
	script: land_drop_hit_percentage_statistic(start: 7)

statistics dimension:
	name: color (Back Face)
	position hint: 900
	icon: stats/color.png
	description: Color of the back side or secondary face (like on adventures for example).
	show empty: false
	script: if filter_from_statistic() == "Filtered" or trim_from_statistic() then "" else back_face_color_statistic()
	group: C
	group: W
	group: U
	group: B
	group: R
	group: G
	group: WU
	group: WB
	group: WR
	group: WG
	group: UB
	group: UR
	group: UG
	group: BR
	group: BG
	group: RG
	group: WUB
	group: WUR
	group: WUG
	group: WBR
	group: WBG
	group: WRG
	group: UBR
	group: UBG
	group: URG
	group: BRG
	group: WUBR
	group: WUBG
	group: WURG
	group: WBRG
	group: UBRG
	group: WUBRG
	colors:
		C 		: rgb(101,104,94)
		W 		: rgb(255,231,185)
		U 		: rgb(15,80,166)
		B 		: rgb(22,22,22)
		R 		: rgb(156,15,15)
		G 		: rgb(68,144,15)
		WU		: rgb(254,192,80)
		WB		: rgb(254,192,80)
		WR		: rgb(254,192,80)
		WG		: rgb(254,192,80)
		UB		: rgb(254,192,80)
		UR		: rgb(254,192,80)
		UG		: rgb(254,192,80)
		BR		: rgb(254,192,80)
		BG		: rgb(254,192,80)
		RG		: rgb(254,192,80)
		WUB		: rgb(244,177,10)
		WUR		: rgb(244,177,10)
		WUG		: rgb(244,177,10)
		WBR		: rgb(244,177,10)
		WBG		: rgb(244,177,10)
		WRG		: rgb(244,177,10)
		UBR		: rgb(244,177,10)
		UBG		: rgb(244,177,10)
		URG		: rgb(244,177,10)
		BRG		: rgb(244,177,10)
		WUBR	: rgb(232,154,9)
		WUBG	: rgb(232,154,9)
		WURG	: rgb(232,154,9)
		WBRG	: rgb(232,154,9)
		UBRG	: rgb(232,154,9)
		WUBRG	: rgb(224,133,8)

statistics dimension:
	name: color (All Faces)
	position hint: 900
	icon: stats/color.png
	description: Combined color of all the sides/faces.
	show empty: false
	script: if filter_from_statistic() == "Filtered" or trim_from_statistic() then "" else all_faces_color_statistic()
	group: C
	group: W
	group: U
	group: B
	group: R
	group: G
	group: WU
	group: WB
	group: WR
	group: WG
	group: UB
	group: UR
	group: UG
	group: BR
	group: BG
	group: RG
	group: WUB
	group: WUR
	group: WUG
	group: WBR
	group: WBG
	group: WRG
	group: UBR
	group: UBG
	group: URG
	group: BRG
	group: WUBR
	group: WUBG
	group: WURG
	group: WBRG
	group: UBRG
	group: WUBRG
	colors:
		C 		: rgb(101,104,94)
		W 		: rgb(255,231,185)
		U 		: rgb(15,80,166)
		B 		: rgb(22,22,22)
		R 		: rgb(156,15,15)
		G 		: rgb(68,144,15)
		WU		: rgb(254,192,80)
		WB		: rgb(254,192,80)
		WR		: rgb(254,192,80)
		WG		: rgb(254,192,80)
		UB		: rgb(254,192,80)
		UR		: rgb(254,192,80)
		UG		: rgb(254,192,80)
		BR		: rgb(254,192,80)
		BG		: rgb(254,192,80)
		RG		: rgb(254,192,80)
		WUB		: rgb(244,177,10)
		WUR		: rgb(244,177,10)
		WUG		: rgb(244,177,10)
		WBR		: rgb(244,177,10)
		WBG		: rgb(244,177,10)
		WRG		: rgb(244,177,10)
		UBR		: rgb(244,177,10)
		UBG		: rgb(244,177,10)
		URG		: rgb(244,177,10)
		BRG		: rgb(244,177,10)
		WUBR	: rgb(232,154,9)
		WUBG	: rgb(232,154,9)
		WURG	: rgb(232,154,9)
		WBRG	: rgb(232,154,9)
		UBRG	: rgb(232,154,9)
		WUBRG	: rgb(224,133,8)

statistics dimension:
	name: color (Promos)
	position hint: 910
	icon: stats/color.png
	description: How many promo cards of each color combination are in the set.
	show empty: false
	script: if card.rarity == "special" or card.rarity == "masterpiece" then color_statistic() else ""
	group: C
	group: W
	group: U
	group: B
	group: R
	group: G
	group: WU
	group: WB
	group: WR
	group: WG
	group: UB
	group: UR
	group: UG
	group: BR
	group: BG
	group: RG
	group: WUB
	group: WUR
	group: WUG
	group: WBR
	group: WBG
	group: WRG
	group: UBR
	group: UBG
	group: URG
	group: BRG
	group: WUBR
	group: WUBG
	group: WURG
	group: WBRG
	group: UBRG
	group: WUBRG
	colors:
		C 		: rgb(101,104,94)
		W 		: rgb(255,231,185)
		U 		: rgb(15,80,166)
		B 		: rgb(22,22,22)
		R 		: rgb(156,15,15)
		G 		: rgb(68,144,15)
		WU		: rgb(254,192,80)
		WB		: rgb(254,192,80)
		WR		: rgb(254,192,80)
		WG		: rgb(254,192,80)
		UB		: rgb(254,192,80)
		UR		: rgb(254,192,80)
		UG		: rgb(254,192,80)
		BR		: rgb(254,192,80)
		BG		: rgb(254,192,80)
		RG		: rgb(254,192,80)
		WUB		: rgb(244,177,10)
		WUR		: rgb(244,177,10)
		WUG		: rgb(244,177,10)
		WBR		: rgb(244,177,10)
		WBG		: rgb(244,177,10)
		WRG		: rgb(244,177,10)
		UBR		: rgb(244,177,10)
		UBG		: rgb(244,177,10)
		URG		: rgb(244,177,10)
		BRG		: rgb(244,177,10)
		WUBR	: rgb(232,154,9)
		WUBG	: rgb(232,154,9)
		WURG	: rgb(232,154,9)
		WBRG	: rgb(232,154,9)
		UBRG	: rgb(232,154,9)
		WUBRG	: rgb(224,133,8)

statistics dimension:
	name: frame color
	position hint: 920
	icon: stats/color.png
	description: How many cards of each frame color are in the set. Only looking at the front face colors.
	show empty: false
	script: if filter_from_statistic() == "Filtered" or trim_from_statistic() then "" else primary_card_color(card.card_color)
	group: land
	group: colorless
	group: artifact
	group: white
	group: blue
	group: black
	group: red
	group: green
	group: multicolor
	group: hybrid
	colors:
		white		: rgb(255,231,185)
		blue		: rgb(15,80,166)
		black		: rgb(33,33,33)
		red			: rgb(156,15,15)
		green		: rgb(68,144,15)
		colorless	: rgb(101,104,94)
		artifact	: rgb(109,132,158)
		multicolor	: rgb(244,177,10)
		land		: rgb(103,64,35)
		hybrid		: rgb(112,38,128)

statistics dimension:
	name: omniverse color
	position hint: 930
	icon: stats/color.png
	show empty: false
	script: if filter_from_statistic() == "Filtered" or trim_from_statistic() then "" else omniverse_color_statistic(card.card_color)
	group: land
	group: colorless
	group: artifact
	group: white
	group: blue
	group: black
	group: red
	group: green
	group: purple
	group: pink
	group: yellow
	group: orange
	group: brown
	group: multicolor
	group: hybrid
	colors:
		white		: rgb(255,231,185)
		blue		: rgb(15,80,166)
		black		: rgb(33,33,33)
		red			: rgb(156,15,15)
		green		: rgb(68,144,15)
		purple		: rgb(150,100,160)
		pink		: rgb(255,175,200)
		yellow		: rgb(242,247,94)
		orange		: rgb(255,181,121)
		brown		: rgb(191,171,144)
		colorless	: rgb(101,104,94)
		artifact	: rgb(109,132,158)
		multicolor	: rgb(244,177,10)
		land		: rgb(103,64,35)
		hybrid		: rgb(112,38,128)

statistics dimension:
	name: cast. costs pips count
	position hint: 940
	icon: stats/color_pips.png
	description: Counts the number of casting costs that contain one colored pip. Repeat for all other amounts.
	split list: true
	show empty: false
	script: if filter_from_statistic() == "Filtered" or trim_from_statistic() then "" else cc_colored_pips_count_statistic()
	group: 0
	group: 1
	group: 2
	group: 3
	group: 4
	group: 5
	group: 6
	group: 7
	group: 8+
	colors:
		0	: rgb(101,104,94)
		1	: rgb(113,94,109)
		2	: rgb(125,84,124)
		3	: rgb(137,74,139)
		4	: rgb(149,64,154)
		5	: rgb(161,54,169)
		6	: rgb(173,44,184)
		7	: rgb(185,34,199)
		8+	: rgb(197,24,214)

statistics dimension:
	name: abil. costs pips count
	position hint: 940
	icon: stats/color_pips.png
	description: Counts the number of ability costs that contain one colored pip. Repeat for all other amounts.
	split list: true
	show empty: false
	script: if filter_from_statistic() == "Filtered" or trim_from_statistic() then "" else ability_colored_pips_count_statistic()
	group: 0
	group: 1
	group: 2
	group: 3
	group: 4
	group: 5
	group: 6
	group: 7
	group: 8+
	colors:
		0	: rgb(101,104,94)
		1	: rgb(113,94,109)
		2	: rgb(125,84,124)
		3	: rgb(137,74,139)
		4	: rgb(149,64,154)
		5	: rgb(161,54,169)
		6	: rgb(173,44,184)
		7	: rgb(185,34,199)
		8+	: rgb(197,24,214)

statistics dimension:
	name: all costs pips count
	position hint: 940
	icon: stats/color_pips.png
	description: Counts the number of costs that contain one colored pip. Repeat for all other amounts.
	split list: true
	show empty: false
	script: if filter_from_statistic() == "Filtered" or trim_from_statistic() then "" else colored_pips_count_totals_statistic()
	group: 0
	group: 1
	group: 2
	group: 3
	group: 4
	group: 5
	group: 6
	group: 7
	group: 8+
	colors:
		0	: rgb(101,104,94)
		1	: rgb(113,94,109)
		2	: rgb(125,84,124)
		3	: rgb(137,74,139)
		4	: rgb(149,64,154)
		5	: rgb(161,54,169)
		6	: rgb(173,44,184)
		7	: rgb(185,34,199)
		8+	: rgb(197,24,214)

statistics dimension:
	name: filter
	position hint: 1000
	icon: stats/filter.png
	description: Only count cards that match the conditions written in the statistics filter in the Set info tab.
	show empty: false
	script: filter_from_statistic()
	colors:
		Kept		: rgb(15,80,166)
		Filtered	: rgb(156,15,15)
