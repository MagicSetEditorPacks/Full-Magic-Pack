mse version: 2.0.0
short name: Symbol Printer
full name: Symbol Printer
position hint: 350
icon: icon.png
version: 2018-01-11
installer group: magic/Export/Symbols

depends on:
	package: magic.mse-game
	version: 2008-08-08

game: magic
create directory: true
file type: *.txt|*.txt|*.*|*.*

option field:
	type: text
	name: set code
	description: The three letter extension of your set name, used as filename.
option field:
	type: text
	name: width
	description: the width of the symbol images. Default is 25.
option field:
	type: text
	name: height
	description: the width of the symbol images. Default is 25 or same as width.
option field:
	type: boolean
	name: alternate
	initial: no
	description: does this set use an alternate rarity symbol? (choose colors below)
option field:
	type: color
	name: fill highlight
	initial: rgb(177, 150, 131)
	description: the highlight of the alternate rarity's fill
option field:
	type: color
	name: fill shadow
	initial: rgb(83, 67, 53)
	description: the highlight of the alternate rarity's fill
option field:
	type: boolean
	name: inverted common
	initial: no
	description: Export the inverted common symbol
option field:
	type: boolean
	name: special
	initial: no
	description: Export the special symbol
option field:
	type: boolean
	name: common
	initial: yes
	description: Export the common symbol
option field:
	type: boolean
	name: uncommon
	initial: yes
	description: Export the uncommon symbol
option field:
	type: boolean
	name: rare
	initial: yes
	description: Export the rare symbol
option field:
	type: boolean
	name: mythic rare
	initial: yes
	description: Export the mythic rare symbol
script:
	fill_color_1 := {options.fill_highlight}
	fill_color_2 := {options.fill_shadow}
	border_color_1 := {rgb(0,  0,  0)}
	border_color_2 := {rgb(0,  0,  0)}
	sym_width := { if options.width == "" then 25 else options.width }
	symbol_height := { if options.height == "" then sym_width() else options.height }
	symbol_width := { if options.width == "" then symbol_height() else sym_width()}

	bool_map := [options.common, options.inverted_common, options.uncommon, options.rare, options.mythic_rare, options.special, options.alternate]
	letter_map := ["c", "ic", "u", "r", "m", "s", "a"]
	var_map := [{symbol_variation(symbol: set.symbol, variation: "common")}, {symbol_variation(symbol: set.symbol, variation: "invertedcommon")}, {symbol_variation(symbol: set.symbol, variation: "uncommon")}, {symbol_variation(symbol: set.symbol, variation: "rare")}, {symbol_variation(symbol: set.symbol, variation: "mythic rare")}, {symbol_variation(symbol: set.symbol, variation: "special")}, {symbol_variation(symbol:set.symbol, border_radius:0.07, fill_type:"linear gradient", fill_color_1:fill_color_1(), fill_color_2:fill_color_2(), border_color_1:border_color_1(), border_color_2:border_color_2(), center_x:0.5, center_y:0.5, end_x:1, end_y:1)}]
	for i from 0 to 6 do if bool_map[i] then write_image_file(var_map[i](), file: letter_map[i] + set.set_code + ".png", width: symbol_width(), height: symbol_height())
