############################################################## Game Scripts
#### Determine the color in the card columns
card list color script:
	input := card.card_color
	if      input == "white"  then rgb(156,130,90)
	else if input == "blue"   then rgb(0,64,168)
	else if input == "black"  then rgb(0,0,0)
	else if input == "red"    then rgb(168,0,0)
	else if input == "green"  then rgb(0,168,0)
	else if input == "pink"   then rgb(210,60,140)
	else if input == "purple" then rgb(150,100,160)
	else if input == "yellow" then rgb(190,200,50)
	else if input == "brown"  then rgb(51, 10, 0)
	else if input == "orange" then rgb(255, 51, 0)
	else (
		artifact := chosen(choice:"artifact")
		land     := chosen(choice:"land")
		multi    := chosen(choice:"multicolor")
		hybrid   := chosen(choice:"hybrid")
		if      land                                      then rgb(109,62,39) # land
		else if multi and input != "artifact, multicolor" then rgb(130,110,0) # multicolor
		else if hybrid                                    then rgb(115,0,160) # hybrid
		else if artifact                                  then rgb(72,90,100) # artifact
		else                                                   rgb(119,83,83) # colorless
	)

#### Make some adjustments when creating a new card
import script:
	map := []
	
	if card.stylesheet == nil then (
		if		lang_setting("is_planeswalker")(card.super_type)
		then map := map + [stylesheet:"m15-mainframe-planeswalker"]
		
		else if	lang_setting("is_saga")(card.sub_type)
			or	lang_setting("is_class")(card.sub_type)
			or	lang_setting("is_case")(card.sub_type)
		then map := map + [stylesheet:"m15-saga"]
		
		else if	lang_setting("is_adventure")(card.sub_type)
			or	lang_setting("is_adventure")(card.sub_type_2)
		then map := map + [stylesheet:"m15-adventure"]
	)
	
	style := to_lower(if card.stylesheet == nil then (map["stylesheet"] or else "m15-altered") else card.stylesheet.folder_name)
	if		contains(style, match:"walker")
		or	contains(style, match:"pw")
		or	contains(style, match:"leveler")
		or	contains(style, match:"saga")
		or	contains(style, match:"class")
	then map := map + rule_text_to_level_text(1)
	
	map

