mse version:		2.5.0
game:				magic
short name:			Arcade
full name:			Secret Lair
icon:				card_sample.png
position hint:		096

version:			2024-10-01
depends on:
	package:			magic.mse-game
	version:			2014-06-25
depends on:
	package:			magic-mana-large.mse-symbol-font
	version:			2007-09-23
depends on:
	package:			magic-mana-small.mse-symbol-font
	version:			2007-09-23
depends on:
	package:			magic-modules.mse-include
	version:			2024-10-01
depends on:
	package:			magic-mainframe-extras.mse-include
	version:			2007-09-23

card width:			744
card height:		1039
card dpi:			297

### blanks by GenevensiS
### code by GenevensiS

############################################################## Extra scripts

init script:
	swap_fonts_pt_default :=
	[
		name: {"Incised901-NordItalic-AllCaps"},
		size: {25.0},
		color: {"white"},
		vertical: {0},
		italic: {"Beleren Bold"}
	]
	
	swap_fonts_body_default :=
	[
		name: {"MPlantin"},
		size: {28.0},
		color: {"white"},
		vertical: {0},
		italic: {"MPlantin-Italic"}
	]
	
	swap_fonts_type_default :=
	[
		name: {"Incised901-NordItalic-AllCaps"},
		size: {19},
		color: {"white"},
		vertical: {0},
		italic: {""}
	]
	
	swap_fonts_name_default :=
	[
		name: {"Mane-Regular"},
		size: {34.0},
		color: {"white"},
		vertical: {0},
		italic: {""}
	]
	
	invert_watermark_1 := { true }
	
	card_stamp_offset_top_1 := { if stamp_shape() == "triangle" then 4 else 0 }
	
	card_background := { "card/" + styling.cabinet + ".png" }
	card_ptbox := { "pt/" + styling.cabinet + ".png" }
	
	is_promo := { styling.promo }
	
	is_unsorted := { styling.remove_from_autocount }
	
	chop_top := { split := split_comma(styling.chop_text_box); if length(split) > 0 and split.0 != "" then clamp(split.0, maximum: 1500, minimum: -1500) else 0 }
	chop_bot := { split := split_comma(styling.chop_text_box); if length(split) > 1 and split.1 != "" then clamp(split.1, maximum: 1500, minimum: -1500) else 0 }
	
	popout_left :=		{ split := split_comma(styling.popout_art_coordinates); if length(split) > 3 and split.0 != "" then clamp(split.0, maximum: 1500, minimum: -500) else 0 }
	popout_top :=		{ split := split_comma(styling.popout_art_coordinates); if length(split) > 3 and split.1 != "" then clamp(split.1, maximum: 2000, minimum: -500) else 0 }
	popout_width :=		{ split := split_comma(styling.popout_art_coordinates); if length(split) > 3 and split.2 != "" then clamp(split.2, maximum: 1500, minimum: 0) else 0 }
	popout_height :=	{ split := split_comma(styling.popout_art_coordinates); if length(split) > 3 and split.3 != "" then clamp(split.3, maximum: 2000, minimum: 0) else 0 }
	
	art_left :=		{ if styling.stretch_art_to_whole_card then 0						else 55 }
	art_top :=		{ if styling.stretch_art_to_whole_card then 0						else 180 }
	art_width :=	{ if styling.stretch_art_to_whole_card then stylesheet.card_width	else 635 }
	art_height :=	{ if styling.stretch_art_to_whole_card then stylesheet.card_height	else 360 }
	
	art_mask :=
	{
		crop("image_mask.png", offset_x: art_left(), offset_y: art_top(), width: art_width(), height: art_height())
	}

############################################################## Extra style options

styling field:
	type:			text
	name:			popout art coordinates
	description:	The coordinates for the popout image field, formatted as "left,top,width,height". Used to make the illustration jump in front of the frame.
styling field:
	type:			boolean
	name:			stretch art to whole card
	description:	Make the image span the whole card instead of just the visible part. Use this to help make popout effects.
	initial:		no
styling field:
	type:			choice
	name:			cabinet
	description:	What should the shape of the card be?
	choice:			wheel of misfortune
	choice:			roiling vortex
	choice:			heat shimmer
	choice:			big score
	choice:			final fortune

include file: /magic-modules.mse-include/texts/styling_fields

include file: /magic-modules.mse-include/rarities/styling_fields

include file: /magic-modules.mse-include/watermarks/styling_fields

styling field:
	type:			package choice
	name:			overlay
	description:	Should there be an overlay applied, such as foil?
	match:			magic-overlay-*.mse-include
	required:		false
styling field:
	type:			boolean
	name:			remove from autocount
	description:	Removes the automatic card number for specific cards, to allow for overcounted cards like in Planeswalker Decks.
	initial:		no
styling field:
	type:			boolean
	name:			promo
	description:	Is this card a promo card, with the "P" rarity?
	initial:		no
styling field:
	type:			color
	name:			copyright text color
	description:	Color of the copyright, illustrator, card number, and set code text.
	choice:			white
	choice:			black
	initial:		white

styling field:
	type:			package choice
	name:			casting cost mana symbols
	description:	Mana symbols used for casting cost, name, banner, fuse and transformation reminder.
	match:			magic-mana-*.mse-symbol-font
	initial:		magic-mana-secret-lair-arcade.mse-symbol-font
styling field:
	type:			package choice
	name:			text box mana symbols
	description:	Mana symbols used inside rule text.
	match:			magic-mana-*.mse-symbol-font
	initial:		magic-mana-small.mse-symbol-font
styling field:
	type:			boolean
	name:			use ancestral mana symbols
	description:	Enables ancestral's modified generic mana.
	initial:		no
styling field:
	type:			boolean
	name:			use guild mana symbols
	description:	Use the Ravnica guild symbols instead of the official half/half circles for hybrid mana.
	initial:		no
styling field:
	type:			choice
	name:			tap symbol
	description:	What tap and untap symbols should be used on cards?
	choice:			modern
	choice:			old
	choice:			diagonal T
	initial:		modern
styling style:
	use ancestral mana symbols:
		choice images:
			yes:				/magic-modules.mse-include/symbol-fonts/generic_ancestral.png
			no:					/magic-modules.mse-include/symbol-fonts/generic_normal.png
	use guild mana symbols:
		choice images:
			yes:				/magic-modules.mse-include/symbol-fonts/hybrid_guild.png
			no:					/magic-modules.mse-include/symbol-fonts/hybrid_normal.png
	tap symbol:
		render style:	both
		choice images:
			modern:				/magic-modules.mse-include/symbol-fonts/tap_new.png
			old:				/magic-modules.mse-include/symbol-fonts/tap_old.png
			diagonal T:			/magic-modules.mse-include/symbol-fonts/tap_older.png

include file: /magic-modules.mse-include/fonts/styling_fields

############################################################## Card fields

include file: /magic-modules.mse-include/information/card_fields

include file: /magic-modules.mse-include/stamps/card_fields

include file: /magic-modules.mse-include/corners/card_fields

include file: /magic-modules.mse-include/watermarks/card_fields

include file: /magic-modules.mse-include/separators/card_fields

card style:
	############################# Background stuff
	border color:
		left:				0
		top:				0
		width:				{ stylesheet.card_width }
		height:				{ stylesheet.card_height }
		z index:			200
		mask:				border_mask.png
	card color:
		left:				0
		top:				0
		width:				{ stylesheet.card_width }
		height:				{ stylesheet.card_height }
		z index:			210
		popup style:		in place
		render style:		image
		image:				{ card_background() }
		mask:				card_mask.png
	############################# Name line
	name:
		left:
			script:
				if		styling.cabinet == "wheel of misfortune"	then	296
				else if	styling.cabinet == "roiling vortex"			then	279
				else if	styling.cabinet == "heat shimmer"			then	249
				else if	styling.cabinet == "big score"				then	298
				else														265
		top:				112
		right:				689
		bottom:				161
		alignment:			center middle shrink-overflow
		z index:			900
		font:
			name:				{ name_font() }
			italic name:		{ name_font_italic() }
			size:				{ name_font_size() }
			color:				{ name_font_color() }
	casting cost:
		right:				680
		top:				39
		#width:				300
		width:				{ max(30, card_style.casting_cost.content_width) + 5 }
		height:				67
		alignment:			middle right
		font:
			name:				MPlantin
			size:				60
		symbol font:
			name:				{ styling.casting_cost_mana_symbols }
			size:				60
		always symbol:		true
		z index:			920
	############################# Image
	image:
		left:				{ art_left() }
		top:				{ art_top() }
		width:				{ art_width() }
		height:				{ art_height() }
		z index:			100
		mask:				{ art_mask() }
	mainframe image:
		left:				{ popout_left() }
		top:				{ popout_top() }
		width:				{ popout_width() }
		height:				{ popout_height() }
		z index:			1010
	############################# Card type
	type:
		left:				50
		top:				598
		width:				630
		height:				46
		alignment:			middle left shrink-overflow
		z index:			900
		padding left:		10
		font:
			name:				{ type_font() }
			italic name:		{ type_font_italic() }
			size:				{ type_font_size() }
			color:				{ type_font_color() }
			shadow color:			black
			shadow displacement x:	3
			shadow displacement y:	3
			separator color:	red
	############################# Text box
	text:
		left:				66
		top:				{ 666 + chop_top() + (if is_stamped() then 3 else 0) + body_font_vertical() }
		right:				678
		bottom:				{ 948 - chop_bot() - if is_stamped() then 6 else 0 }
		z index:			900
		line height hard:	{ if is_modal(card.rule_text) then 0.9 else 1.2 }
		line height line:	1.5
		line height soft:	0.9
		line height hard max:	{ if is_modal(card.rule_text) then 1.0 else 1.3 }
		line height line max:	1.6
		alignment:
			script:
				if (styling.center_text == "short text only" and
				   not contains(match:"\n", card.rule_text) and
				   card.flavor_text == "<i-flavor></i-flavor>" and
				   card_style.text.content_lines <= 2) or
				   styling.center_text == "always"
				then "middle center"
				else "middle left"
		font:
			name:				{ body_font() }
			italic name:		{ body_font_italic() }
			size:				{ body_font_size() }
			scale down to:		7
			color:				{ body_font_color() }
		symbol font:
			name:				{ styling.text_box_mana_symbols }
			size:				{ body_font_size() }
			scale down to:		7
	############################# PT
	pt:
		left:				596
		top:				{ 928 + pt_font_vertical() }
		width:				99
		height:				47
		z index:			900
		alignment:			center middle shrink-overflow
		font:
			name:				{ pt_font() }
			size:				{ pt_font_size() }
			color:				{ pt_font_color() }
			shadow color:			black
			shadow displacement x:	4
			shadow displacement y:	4
			separator color:	red

############################################################## Extra card fields

extra card field:
	type:				choice
	name:				name texture
	editable:			false
	save value:			false
	show statistics:	false
	choice:				name texture
extra card field:
	type:				choice
	name:				pt box
	editable:			false
	save value:			false
	show statistics:	false
	choice:				pt box
extra card field:
	type:				color
	name:				card stamp border
	script:				card.border_color
	editable:			false
	save value:			false
	show statistics:	false
extra card field:
	type:				choice
	name:				card stamp rim
	script:				card.card_color
	editable:			false
	save value:			false
	show statistics:	false
extra card field:
	type:				choice
	name:				foil layer
	editable:			false
	save value:			false
	show statistics:	false
	choice:				foil layer

extra card style:
	name texture:
		left:				{ card_style.name.left }
		top:				{ card_style.name.top }
		width:				{ card_style.name.width }
		height:				{ card_style.name.height }
		z index:			901
		render style:		image
		image:				{ set_combine("name_texture.png", combine: "greater than 120") }
	pt box:
		left:				0
		top:				0
		width:				{ stylesheet.card_width }
		height:				{ stylesheet.card_height }
		z index:			840
		visible:			{ card.pt != "" }
		render style:		image
		image:				{ card_ptbox() }
	card stamp rim:
		left:				0
		top:				0
		width:				{ stylesheet.card_width }
		height:				{ stylesheet.card_height }
		z index:			330
		visible:			{ is_stamped() }
		render style:		image
		image:				stamp.png
	card stamp border:
		left:				0
		top:				0
		width:				{ stylesheet.card_width }
		height:				{ stylesheet.card_height }
		z index:			310
		visible:			{ is_stamped() }
		mask:				border_stamp_mask.png
	foil layer:
		left:				0
		top:				0
		width:				{ stylesheet.card_width }
		height:				{ stylesheet.card_height }
		z index:			1050
		visible:			{ styling.overlay != "none" and styling.overlay != "" }
		render style:		image
		image:				{ if styling.overlay == "" then "" else styling.overlay + "/overlay.png" }
