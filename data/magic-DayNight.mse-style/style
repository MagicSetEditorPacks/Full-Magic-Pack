mse version: 2.0.0
game: magic
short name: M15 Leveler D/N
full name: Levelers After M15 Day Night
icon: card-sample.png
installer group: magic/m15 style/leveler cards
position hint: 034

version: 2024-05-30
depends on:
	package: magic.mse-game
	version: 2014-06-25
depends on:
	package: magic-default-image.mse-include
	version: 2007-09-23
depends on:
	package: magic-modules.mse-include
	version: 2024-10-01
depends on:
	package: magic-mana-large.mse-symbol-font
	version: 2007-09-23
depends on:
	package: magic-mana-small.mse-symbol-font
	version: 2007-09-23

card width: 375
card height: 523
card dpi: 150
############################################################## Extra scripts
init script:
	# Load scripts for image box
	include file: /magic-default-image.mse-include/scripts
	
	# Should hybrids have a grey name?
	mask_hybrid_with_land := { styling.grey_hybrid_name }
	
	#Should multicolor lands with basic land types have a colored name?
	mask_multi_land_with_color := { styling.colored_multicolor_land_name }
	
	template_prefix := [card: "" card2: "" pt: "" stamp: "" identity: "/magic-modules.mse-include/indicators/"]
	template_suffix := [card: "card.jpg" card2: "card2.jpg" pt: "pt.png" stamp: "stamp.jpg" identity: "identity.png"]
	template      := { template_prefix[type] + input + template_suffix[type] }
	land_template := { template_prefix[type] + (if input == "a" then "c" else input) + "l" + template_suffix[type] }
	# Use land templates for previews because they show more contrast
	hybrid_previews := "land,hybrid"
	
	# Use the normal tap symbol
	mana_t := {
		if      styling.tap_symbol == "old"        then "old"
		else if styling.tap_symbol == "diagonal T" then "older"
		else                                            "new"
	}
	
	# Use guild mana symbols?
	guild_mana := { styling.use_guild_mana_symbols }
	
	# Is the card a promo card?
	is_promo := { styling.promo }
	shrink_type := {if styling.shrink_typeline_text != "" then to_int(styling.shrink_typeline_text) else 0 }
	shrink_name := {if styling.shrink_name_text != "" then to_int(styling.shrink_name_text) else 0 }
	top_box_font_cap := {if styling.top_box_font_cap != "" then to_int(styling.top_box_font_cap) else 0 }	
	
	# Declare the card shape.
	card_shape := { "leveler" }
	
	# Replacing the text_filter() from game file because all three rule text fields should call card.name
	card_name_replace :=
		replace@(
			match: "<atom-cardname><nospellcheck>CARDNAME</nospellcheck></atom-cardname>"
			replace: "<atom-cardname><nospellcheck>" + (if card.name=="" then "CARDNAME" else card.name) + "</nospellcheck></atom-cardname>")
	watermark_include := "/magic-modules.mse-include/watermarks"
	is_unsorted := {styling.remove_from_autocount}
############################################################## Set info fields
set info style:
	symbol:
		variation:
			name: invertedcommon
			border radius: 0.10
			fill type: solid
			fill color:   rgb(255,255,255)
			border color: rgb(0,0,0)
############################################################## Extra style options
styling field:
	type: text
	name: level label
	description: Should the level indicator say something other than "LEVEL"?
styling field:
	type: text
	name: shrink name text
	description: Reduces the name text N points.
styling field:
	type: text
	name: shrink typeline text
	description: Reduces the typeline text N points.
styling field:
	type: text
	name: top box font cap
	description: Controls the top text box font size N points.
styling field:
	type: text
	name: level fontsize top
	description: Controls the level box font size.
styling field:
	type: text
	name: level fontsize bottom
	description: Controls the level box font size.
styling field:
	type: boolean
	name: remove from autocount
	description: Removes the automatic card number for specific cards, to allow for overcounted cards like in Planeswalker Decks.
	initial: no
styling field:
	type: boolean
	name: grey hybrid name
	description: Use a grey background for the name and type line on hybrid cards. This is done on real cards.
styling field:
	type: boolean
	name: colored multicolor land name
	description: Use a colored background for the name and type on multicolor land cards with a basic land type. This is done on real cards.
styling field:
	type: boolean
	name: use guild mana symbols
	description: Use the Ravnica guild symbols instead of the official half/half circles for hybrid mana.
	initial: no
styling field:
	type: choice
	name: tap symbol
	description: What tap and untap symbols should be used on cards?
	initial: modern
	choice: modern
	choice: old
	choice: diagonal T
styling field:
	type: package choice
	name: text box mana symbols
	match: magic-mana-*.mse-symbol-font
	initial: magic-mana-small.mse-symbol-font
styling field:
	type: choice
	name: center text
	description: When to center text (short text only means only on one-line cards with no flavor text)
	choice: always
	choice: short text only
	choice: never
	initial: never
styling field:
	type: boolean
	name: promo
	description: Is this card a promo card, with the "P" rarity?
	initial: no
styling field:
	type: boolean
	name: inverted common symbol
	description: Should the common rarity symbol be inverted, like in Coldsnap?
	initial: no
styling field:
	type: package choice
	name: overlay
	description: Should there be an overlay applied, such as foil?
	match: magic-overlay-*.mse-include
	required: false
styling style:
	use guild mana symbols:
		choice images:
			yes: /magic-mana-small.mse-symbol-font/mana_guild_rg.png
			no:  /magic-mana-small.mse-symbol-font/mana_rg.png
	tap symbol:
		render style: both
		choice images:
			modern:     /magic-mana-large.mse-symbol-font/mana_t.png
			old:        /magic-mana-large.mse-symbol-font/mana_t_old.png
			diagonal T: /magic-mana-large.mse-symbol-font/mana_t_older.png
	center text:
		render style: both
		choice images:
			always:          /magic.mse-game/icons/center-all-text.png
			short text only: /magic.mse-game/icons/center-short-text.png
			never:           /magic.mse-game/icons/center-no-text.png
	inverted common symbol:
		choice images:
			no:  { symbol_variation(symbol: set.symbol, variation: "common") }
			yes: { symbol_variation(symbol: set.symbol, variation: "invertedcommon") }
############################################################## Card fields
include file: /magic-modules.mse-include/corners/card_fields
include file: /magic-modules.mse-include/information/card_fields
include file: /magic-modules.mse-include/stamps/card_fields
include file: /magic-modules.mse-include/card-symbols/card_fields
card style:
	############################# Background stuff
	card color:
		left:	0
		top:	0
		width:	375
		height:	523
		z index: 0
		render style: image
		popup style: in place
		image: { card_background() }
	############################# Name line
	name:
		left: { if card.card_symbol=="none" then 30 else 50 }
		top: 29
		right:  { 341 - card_style.casting_cost.content_width }
		height: { 23 - (0.5 * shrink_name()) }
		alignment: bottom shrink-overflow
		padding bottom: 0
		z index: 1
		font:
			name: Beleren Bold
			size: { 16 - shrink_name() }
			color: black
	casting cost:
		right: 346
		top: 30
		width: { max(30, card_style.casting_cost.content_width) + 5 }
		height: 23
		alignment: middle right
		font:
			name: MPlantin
			size: 15
		symbol font:
			name: magic-mana-large
			size: 15
			alignment: middle right
		always symbol: true
		z index: 2
		padding top: 0
	############################# Image
	image:
		left: 29
		top: 60
		width: 316
		height:	231
		z index: 1
		default: {default_image(card.card_color)}
	############################# Card type
	indicator:
		left: 31
		top: 300
		width: 17
		height: 17
		z index: 1
		render style: image
		visible: { has_identity() }
		image: { module_identity() }
	type:
		left: { if has_identity() then "52" else "32" }
		top: {298 + shrink_type() }
		width: { (if has_identity() then "290" else "310") - max(22,card_style.rarity.content_width) }
		height: { 20 - shrink_type() }
		alignment: top shrink-overflow
		z index: 1
		padding top: 2
		font:
			name: Beleren Bold
			size: { 13 - shrink_type() }
			color: black
			separator color: red
	rarity:
		right: 344
		top: 297
		width: 44
		height: 22
		z index: 2
		render style: image
		alignment: middle right
		include file: /magic-modules.mse-include/rarities/choice_images
	############################# Text box
	rule text:
		left: 29
		top: 330
		right: {if card.pt != "" then 286 else 342}
		height: 49
		font:
			name: MPlantin
			italic name: MPlantin-Italic
			size: { 14 - top_box_font_cap() }
			scale down to: 6
			color: black
		symbol font:
			name: { styling.text_box_mana_symbols }
			size: { 14 - top_box_font_cap() }
		alignment:
			script:
				if (styling.center_text == "short text only" and
				   not contains(match:"\n", card.rule_text) and
				   card.flavor_text == "<i-flavor></i-flavor>" and
				   card_style.text.content_lines <= 2) or
				   styling.center_text == "always"
				then "middle center"
				else "middle left"
		z index: 2
		padding left:   6
		padding right:  4
		line height hard: 1.2
		line height line: 1.5
		line height soft: 0.9
		line height hard max: 1.3
		line height line max: 1.6
	watermark:
		left: 21
		top: 328
		width: 331
		height: 142
		z index: 1
		render style: image
		alignment: middle center
		include file:	/magic.mse-game/watermarks/menu_choice_images
		image:			{ watermark_image_1() }
	############################# Levels
	level 1:
		z index: 3
		left: 38
		top: 400
		width: 34
		height:	22
		alignment: center middle shrink-overflow
		font:
			name: ModMatrix
			size: { if styling.level_fontsize_top == "" then 17 else styling.level_fontsize_top }
			weight: bold
			color: black
			shadow color: white
			shadow blur: 2
	level 2:
		z index: 3
		left: 38
		top: 450
		width: 34
		height:	22
		alignment: center middle shrink-overflow
		font:
			name: ModMatrix
			size: { if styling.level_fontsize_bottom == "" then 17 else styling.level_fontsize_bottom }
			weight: bold
			color: black
			shadow color: white
			shadow blur: 2
	############################# PT
	pt:
		z index: 3
		left: 293
		top: 341
		width: 60
		height: 28
		alignment: center middle shrink-overflow
		font:
			name: ModMatrix
			size: 16
			color: black
			separator color: red
	pt 2:
		z index: 3
		left: 293
		top: 392
		width: 60
		height: 28
		alignment: center middle shrink-overflow
		font:
			name: ModMatrix
			size: 16
			color: black
			separator color: red
	pt 3:
		z index: 3
		left: 293
		top: 443.5
		width: 60
		height: 28
		alignment: center middle shrink-overflow
		font:
			name: ModMatrix
			size: 16
			color: white
			separator color: red
############################################################## Extra card fields
extra card field:
	type: choice
	name: pt box
	script: card.card_color
	editable: false
	save value: false
extra card field:
	type: choice
	name: pt box 2
	script: card.card_color
	editable: false
	save value: false
extra card field:
	type: choice
	name: pt box 3
	script: card.card_color
	editable: false
	save value: false
extra card field:
	type: choice
	name: stamp
	script: card.card_color
	editable: false
	save value: false
extra card field:
	type: choice
	name: foil layer
	choice: foil
	save value: false
	editable: false
# Add the bevel and shadows for the levelup arrow.
extra card field:
	type: choice
	name: lvlup texture 1
	choice: image
	save value: false
	editable: false
# Add the bevel and shadows for the levelup arrow.
extra card field:
	type: choice
	name: lvlup texture 2
	choice: image
	save value: false
	editable: false
# This field gets set to combine mode multiply, to slightly darken first arrow.
extra card field:
	type: choice
	name: lvlup multiply 1
	choice: image
	save value: false
	editable: false
# This field gets set to combine mode multiply, to darken second arrow by more.
extra card field:
	type: choice
	name: lvlup multiply 2
	choice: image
	save value: false
	editable: false
# Add the word "LEVEL" to the first arrow.
extra card field:
	type: text
	name: lvl label 1
	editable: false
	save value: false
	script: if styling.level_label == "" then "LEVEL" else styling.level_label
# Repeat the word "LEVEL" with more shadow to give illusion of outline.
extra card field:
	type: text
	name: lvl label 1 copy 1
	editable: false
	save value: false
	script: if styling.level_label == "" then "LEVEL" else styling.level_label
# Add the word "LEVEL" to the second arrow.
extra card field:
	type: text
	name: lvl label 2
	editable: false
	save value: false
	script: if styling.level_label == "" then "LEVEL" else styling.level_label
# Repeat the word "LEVEL" with more shadow to give illusion of outline.
extra card field:
	type: text
	name: lvl label 2 copy 1
	editable: false
	save value: false
	script: if styling.level_label == "" then "LEVEL" else styling.level_label
# Repeat the first level with more shadow to give illusion of outline.
extra card field:
	type: text
	name: level 1 copy 1
	editable: false
	save value: false
	script: card.level_1
# Repeat the second level with more shadow to give illusion of outline.
extra card field:
	type: text
	name: level 2 copy 1
	editable: false
	save value: false
	script: card.level_2
# Forward the second rule text so we can intercept and replace card.name_2 with card.name.
extra card field:
	type: text
	name: forwarded rule text 2
	multi line: true
	save value: false
	script: card_name_replace(forward_editor(field: card.rule_text_2))
	description: The second rules text box
# Combine rule text 2 and flavor text to allow flavor on levelers.
extra card field:
	type: text
	name: rule text 3 with flavor
	multi line: true
	save value: false
	script:
		combined_editor(field1: card.rule_text_3, separator: "<line>\n</line>", field2: card.flavor_text)
	description: The third rules text box and flavor text for the card; use up and down arrows to switch
extra card style:
	pt box:
		left: 280
		top: 338.5
		width: 81
		height:	42
		z index: 1
		visible: { card.pt != "" }
		render style: image
		image: { card_ptbox() }
	pt box 2:
		left: 280
		top: 389.5
		width: 81
		height: 42
		z index: 2
		visible: { card.pt_2 != "" }
		render style: image
		image: {combine_blend(image1: leveler_ptbox2(), image2: "ptbox_multiply_1.png", combine: "multiply")}
	pt box 3:
		left: 280
		top: 440.5
		width: 81
		height: 42
		z index: 2
		visible: { card.pt_3 != "" }
		render style: image
		image: {combine_blend(image1: leveler_ptbox3(), image2: "ptbox_multiply_2.png", combine: "multiply")}
	stamp:
		left: 159
		top: 471
		width: 56
		height: 26
		z index: 1
		visible: { card.card_stamp != "none" }
		render style: image
		image: { if stamp_shape() == "triangle" then module_ubstamp() else module_stamp() }
	foil layer:
		left: 0
		top : 0
		width: 375
		height: 523
		z index: 1050
		render style: image
		image: {if styling.overlay == "" then nil else styling.overlay + "/overlay.png"}
		mask: { if is_rare() then "foil_mask_rare.png" else "foil_mask.png" }
	lvlup texture 1:
		left: 0
		top: 0
		width: 375
		height: 523
		z index: 2
		render style: image
		image: lvlup_texture_1.png
		visible: {card.level_1 != ""}
	lvlup texture 2:
		left: 0
		top: 0
		width: 375
		height: 523
		z index: 2
		render style: image
		image: lvlup_texture_2.png
		visible: {card.level_2 != ""}
	lvlup multiply 1:
		left: 0
		top: 0
		width: 375
		height: 523
		z index: 1
		render style: image
		image: {set_combine(input: "lvlup_multiply_1.png", combine: "multiply")}
		visible: {card.level_1 != ""}
	lvlup multiply 1:
		left: 0
		top: 0
		width: 375
		height: 523
		z index: 1
		render style: image
		image: {set_combine(input: "lvlup_multiply_2.png", combine: "multiply")}
		visible: {card.level_2 != ""}
	lvl label 1:
		left: 50
		top: 391
		width: 10
		height: 10
		z index: 3
		alignment: middle center
		font:
			name: MPlantin
			size: 5.5
			color: black
			shadow color: white
			shadow blur: 2
		symbol font:
			name: { styling.text_box_mana_symbols }
			size: 5.5
		visible: {card.level_1 != ""}
	lvl label 1 copy 1:
		left: 50
		top: 391
		width: 10
		height: 10
		z index: 3
		alignment: middle center
		font:
			name: MPlantin
			size: 5.5
			color: black
			shadow color: white
			shadow blur: 2
		symbol font:
			name: { styling.text_box_mana_symbols }
			size: 5.5
		visible: {card.level_1 != ""}
	lvl label 2:
		left: 50
		top: 441
		width: 10
		height: 10
		z index: 3
		alignment: middle center
		font:
			name: MPlantin
			size: 5.5
			color: black
			shadow color: white
			shadow blur: 2
		visible: {card.level_2 != ""}
	lvl label 2 copy 1:
		left: 50
		top: 441
		width: 10
		height: 10
		z index: 3
		alignment: middle center
		font:
			name: MPlantin
			size: 5.5
			color: black
			shadow color: white
			shadow blur: 2
		visible: {card.level_2 != ""}
	level 1 copy 1:
		z index: 3
		left: 38
		top: 400
		width: 34
		height:	22
		alignment: center middle shrink-overflow
		font:
			name: ModMatrix
			size: 17
			weight: bold
			color: black
			shadow color: white
			shadow blur: 2
	level 2 copy 1:
		z index: 3
		left: 38
		top: 450
		width: 34
		height:	22
		alignment: center middle shrink-overflow
		font:
			name: ModMatrix
			size: 17
			weight: bold
			color: black
			shadow color: white
			shadow blur: 2
	forwarded rule text 2:
		left: {if card.level_1 != "" then 103 else 29}
		top: 379
		right: {if card.pt_2 != "" then 286 else 342}
		height: 51
		font:
			name: MPlantin
			italic name: MPlantin-Italic
			size: { if styling.level_fontsize_top == "" then 14 else styling.level_fontsize_top }
			scale down to: 6
			color: black
		symbol font:
			name: { styling.text_box_mana_symbols }
			size: { if styling.level_fontsize_top == "" then 14 else styling.level_fontsize_top }
		alignment:
			script:
				if (styling.center_text == "short text only" and
				   not contains(match:"\n", card.rule_text) and
				   card.flavor_text == "<i-flavor></i-flavor>" and
				   card_style.text.content_lines <= 2) or
				   styling.center_text == "always"
				then "middle center"
				else "middle left"
		z index: 2
		padding left:   6
		padding right:  4
		line height hard: 1.2
		line height line: 1.5
		line height soft: 0.9
		line height hard max: 1.3
		line height line max: 1.6
	rule text 3 with flavor:
		left: {if card.level_2 != "" then 103 else 29}
		top: 430
		right: {if card.pt_3 != "" then 286 else 342}
		height: 51
		font:
			name: MPlantin
			italic name: MPlantin-Italic
			size: { if styling.level_fontsize_bottom == "" then 14 else styling.level_fontsize_bottom }
			scale down to: 6
			color: white
			shadow color: black
			shadow displacement x: -1
			shadow displacement y: 1
		symbol font:
			name: { styling.text_box_mana_symbols }
			size: { if styling.level_fontsize_bottom == "" then 14 else styling.level_fontsize_bottom }
		alignment:
			script:
				if (styling.center_text == "short text only" and
				   not contains(match:"\n", card.rule_text) and
				   card.flavor_text == "<i-flavor></i-flavor>" and
				   card_style.text.content_lines <= 2) or
				   styling.center_text == "always"
				then "middle center"
				else "middle left"
		z index: 2
		padding left:   6
		padding right:  4
		line height hard: 1.2
		line height line: 1.5
		line height soft: 0.9
		line height hard max: 1.3
		line height line max: 1.6
