mse version:		2.1.2
game:				magic
short name:			Eternal Night
full name:			Double Feature
icon:				card_sample.png
position hint:		095

version:			2024-05-20
depends on:
	package:			magic.mse-game
	version:			2014-06-25
depends on:
	package:			magic-watermarks.mse-include
	version:			2007-09-23
depends on:
	package:			magic-mana-large.mse-symbol-font
	version:			2007-09-23
depends on:
	package:			magic-mana-small.mse-symbol-font
	version:			2007-09-23
depends on:
	package:			magic-modules.mse-include
	version:			2024-05-20
depends on:
	package:			magic-mainframe-extras.mse-include
	version:			2007-09-23

card width:			375
card height:		523
card dpi:			150

### blanks by Card Conjurer and GenevensiS
### code by GenevensiS

############################################################## Extra scripts

init script:
	swap_fonts_body_default :=
	[
		name: {"MPlantin"},
		size: {13.0},
		color: { styling.rule_text_color },
		vertical: {0},
		italic: {"MPlantin-Italic"}
	]
	
	typeline_offset_top_1 := { - move_typeline()*523/1039 }
	swap_fonts_type_default :=
	[
		name: {"Beleren Bold"},
		size: {13.0},
		color: {"white"},
		vertical: {0},
		italic: {""}
	]
	
	move_typeline :=	{ if styling.tall_frame then 67 else 0 }
	
	transform_symbol_disabled_1 := { true }
	nameline_offset_top_1 := { -6 }
	nameline_offset_width_1 := { 2 }
	nameline_offset_left_1 := { -1 }
	swap_fonts_name_default :=
	[
		name: {"Beleren Bold"},
		size: {15.0},
		color: {"white"},
		vertical: {0},
		italic: {""}
	]
	
	horizontal_card_hybrid_2 :=
	{
		linear_blend(
			image1:	template(colors[0]),
			image2:	template(colors[1]),
			x1:		0.45,	y1:	0
			x2:		0.55,	y2: 0
		)
	}
	horizontal_card_hybrid :=
	[
		0:	horizontal_card_hybrid[0]
		1:	horizontal_card_hybrid[1]
		2:	horizontal_card_hybrid_2
		3:	horizontal_card_hybrid[3]
		4:	horizontal_card_hybrid[4]
		5:	horizontal_card_hybrid[5]
		6:	horizontal_card_hybrid[6]
		7:	horizontal_card_hybrid[7]
	]
	card_hybrid :=
	[
		radial:		card_hybrid["radial"]
		horizontal:	horizontal_card_hybrid
		overlay:	card_hybrid["overlay"]
		vertical:	card_hybrid["vertical"]
	]
	
	template_prefix :=
	[
		card:				"card/",
		cardtall:			"cardtall/",
		identity:			"/magic-modules.mse-include/indicators/"
	]
	template_suffix :=
	[
		card:				"card.png",
		cardtall:			"card.png",
		identity:			"identity.png"
	]
	template :=
	{
		template_prefix[type] + input + template_suffix[type]
	}
	land_template :=
	{
		template_prefix[type] + (if input == "a" then "c" else input) + template_suffix[type]
	}
	
	card_background :=			{ color_background(input: card.card_color, type: "card" + (if styling.tall_frame then "tall" else ""), base_hybrid: card_hybrid)}@(offset: 0)
	
	pure_colors :=
	{
		sort_text(
			order: if card_is_wedge(input) then "(wbgur)" else "(wubrg)",
			(if chosen(card.card_color, choice:"white")	then "w") +
			(if chosen(card.card_color, choice:"blue")	then "u") +
			(if chosen(card.card_color, choice:"black")	then "b") +
			(if chosen(card.card_color, choice:"red")	then "r") +
			(if chosen(card.card_color, choice:"green")	then "g")
		)
	}
	
	has_identity := { styling.color_indicator_dot }
	has_identity_2 := { false }
	
	is_promo :=			{ styling.promo }
	is_unsorted :=		{ styling.remove_from_autocount }
	
	chop_top :=			{ split := split_comma(styling.chop_text_box); if length(split) > 0 and split[0] != "" and split[0] != "-" then clamp(split[0], maximum:300, minimum:-300) else 0 }
	chop_bottom :=		{ split := split_comma(styling.chop_text_box); if length(split) > 1 and split[1] != "" and split[1] != "-" then clamp(split[1], maximum:300, minimum:-300) else 0 }
	chop_right :=		{ split := split_comma(styling.chop_text_box); if length(split) > 2 and split[2] != "" and split[2] != "-" then clamp(split[2], maximum:300, minimum:-300) else 0 }
	
	popout_left :=		{ split := split_comma(styling.popout_art_coordinates); if length(split) > 3 and split.0 != "" then clamp(split.0, minimum: -300,	maximum: 700) else 0 }
	popout_top :=		{ split := split_comma(styling.popout_art_coordinates); if length(split) > 3 and split.1 != "" then clamp(split.1, minimum: -300,	maximum: 1000) else 0 }
	popout_width :=		{ split := split_comma(styling.popout_art_coordinates); if length(split) > 3 and split.2 != "" then clamp(split.2, minimum: 0,		maximum: 700) else 0 }
	popout_height :=	{ split := split_comma(styling.popout_art_coordinates); if length(split) > 3 and split.3 != "" then clamp(split.3, minimum: 0,		maximum: 1000) else 0 }

############################################################## Extra style options

styling field:
	type:			text
	name:			popout art coordinates
	description:	The coordinates for the popout image field, formatted as "left,top,width,height". Used to make the illustration jump in front of the frame.
styling field:
	type:			boolean
	name:			stretch art to whole card
	description:	Make the image span the whole card instead of just the visible part. Use this to help make popout effects.
	initial:		no
styling field:
	type:			boolean
	name:			art filter
	description:	Make the art black and white?
	initial:		no
styling field:
	type:			boolean
	name:			tall frame
	description:	Leave more room for abilities?
	initial:		no
styling field:
	type:			text
	name:			textbox opacity percentage
	description:	Set the opacity percentage for textboxes and stripes. Opaque is 100, transparent is 0, default is 70.
styling field:
	type:			color
	name:			textbox color
	description:	Use the specified color for the textbox background.
	choice:
		name:			black
		color:			rgb(0,0,0)
	choice:
		name:			white
		color:			rgb(255,255,255)
	initial:		rgb(255,255,255)
styling field:
	type:			choice
	name:			number of textboxes
	description:	Number of textboxes for abilities and passives. Modify content of textboxes if this has trouble updating after being changed.
	choice:			one
	choice:			two
	choice:			three
	choice:			four
	choice:			five
	choice:			six
	initial:		three
styling field:
	type:			text
	name:			move separators
	description:	Moves the limits between abilities down by this many pixels. Use negatives to move up. Formatted as "1,2,3,4,5"
styling field:
	type:			text
	name:			move loyalty costs
	description:	Moves loyalty costs down by this many pixels. Use negatives to move up. Formatted as "1,2,3,4,5,6"

include file: /magic-modules.mse-include/texts/styling_fields

include file: /magic-modules.mse-include/rarities/styling_fields

include file: /magic-modules.mse-include/indicators/styling_fields

include file: /magic-modules.mse-include/watermarks/styling_fields

styling field:
	type:			package choice
	name:			overlay
	description:	Should there be an overlay applied, such as foil?
	match:			magic-overlay-*.mse-include
	required:		false

include file: /magic-modules.mse-include/information/styling_fields

include file: /magic-modules.mse-include/symbol-fonts/styling_fields

include file: /magic-modules.mse-include/fonts/styling_fields

############################################################## Card fields

include file: /magic-modules.mse-include/information/card_fields

include file: /magic-modules.mse-include/stamps/card_fields

include file: /magic-modules.mse-include/corners/card_fields

include file: /magic-modules.mse-include/watermarks/card_fields

include file: /magic-modules.mse-include/typelines/card_fields

include file: /magic-modules.mse-include/namelines/card_fields

card style:
	############################# Background stuff
	border color:
		left:				0
		top:				0
		width:				{ stylesheet.card_width }
		height:				{ stylesheet.card_height }
		z index:			200
		mask:				border_mask.png
	card color:
		left:				0
		top:				0
		width:				{ stylesheet.card_width }
		height:				{ stylesheet.card_height }
		z index:			210
		popup style:		in place
		render style:		image
		image:				{ card_background() }
		mask:				{ if styling.tall_frame then "card_tall_mask.png" else "card_mask.png" }
	############################# Image
	image:
		left:				{ if styling.stretch_art_to_whole_card then 0						else 25 }
		top:				{ if styling.stretch_art_to_whole_card then 0						else 51 }
		width:				{ if styling.stretch_art_to_whole_card then stylesheet.card_width	else 325 }
		height:				{ if styling.stretch_art_to_whole_card then stylesheet.card_height	else if get_alpha_percentage(styling.textbox_opacity_percentage, default: 70) > 0.995 then 240-move_typeline()*523/1039 else 430 }
		z index:			0
	mainframe image:
		left:				{ popout_left() }
		top:				{ popout_top() }
		width:				{ popout_width() }
		height:				{ popout_height() }
		z index:			1010
	############################# Text box
	text:
		left:				49
		top:				{ 327 + chop_top() - move_typeline()*523/1039 + (if is_stamped() then 2 else 0) + body_font_vertical() }
		right:				{ 342 - chop_right() }
		bottom:				{ 476 - chop_bottom() - if is_stamped() then 3 else 0 }
		z index:			900
		line height hard:	{ if is_modal(card.rule_text) then 0.9 else 1.2 }
		line height line:	1.5
		line height soft:	0.9
		line height hard max:	{ if is_modal(card.rule_text) then 1.0 else 1.3 }
		line height line max:	2.2
		alignment:
			script:
				if (styling.center_text == "short text only" and
				   not contains(match:"\n", card.rule_text) and
				   card.flavor_text == "<i-flavor></i-flavor>" and
				   card_style.text.content_lines <= 2) or
				   styling.center_text == "always"
				then "middle center"
				else "middle left"
		font:
			name:				{ body_font() }
			italic name:		{ body_font_italic() }
			size:				{ body_font_size() }
			scale down to:		7
			color:				{ body_font_color() }
		symbol font:
			name:				{ styling.text_box_mana_symbols }
			size:				{ body_font_size() }
			scale down to:		7

############################################################## Extra card fields

extra card field:
	type:				choice
	name:				card stamp rim
	script:				card.card_color
	editable:			false
	save value:			false
	show statistics:	false
extra card field:
	type:				color
	name:				card stamp border
	script:				card.border_color
	editable:			false
	save value:			false
	show statistics:	false
extra card field:
	type:				choice
	name:				foil layer
	editable:			false
	save value:			false
	show statistics:	false
	choice:				foil layer
extra card field:
	type:				choice
	name:				filtered image
	editable:			false
	save value:			false
	show statistics:	false
	choice:				filtered image

extra card style:
	card stamp rim:
		left:				0
		top:				0
		width:				{ stylesheet.card_width }
		height:				{ stylesheet.card_height }
		z index:			710
		visible:			{ is_stamped() }
		render style:		image
		image:				stamp_rim.png
	card stamp border:
		left:				0
		top:				0
		width:				{ stylesheet.card_width }
		height:				{ stylesheet.card_height }
		z index:			700
		visible:			{ is_stamped() }
		mask:				border_stamp_mask.png
	foil layer:
		left:				0
		top:				0
		width:				{ stylesheet.card_width }
		height:				{ stylesheet.card_height }
		z index:			1050
		visible:			{ styling.overlay != "none" and styling.overlay != "" }
		render style:		image
		image:				{ if styling.overlay == "" then "" else styling.overlay + "/overlay.png" }
		mask:				{ "foil_mask" + (if is_stamped() then "_rare" else "") + (if card.loyalty != "" then "_pt" else "") + ".png"}
	filtered image:
		left:				{ if styling.stretch_art_to_whole_card then 0 else 25 }
		top:				{ if styling.stretch_art_to_whole_card then 0 else 51 }
		width:				{ if styling.stretch_art_to_whole_card then stylesheet.card_width else 325 }
		height:				{ if styling.stretch_art_to_whole_card then stylesheet.card_height else if get_alpha_percentage(styling.textbox_opacity_percentage, default: 70) > 0.995 then 240-move_typeline()*523/1039 else 430 }
		z index:			0
		visible:			{ styling.art_filter }
		render style:		image
		image:				{ saturate(card.image, amount: -1) }
