mse version:		2.1.2
game:				magic
short name:			Includes Test
icon:				card_sample.png
position hint:		0

version:			2024-01-29
depends on:
	package:			magic.mse-game
	version:			2014-06-25
depends on:
	package:			magic-mana-large.mse-symbol-font
	version:			2007-09-23
depends on:
	package:			magic-mana-small.mse-symbol-font
	version:			2007-09-23
depends on:
	package:			magic-mainframe-extras.mse-include
	version:			2007-09-23

depends on:
	package:			magic-watermarks.mse-include
	version:			2024-01-29
depends on:
	package:			magic-identity-new.mse-include
	version:			2024-01-29
depends on:
	package:			magic-modules.mse-include
	version:			2024-05-20



card width:			744
card height:		1039
card dpi:			297


### blanks by Card Conjurer and GenevensiS
### code by GenevensiS


############################################################## Extra scripts

init script:
	template_prefix :=
	[
		card:				"card/",
		cardtall:			"cardtall/",
		identity:			"/magic-identity-new.mse-include/"
	]
	template_suffix :=
	[
		card:				"card.png",
		cardtall:			"card.png",
		identity:			"identity.png"
	]
	template :=
	{
		template_prefix[type] + input + template_suffix[type]
	}
	land_template :=
	{
		template_prefix[type] + (if input == "a" then "c" else input) + template_suffix[type]
	}
	
	card_background := { color_background(input: card.card_color, type: "card" + (if styling.tall_frame then "tall" else ""), base_hybrid: card_hybrid)}@(offset:0 )
	
	is_promo :=			{ styling.promo }
	is_unsorted :=		{ styling.remove_from_autocount }
	
	chop_top :=			{ split := split_comma(styling.chop_textbox); if length(split) > 0 and split[0] != "" and split[0] != "-" then clamp(split[0], maximum:500, minimum:-500) else 0 }
	chop_bottom :=		{ split := split_comma(styling.chop_textbox); if length(split) > 1 and split[1] != "" and split[1] != "-" then clamp(split[1], maximum:500, minimum:-500) else 0 }
	chop_right :=		{ split := split_comma(styling.chop_textbox); if length(split) > 2 and split[2] != "" and split[2] != "-" then clamp(split[2], maximum:500, minimum:-500) else 0 }
	
	shrink_name :=		{ if styling.shrink_name_text == "-" then 0 else if styling.shrink_name_text != "" then clamp(styling.shrink_name_text, minimum: -40, maximum: 24) else 0 }
	shrink_type :=		{ if styling.shrink_type_text == "-" then 0 else if styling.shrink_type_text != "" then clamp(styling.shrink_type_text, minimum: -40, maximum: 20) else 0 }
	
	use_main_rarity	:= { contains(set.mainframe_rarity_name, match: ".png") }
	
	alt_rarity := { styling.alt_rarity_color != "" }
	alt_rarity_color :=
	{
		string := "83,67,53:177,150,131:0,0,0:0,0,0:0.07:"
		if match(styling.alt_rarity_color, match:":$") then string := styling.alt_rarity_color
		colons := length(filter_text(string, match:":"))
		output := split_text(string, match:",|:")
		splits := split_text(string, match:":")
		if colons == 4
			then output := split_text(string+"0.07:", match:",|:")
		if colons == 3
			then output := split_text(string+splits[2]+"0.07:", match:",|:")
		else if colons == 2
			then output := split_text(string+"0,0,0:0,0,0:0.07:", match:",|:")
		else if colons == 1
			then output := split_text(string+splits[0]+":0,0,0:0,0,0:0.07:", match:",|:")
		output
	}
	alt_symbol :=
	{
		colors := alt_rarity_color()
		symbol_variation(
			symbol:			set.symbol,
			border_radius:	colors.12,
			fill_type:		"linear gradient",
			fill_color_1:	rgb(colors.0, colors.1, colors.2),
			fill_color_2:	rgb(colors.3, colors.4, colors.5),
			border_color_1:	rgb(colors.6, colors.7, colors.8),
			border_color_2:	rgb(colors.9, colors.10, colors.11),
			center_x:		0.5,
			center_y:		0.5,
			end_x:			1,
			end_y:			1
		)
	}
	
	rarity_right :=		{ split := split_comma(styling.rarity_coordinates); if length(split) > 0 and split.0 != "" then clamp(split.0, minimum: 0, maximum: 1000) else 684 }
	rarity_top :=		{ split := split_comma(styling.rarity_coordinates); if length(split) > 1 and split.1 != "" then clamp(split.1, minimum: 0, maximum: 1500) else 587 - move_typeline() }
	rarity_size :=		{ split := split_comma(styling.rarity_coordinates); if length(split) > 2 and split.2 != "" then clamp(split.2, minimum: 0, maximum: 1500) else 52 }
	rarity_left :=		{ rarity_right() - rarity_size() }
	
	popout_left :=		{ split := split_comma(styling.popout_art_coordinates); if length(split) > 3 and split.0 != "" then clamp(split.0, minimum: -500,	maximum: 1500) else 0 }
	popout_top :=		{ split := split_comma(styling.popout_art_coordinates); if length(split) > 3 and split.1 != "" then clamp(split.1, minimum: -500,	maximum: 2000) else 0 }
	popout_width :=		{ split := split_comma(styling.popout_art_coordinates); if length(split) > 3 and split.2 != "" then clamp(split.2, minimum: 0,		maximum: 1500) else 0 }
	popout_height :=	{ split := split_comma(styling.popout_art_coordinates); if length(split) > 3 and split.3 != "" then clamp(split.3, minimum: 0,		maximum: 2000) else 0 }
	
	move_typeline :=	{ if styling.tall_frame then 67 else 0 }
	
	
	
	
	
	### Loyalty include
	loyalty_textbox_mask :=
	{
		"textbox_" +
		(if styling.tall_frame then "tall_" else "") +
		(if is_stamped() then "stamp_" else "") +
		"mask.png"
	}
	include file: /magic-modules.mse-include/loyalty/init_script
	
	### Watermark include
	watermark_offset_height := { - move_typeline()/2 }
	
	swap_fonts_name_default := [
		name: {"Beleren Bold"},
		size: {30},
		color: {"white"},
		vertical: {0},
		italic: {""}
	]
	swap_fonts_type_default := [
		name: {"Beleren Bold"},
		size: {26},
		color: {"white"},
		vertical: {0},
		italic: {""}
	]
	swap_fonts_body_default := [
		name: {"MPlantin"},
		size: {26},
		color: {"black"},
		vertical: {0},
		italic: {"MPlantin-Italic"}
	]
	swap_fonts_pt_default := [
		name: {"Beleren Bold"},
		size: {30},
		color: {"white"},
		vertical: {0},
		italic: {""}
	]

	# init pride pinline scripts
	include file: /magic-modules.mse-include/pinlines/pride_scripts
	pinline_height := {
		if styling.tall_frame then 407
		else 475
	}
	pinline_mask_1 := { pride_mask_for(walker:true, tall:styling.tall_frame) }
	pinline_top := {102}

############################################################## Set info fields

set info style:
	symbol:
		variation:
			name:				invertedcommon
			border radius:		0.10
			fill type:			solid
			fill color:			rgb(255,255,255)
			border color:		rgb(0,0,0)


############################################################## Extra style options
styling field:
	type:			text
	name:			shrink name text
	description:	Shrinks name X pixels.
styling field:
	type:			text
	name:			shrink type text
	description:	Shrinks type X pixels.
styling field:
	type:			boolean
	name:			tall frame
	description:	Leave more room for abilities?
	initial:		no



### Loyalty include
include file: /magic-modules.mse-include/loyalty/styling_fields



styling field:
	type:			text
	name:			rule text font size cap
	description:	Caps the font size of the rules text and the flavor text. Default is 26.
styling field:
	type:			choice
	name:			center rule text
	description:	When to center text (short text means only on one-line cards with no flavor text)
	choice:			always
	choice:			short text only
	choice:			never
	initial:		never
styling field:
	type:			text
	name:			chop textbox
	description:	Formatted as "X,Y". Shrinks textbox X pixels from the top and Y from the bottom.
styling field:
	type:			boolean
	name:			color indicator dot
	description:	Use a dot in the typeline to indicate card color?
	initial:		no
styling field:
	type:			choice
	name:			holofoil stamps
	description:	Use the security holofoil stamps?
	choice:			yes, all foil
	choice:			yes, un/commons not foil
	choice:			only rares and mythics
	choice:			no
	initial:		only rares and mythics
styling field:
	type:			boolean
	name:			inverted common symbol
	description:	Should the common rarity symbol be inverted, like in Coldsnap?
	initial:		no
styling field:
	type:			text
	name:			alt rarity color
	description:	Use a custom color for the rarity symbol. Formatted as "R1,G1,B1:R2,G2,B2:..." 1 and 2 are fill color, 3 and 4 border color
styling field:
	type:			text
	name:			rarity coordinates
	description:	The coordinates for the set symbol, formatted as "right,top,size". Default is 684,587,52.
styling field:
	type:			choice
	name:			corners
	description:	What should the corners of the card look like?
	choice:			rounded and antialiased
	choice:			rounded
	choice:			none
	initial:		rounded and antialiased
styling field:
	type:			boolean
	name:			remove from autocount
	description:	Removes the automatic card number for specific cards, to allow for overcounted cards like in Planeswalker Decks.
	initial:		no
styling field:
	type:			boolean
	name:			promo
	description:	Is this card a promo card, with the "P" rarity?
	initial:		no
styling field:
	type:			color
	name:			copyright text color
	description:	Color of the copyright, illustrator, and set code text.
	choice:			white
	choice:			black
	initial:		white
	allow custom:	true
styling field:
	type:			package choice
	name:			casting cost mana symbols
	description:	Symbols used in the casting cost.
	match:			magic-mana-*.mse-symbol-font
	initial:		magic-mana-large.mse-symbol-font
styling field:
	type:			package choice
	name:			text box mana symbols
	description:	Symbols used in the rule text and flavor text.
	match:			magic-mana-*.mse-symbol-font
	initial:		magic-mana-small.mse-symbol-font
styling field:
	type:			text
	name:			name font
	description:	Font used for the name, type, and pt. Hover your mouse over the font file to see it's details, and write it's Title here.
styling field:
	type:			text
	name:			text font
	description:	Font used for the rule text. Hover your mouse over the font file to see it's details, and write it's Title here.
styling field:
	type:			text
	name:			text italic font
	description:	Font used for the flavor text and reminder texts. Hover your mouse over the font file to see it's details, and write it's Title here.
styling style:
	center rule text:
		render style:	both
		choice images:
			always:				/magic.mse-game/icons/center-all-text.png
			short text only:	/magic.mse-game/icons/center-short-text.png
			never:				/magic.mse-game/icons/center-no-text.png
	inverted common symbol:
		choice images:
			no:					{ symbol_variation(symbol: set.symbol, variation: "common") }
			yes:				{ symbol_variation(symbol: set.symbol, variation: "invertedcommon") }


############################################################## Card fields


### Includes
include file: /magic-modules.mse-include/loyalty/card_fields
include file: /magic-watermarks.mse-include/card_fields
include file: /magic-modules.mse-include/stamps/card_fields
include file: /magic-modules.mse-include/information/card_fields
include file: /magic-modules.mse-include/corners/card_fields
include file: /magic-modules.mse-include/namelines/card_fields
include file: /magic-modules.mse-include/typelines/card_fields
include file: /magic-modules.mse-include/pinlines/pride_card_fields



card style:
	############################# Background stuff
	border color:
		left:				0
		top:				0
		width:				{ stylesheet.card_width }
		height:				{ stylesheet.card_height }
		z index:			200
		mask:				border_mask.png
	card color:
		left:				0
		top:				0
		width:				{ stylesheet.card_width }
		height:				{ stylesheet.card_height }
		z index:			210
		popup style:		in place
		render style:		image
		image:				{ card_background() }
		mask:				{ if styling.tall_frame then "card_tall_mask.png" else "card_mask.png" }
	############################# Image
	image:
		left:				50
		top:				102
		width:				644
		height:				851
		z index:			0
	############################# Text box
	text:
		left:				97
		top:				{ 650 - move_typeline() + chop_top() + if is_stamped() then 4 else 0 }
		right:				{ 677 - chop_right() }
		bottom:				{ 947 - chop_bottom() - if is_stamped() then 7 else 0 }
		z index:			1200
		line height hard:	{ if is_modal(card.rule_text) then 0.9 else 1.2 }
		line height line:	1.5
		line height soft:	0.9
		line height hard max:	{ if is_modal(card.rule_text) then 1.0 else 1.3 }
		line height line max:	2.2
		alignment:
			script:
				if	(styling.center_rule_text == "short text only" and
					not contains(match:"\n", card.rule_text) and
					card.flavor_text == "<i-flavor></i-flavor>" and
					card_style.text.content_lines <= 2) or
					styling.center_rule_text == "always"
				then "middle center"
				else "middle left"
		font:
			name:				{ if styling.text_font == "" then "MPlantin" else styling.text_font }
			italic name:		{ if styling.text_italic_font == "" then "MPlantin-Italic" else styling.text_italic_font }
			size:				{ if styling.rule_text_font_size_cap != "" then to_number(styling.rule_text_font_size_cap) else 26 }
			scale down to:		12
			color:				{ styling.rule_text_color }
		symbol font:
			name:				{ styling.text_box_mana_symbols }
			size:				{ if styling.rule_text_font_size_cap != "" then to_number(styling.rule_text_font_size_cap) else 26 }
			scale down to:		12
	#watermark:
	#	left:				20
	#	top:				{ move := move_typeline(); if move > 0 then 658 - move/2 else 658 - move}
	#	right:				724
	#	bottom:				{ min(944, 944 - move_typeline()/2) }
	#	z index:			1150
	#	alignment:			middle center
	#	popup style:		in place
	#	render style:		image
	#	include file:		/magic.mse-game/watermarks/menu_choice_images
	#	image:				{ watermark_scripts[card.watermark](face:1) }


############################################################## Extra card fields

extra card field:
	type:				choice
	name:				card stamp rim
	script:				card.card_color
	editable:			false
	save value:			false
	show statistics:	false
extra card field:
	type:				color
	name:				card stamp border
	script:				card.border_color
	editable:			false
	save value:			false
	show statistics:	false

extra card style:
	card stamp rim:
		left:				0
		top:				0
		width:				{ stylesheet.card_width }
		height:				{ stylesheet.card_height }
		z index:			710
		visible:			{ is_stamped() }
		render style:		image
		image:				stamp_rim.png
	card stamp border:
		left:				0
		top:				0
		width:				{ stylesheet.card_width }
		height:				{ stylesheet.card_height }
		z index:			700
		visible:			{ is_stamped() }
		mask:				border_stamp_mask.png
