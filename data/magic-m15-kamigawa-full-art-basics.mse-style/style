mse version:		2.1.2
game:				magic
short name:			NEO Basics
full name:			Kamigawa Full Art
icon:				card_sample.png
position hint:		099

version:			2024-05-20
depends on:
	package:			magic.mse-game
	version:			2014-06-25
depends on:
	package:			magic-mana-large.mse-symbol-font
	version:			2007-09-23
depends on:
	package:			magic-mana-small.mse-symbol-font
	version:			2007-09-23
depends on:
	package:			magic-modules.mse-include
	version:			2024-10-01
depends on:
	package:			magic-mainframe-extras.mse-include
	version:			2007-09-23

card width:			744
card height:		1039
card dpi:			297

### blanks by GenevensiS
### code by GenevensiS

############################################################## Extra scripts

init script:
	typeline_disabled_1 := { styling.hide_type_text }
	typeline_offset_top_1 := { 274 }
	typeline_offset_width_1 := { 4 }
	typeline_offset_left_1 := { -2 }
	swap_fonts_type_default :=
	[
		name: {"Beleren Bold"},
		size: {26.5},
		color: { if styling.hide_type_text then rgba(0,0,0,0) else styling.text_color },
		vertical: {0},
		italic: {""}
	]
	
	nameline_disabled_1 := { styling.hide_name_text }
	transform_symbol_disabled_1 := { true }
	card_symbol_disabled_1 := { true }
	nameline_offset_top_1 := { -9 }
	nameline_offset_width_1 := { 6 }
	nameline_offset_left_1 := { -3 }
	swap_fonts_name_default :=
	[
		name: {"Beleren Bold"},
		size: {30.0},
		color: { if styling.hide_name_text then rgba(0,0,0,0) else styling.text_color },
		vertical: {0},
		italic: {""}
	]
	
	template_prefix :=
	[
		card:		"card/"
	]
	template_suffix :=
	[
		card:		"card.png"
	]
	template :=
	{
		template_prefix[type] + input + template_suffix[type]
	}
	land_template :=
	{
		template_prefix[type] + (if input == "a" then "c" else input) + template_suffix[type]
	}
	
	card_background :=
	{
		first_color := "card/" + type_to_letter_map[styling.land_type] + "card.png"
		if styling.second_land_type == "none" then first_color else (
		second_color := "card/" + type_to_letter_map[styling.second_land_type] + "card.png"
		linear_blend(
			image1: first_color,
			image2: second_color,
			x1: 0.3,  y1: 0,
			x2: 0.7,  y2: 0
		))
	}
	card_color :=
	{
		if styling.second_land_type == "none" then substring(type_to_color_map[styling.land_type] + ", land", begin: 2)
		else substring(type_to_color_map[styling.land_type] + type_to_color_map[styling.second_land_type] + ", land, horizontal", begin: 2)
	}
	card_color_filter :=
	{
		if styling.second_land_type == "none" then substring(type_to_color_map[styling.land_type] + ", land", begin: 2)
		else substring(type_to_color_map[styling.land_type] + type_to_color_map[styling.second_land_type] + ", land, horizontal", begin: 2)
	}
	
	card_full_name := { value }
	card_full_name_default := { type_to_name_map[styling.land_type + "," + styling.second_land_type] }
	type_to_name_map :=
	[
		"plains,none":			"Plains",
		"island,none":			"Island",
		"swamp,none":			"Swamp",
		"mountain,none":		"Mountain",
		"forest,none":			"Forest",
		"wastes,none":			"Wastes",
		
		"plains,wastes":		"Wasted Plains",
		"island,wastes":		"Wasted Island",
		"swamp,wastes":			"Wasted Swamp",
		"mountain,wastes":		"Wasted Mountain",
		"forest,wastes":		"Wasted Forest",
		"wastes,wastes":		"Wastes",
		
		"plains,plains":		"Plains",
		"island,plains":		"Tundra",
		"swamp,plains":			"Scrubland",
		"mountain,plains":		"Plateau",
		"forest,plains":		"Savannah",
		"wastes,plains":		"Wasted Plains",
		
		"plains,island":		"Tundra",
		"island,island":		"Island",
		"swamp,island":			"Underground Sea",
		"mountain,island":		"Volcanic Island",
		"forest,island":		"Tropical Island",
		"wastes,island":		"Wasted Island",
		
		"plains,swamp":			"Scrubland",
		"island,swamp":			"Underground Sea",
		"swamp,swamp":			"Swamp",
		"mountain,swamp":		"Badlands",
		"forest,swamp":			"Bayou",
		"wastes,swamp":			"Wasted Swamp",
		
		"plains,mountain":		"Plateau",
		"island,mountain":		"Volcanic Island",
		"swamp,mountain":		"Badlands",
		"mountain,mountain":	"Mountain",
		"forest,mountain":		"Taiga",
		"wastes,mountain":		"Wasted Mountain",
		
		"plains,forest":		"Savannah",
		"island,forest":		"Tropical Island",
		"swamp,forest":			"Bayou",
		"mountain,forest":		"Taiga",
		"forest,forest":		"Forest",
		"wastes,forest":		"Wasted Forest"
	]
	type_to_letter_map :=
	[
		plains:		"w",
		island:		"u",
		swamp:		"b",
		mountain:	"r",
		forest:		"g",
		wastes:		"c",
		none:		"none"
	]
	type_to_color_map :=
	[
		plains:		", white",
		island:		", blue",
		swamp:		", black",
		mountain:	", red",
		forest:		", green",
		wastes:		"",
		none:		", none"
	]
	
	is_promo := { styling.promo }
	
	is_unsorted := { styling.remove_from_autocount }
	
	popout_left :=		{ split := split_comma(styling.popout_art_coordinates); if length(split) > 3 and split.0 != "" then clamp(split.0, minimum: -500,	maximum: 800) else 0 }
	popout_top :=		{ split := split_comma(styling.popout_art_coordinates); if length(split) > 3 and split.1 != "" then clamp(split.1, minimum: -500,	maximum: 1100) else 0 }
	popout_width :=		{ split := split_comma(styling.popout_art_coordinates); if length(split) > 3 and split.2 != "" then clamp(split.2, minimum: 0,		maximum: 1500) else 0 }
	popout_height :=	{ split := split_comma(styling.popout_art_coordinates); if length(split) > 3 and split.3 != "" then clamp(split.3, minimum: 0,		maximum: 2000) else 0 }
	
	name_mask :=
	{
		"mask_name" +
		(if styling.second_land_type != "none" then "_dual" else "") +
		(if styling.second_land_type == "plains" or styling.second_land_type == "wastes" or styling.land_type == "plains" or styling.land_type == "wastes" then "_plains" else "") +
		".png"
	}
	
	plains_symbol_offset := { if styling.second_land_type == "plains" or styling.second_land_type == "wastes" or styling.land_type == "plains" or styling.land_type == "wastes" then 150 else 0 }
	symbol_offset := { if styling.second_land_type != "none" then 180 else 0 }
	two_two :=
	{
		(styling.second_land_type == "plains" or styling.second_land_type == "wastes") and (styling.land_type == "plains" or styling.land_type == "wastes")
	}

############################################################## Extra style options

styling field:
	type:			choice
	name:			land type
	description:	What type is this card?
	choice:			plains
	choice:			island
	choice:			swamp
	choice:			mountain
	choice:			forest
	choice:			wastes
	initial:		plains
styling field:
	type:			choice
	name:			second land type
	description:	What type is this card?
	choice:
		name:			none
		line below:		true
	choice:			plains
	choice:			island
	choice:			swamp
	choice:			mountain
	choice:			forest
	choice:			wastes
	initial:		none
styling field:
	type:			text
	name:			popout art coordinates
	description:	The coordinates for the popout image field. Formatted as "left,top,width,height". Used to make the illustration jump in front of the frame.
styling field:
	type:			boolean
	name:			stretch art to whole card
	description:	Make the image span the whole card instead of just the visible part? Use this to help make popout effects.
	initial:		no
styling field:
	type:			boolean
	name:			hide name text
	description:	Make the nameline visible to edit it, then turn it back invisible.
	initial:		yes
styling field:
	type:			boolean
	name:			hide type text
	description:	Make the typeline visible to edit it, then turn it back invisible.
	initial:		yes
styling field:
	type:			color
	name:			text color
	description:	Color used for the text.
	choice:
		name:			black
		color:			rgb(0,0,0)
	choice:
		name:			white
		color:			rgb(255,255,255)
	initial:		white
styling field:
	type:			color
	name:			textbox color
	description:	Color used for the textbox background.
	choice:
		name:			use card color
		color:			rgb(255,255,254)
	initial:		rgb(255,255,254)

include file: /magic-modules.mse-include/rarities/styling_fields

styling field:
	type:			package choice
	name:			overlay
	description:	Should there be an overlay applied, such as foil?
	match:			magic-overlay-*.mse-include
	required:		false
styling field:
	type:			choice
	name:			border
	description:	Use a border?
	choice:			yes
	choice:			only copyright
	choice:			no
	initial:		yes

include file: /magic-modules.mse-include/information/styling_fields

############################################################## Card fields

include file: /magic-modules.mse-include/information/card_fields

include file: /magic-modules.mse-include/stamps/card_fields

include file: /magic-modules.mse-include/corners/card_fields

include file: /magic-modules.mse-include/namelines/card_fields

include file: /magic-modules.mse-include/typelines/card_fields

card style:
	############################# Background stuff
	border color:
		left:				0
		top:				0
		width:				{ stylesheet.card_width }
		height:				{ stylesheet.card_height }
		z index:			100
		visible:			{ styling.border != "no" }
		mask:				{ if styling.border == "yes" then "mask_background_border.png" else "mask_background_borderless_border.png" }
	############################# Image
	image:
		left:				{ if styling.stretch_art_to_whole_card then 0							else if styling.border != "yes" then 0						else 30 }
		top:				{ if styling.stretch_art_to_whole_card then 0							else if styling.border != "yes" then 0						else 30 }
		width:				{ if styling.stretch_art_to_whole_card then stylesheet.card_width		else if styling.border != "yes" then stylesheet.card_width	else 684 }
		bottom:				{ if styling.stretch_art_to_whole_card then stylesheet.card_height + 1	else if styling.border != "no"	then 954					else stylesheet.card_height + 1 }
		z index:			0
	mainframe image:
		left:				{ popout_left() }
		top:				{ popout_top() }
		width:				{ popout_width() }
		height:				{ popout_height() }
		z index:			1010

############################################################## Extra card fields

extra card field:
	type:				color
	name:				card stamp border
	script:				card.border_color
	editable:			false
	save value:			false
	show statistics:	false
extra card field:
	type:				choice
	name:				card color
	editable:			false
	save value:			false
	show statistics:	false
	script:
		styling.land_type
		styling.second_land_type
		card_color()
extra card field:
	type:				choice
	name:				first type
	editable:			false
	save value:			false
	show statistics:	false
	choice:				first type
extra card field:
	type:				choice
	name:				second type
	editable:			false
	save value:			false
	show statistics:	false
	choice:				second type
extra card field:
	type:				choice
	name:				type separator
	editable:			false
	save value:			false
	show statistics:	false
	choice:				type separator
extra card field:
	type:				choice
	name:				first symbol
	editable:			false
	save value:			false
	show statistics:	false
	choice:				first symbol
extra card field:
	type:				choice
	name:				second symbol
	editable:			false
	save value:			false
	show statistics:	false
	choice:				second symbol
extra card field:
	type:				choice
	name:				foil layer
	editable:			false
	save value:			false
	show statistics:	false
	choice:				foil layer

extra card style:
	card stamp border:
		left:				0
		top:				0
		width:				{ stylesheet.card_width }
		height:				{ stylesheet.card_height }
		z index:			110
		visible:			{ styling.border != "no" and is_stamped() }
		mask:				{ if card.card_stamp == "universes beyond" then "mask_stamp_background_border_triangle.png" else "mask_stamp_background_border.png" }
	card color:
		left:				58
		top:				55
		width:				194
		height:				855
		z index:			200
		popup style:		in place
		render style:		image
		image:				{ if styling.textbox_color == rgb(255,255,254) then card_background() else recolor_image("name_color.png", color: styling.textbox_color) }
		mask:				{ name_mask() }
	first type:
		left:				{ if two_two() then 91 else 76 }
		top:				94
		width:				{ if two_two() then 130 else 160 }
		height:				{ if two_two() then 225 else 295 }
		z index:			3000
		render style:		image
		image:				{ recolor_image("type_" + styling.land_type + ".png", color: styling.text_color) }
	second type:
		left:				{ if two_two() then 91 else 76 }
		top:				{ 272 + (if styling.land_type == "plains" or styling.land_type == "wastes" then 140 else 0) - (if two_two() then 70 else 0) }
		width:				{ if two_two() then 130 else 160 }
		height:				{ if two_two() then 225 else 295 }
		z index:			3000
		visible:			{ styling.second_land_type != "none" }
		render style:		image
		image:				{  recolor_image("type_" + styling.second_land_type + ".png", color: styling.text_color) }
	type separator:
		left:				76
		top:				{ 240 + (if styling.land_type == "plains" or styling.land_type == "wastes" then 136 else 0) - (if two_two() then 68 else 0) }
		width:				160
		height:				30
		z index:			3000
		visible:			{ styling.second_land_type != "none" }
		render style:		image
		image:				{  recolor_image("type_sep.png", color: styling.text_color) }
	first symbol:
		left:				76
		top:				{ 253 + plains_symbol_offset() + symbol_offset() }
		width:				160
		height:				164
		z index:			3000
		render style:		image
		image:				{  recolor_image("symbol_" + styling.land_type + ".png", color: styling.text_color) }
	second symbol:
		left:				76
		top:				{ 401 + plains_symbol_offset() + symbol_offset() }
		width:				160
		height:				164
		z index:			3000
		visible:			{ styling.second_land_type != "none" }
		render style:		image
		image:				{  recolor_image("symbol_" + styling.second_land_type + ".png", color: styling.text_color) }
	foil layer:
		left:				0
		top:				0
		width:				{ stylesheet.card_width }
		height:				{ stylesheet.card_height }
		z index:			1050
		visible:			{ styling.overlay != "none" and styling.overlay != "" }
		render style:		image
		image:				{ if styling.overlay == "" then "" else styling.overlay + "/overlay.png" }
