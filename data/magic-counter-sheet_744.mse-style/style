mse version:		2.1.2
game:				magic
short name:			Counter Sheet
full name:			Punch-Out Counters
icon:				card_sample.png
position hint:		999

version:			2024-05-20
depends on:
	package:			magic.mse-game
	version:			2014-06-25
depends on:
	package:			magic-modules.mse-include
	version:			2024-05-20
depends on:
	package:			magic-mana-large.mse-symbol-font
	version:			2007-09-23
depends on:
	package:			magic-mana-small.mse-symbol-font
	version:			2007-09-23
depends on:
	package:			magic-mainframe-extras.mse-include
	version:			2007-09-23

card width:			744
card height:		1039
card dpi:			297

### blanks by GenevensiS
### code by GenevensiS

############################################################## Extra scripts

init script:
	card_shape := { "counter" }
	
	card_full_name := { value }
	card_full_name_default := { "Counter Sheet" }
	
	has_identity :=		{ false }
	has_identity_2 :=	{ false }
	
	is_promo :=			{ styling.promo }
	
	is_unsorted :=		{ styling.remove_from_autocount }
	
	symbol_offset :=	{ offset(input, counter: counter, entity: "symbol") }
	text_offset :=		{ offset(input, counter: counter, entity: "text") }
	offset :=
	{
		field := styling[entity + "_" + counter + "_offsets"] or else ""
		split := split_comma(field)
		if length(split) > input and split[input] != "" and split[input] != "-" then clamp(split[input], maximum:500, minimum:-500) else 0
	}
	
	information_offset_top_1 := { 10 }

############################################################## Extra style options

styling field:
	type:			boolean
	name:			hide name text
	description:	Make the nameline visible to edit it, then turn it back invisible.
	initial:		yes
styling field:
	type:			color
	name:			background color
	description:	Use the specified color for the background.
	choice:
		name:			black
		color:			rgb(0,0,0)
	choice:
		name:			white
		color:			rgb(255,255,255)
	initial:		black
styling field:
	type:			color
	name:			inner line color
	description:	Use the specified color for the inner lines.
	choice:
		name:			black
		color:			rgb(0,0,0)
	choice:
		name:			white
		color:			rgb(255,255,255)
	choice:
		name:			canon
		color:			rgb(158,47,62)
	initial:		rgb(158,47,62)
styling field:
	type:			color
	name:			outer line color
	description:	Use the specified color for the outer lines.
	choice:
		name:			black
		color:			rgb(0,0,0)
	choice:
		name:			white
		color:			rgb(255,255,255)
	choice:
		name:			canon
		color:			rgb(36,155,209)
	initial:		rgb(36,155,209)
styling field:
	type:			color
	name:			symbol color
	description:	Use the specified color for the symbols.
	choice:
		name:			black
		color:			rgb(0,0,0)
	choice:
		name:			white
		color:			rgb(255,255,255)
	initial:		white
styling field:
	type:			color
	name:			text color
	description:	Use the specified color for the texts.
	choice:
		name:			black
		color:			rgb(0,0,0)
	choice:
		name:			white
		color:			rgb(255,255,255)
	initial:		white
styling field:
	type:			text
	name:			symbol 1 custom image location
	description:	The location of a PNG image inside magic-mainframe-extras.mse-include, to be used for the top left symbol.
styling field:
	type:			text
	name:			symbol 1 offsets
	description:	Formatted as "left,top,width,height". Moves and stretches the top left symbol by that many pixels.
styling field:
	type:			text
	name:			text 1 offsets
	description:	Formatted as "left,top,width,height". Moves and stretches the top left text box by that many pixels.
styling field:
	type:			text
	name:			symbol 2 custom image location
	description:	The location of a PNG image inside magic-mainframe-extras.mse-include, to be used for the top right symbol.
styling field:
	type:			text
	name:			symbol 2 offsets
	description:	Formatted as "left,top,width,height". Moves and stretches the top right symbol by that many pixels.
styling field:
	type:			text
	name:			text 2 offsets
	description:	Formatted as "left,top,width,height". Moves and stretches the top right text box by that many pixels.
styling field:
	type:			text
	name:			symbol 3 custom image location
	description:	The location of a PNG image inside magic-mainframe-extras.mse-include, to be used for the middle left symbol.
styling field:
	type:			text
	name:			symbol 3 offsets
	description:	Formatted as "left,top,width,height". Moves and stretches the middle left symbol by that many pixels.
styling field:
	type:			text
	name:			text 3 offsets
	description:	Formatted as "left,top,width,height". Moves and stretches the middle left text box by that many pixels.
styling field:
	type:			text
	name:			symbol 4 custom image location
	description:	The location of a PNG image inside magic-mainframe-extras.mse-include, to be used for the middle right symbol.
styling field:
	type:			text
	name:			symbol 4 offsets
	description:	Formatted as "left,top,width,height". Moves and stretches the middle right symbol by that many pixels.
styling field:
	type:			text
	name:			text 4 offsets
	description:	Formatted as "left,top,width,height". Moves and stretches the middle right text box by that many pixels.
styling field:
	type:			text
	name:			symbol 5 custom image location
	description:	The location of a PNG image inside magic-mainframe-extras.mse-include, to be used for the bottom left symbol.
styling field:
	type:			text
	name:			symbol 5 offsets
	description:	Formatted as "left,top,width,height". Moves and stretches the bottom left symbol by that many pixels.
styling field:
	type:			text
	name:			text 5 offsets
	description:	Formatted as "left,top,width,height". Moves and stretches the bottom left text box by that many pixels.
styling field:
	type:			text
	name:			symbol 6 custom image location
	description:	The location of a PNG image inside magic-mainframe-extras.mse-include, to be used for the bottom right symbol.
styling field:
	type:			text
	name:			symbol 6 offsets
	description:	Formatted as "left,top,width,height". Moves and stretches the bottom right symbol by that many pixels.
styling field:
	type:			text
	name:			text 6 offsets
	description:	Formatted as "left,top,width,height". Moves and stretches the bottom right text box by that many pixels.
styling field:
	type:			package choice
	name:			overlay
	description:	Should there be an overlay applied, such as foil?
	match:			magic-overlay-*.mse-include
	required:		false

include file: /magic-modules.mse-include/information/styling_fields

styling field:
	type:			boolean
	name:			use ancestral mana symbols
	description:	Enables ancestral's modified generic mana.
	initial:		no
styling field:
	type:			boolean
	name:			use guild mana symbols
	description:	Use the Ravnica guild symbols instead of the official half/half circles for hybrid mana.
	initial:		no
styling field:
	type:			choice
	name:			tap symbol
	description:	What tap and untap symbols should be used on cards?
	choice:			modern
	choice:			old
	choice:			diagonal T
	initial:		modern
styling field:
	type:			package choice
	name:			mana symbols
	description:	Symbol font used.
	match:			magic-mana-*.mse-symbol-font
	initial:		magic-mana-small.mse-symbol-font
styling field:
	type:			text
	name:			text font
	description:	Font used for the rule text. Hover your mouse over the font file to see it's details, and write it's Title here.

############################################################## Card fields

include file: /magic-modules.mse-include/corners/card_fields

card style:
	name:
		left:				30
		top:				10
		right:				714
		height:				50
		z index:			1000
		alignment:			middle center shrink-overflow
		font:
			name:				Beleren Bold
			size:				30
			color:				{ if styling.hide_name_text then rgba(0,0,0,0) else styling.text_color }
	level 1 text:
		left:				{ 128	+ text_offset(0, counter: 1) - text_offset(2, counter: 1) }
		top:				{ 196	+ text_offset(1, counter: 1) - text_offset(3, counter: 1) }
		width:				{ 175	+ 2*text_offset(2, counter: 1) }
		height:				{ 59	+ 2*text_offset(3, counter: 1) }
		z index:			400
		alignment:			middle center shrink-overflow
		font:
			name:				{ if styling.text_font == "" then "HanleyPro-Sans" else styling.text_font }
			size:				18
			scale down to:		6
			color:				{ styling.text_color }
		symbol font:
			name:				{ styling.mana_symbols }
			size:				18
			scale down to:		6
		line height hard:	1.1
		line height line:	1.6
		line height soft:	0.75
		line height hard max:	1.3
		line height line max:	1.7
		line height soft max:	0.75
	level 2 text:
		left:				{ 441	+ text_offset(0, counter: 2) - text_offset(2, counter: 2) }
		top:				{ 196	+ text_offset(1, counter: 2) - text_offset(3, counter: 2) }
		width:				{ 175	+ 2*text_offset(2, counter: 2) }
		height:				{ 59	+ 2*text_offset(3, counter: 2) }
		z index:			400
		alignment:			middle center shrink-overflow
		font:
			name:				{ if styling.text_font == "" then "HanleyPro-Sans" else styling.text_font }
			size:				18
			scale down to:		6
			color:				{ styling.text_color }
		symbol font:
			name:				{ styling.mana_symbols }
			size:				18
			scale down to:		6
		line height hard:	1.1
		line height line:	1.6
		line height soft:	0.75
		line height hard max:	1.3
		line height line max:	1.7
		line height soft max:	0.75
	level 3 text:
		left:				{ 128	+ text_offset(0, counter: 3) - text_offset(2, counter: 3) }
		top:				{ 508	+ text_offset(1, counter: 3) - text_offset(3, counter: 3) }
		width:				{ 175	+ 2*text_offset(2, counter: 3) }
		height:				{ 59	+ 2*text_offset(3, counter: 3) }
		z index:			400
		alignment:			middle center shrink-overflow
		font:
			name:				{ if styling.text_font == "" then "HanleyPro-Sans" else styling.text_font }
			size:				18
			scale down to:		6
			color:				{ styling.text_color }
		symbol font:
			name:				{ styling.mana_symbols }
			size:				18
			scale down to:		6
		line height hard:	1.1
		line height line:	1.6
		line height soft:	0.75
		line height hard max:	1.3
		line height line max:	1.7
		line height soft max:	0.75
	level 4 text:
		left:				{ 441	+ text_offset(0, counter: 4) - text_offset(2, counter: 4) }
		top:				{ 508	+ text_offset(1, counter: 4) - text_offset(3, counter: 4) }
		width:				{ 175	+ 2*text_offset(2, counter: 4) }
		height:				{ 59	+ 2*text_offset(3, counter: 4) }
		z index:			400
		alignment:			middle center shrink-overflow
		font:
			name:				{ if styling.text_font == "" then "HanleyPro-Sans" else styling.text_font }
			size:				18
			scale down to:		6
			color:				{ styling.text_color }
		symbol font:
			name:				{ styling.mana_symbols }
			size:				18
			scale down to:		6
		line height hard:	1.1
		line height line:	1.6
		line height soft:	0.75
		line height hard max:	1.3
		line height line max:	1.7
		line height soft max:	0.75
	level 5 text:
		left:				{ 128	+ text_offset(0, counter: 5) - text_offset(2, counter: 5) }
		top:				{ 820	+ text_offset(1, counter: 5) - text_offset(3, counter: 5) }
		width:				{ 175	+ 2*text_offset(2, counter: 5) }
		height:				{ 59	+ 2*text_offset(3, counter: 5) }
		z index:			400
		alignment:			middle center shrink-overflow
		font:
			name:				{ if styling.text_font == "" then "HanleyPro-Sans" else styling.text_font }
			size:				18
			scale down to:		6
			color:				{ styling.text_color }
		symbol font:
			name:				{ styling.mana_symbols }
			size:				18
			scale down to:		6
		line height hard:	1.1
		line height line:	1.6
		line height soft:	0.75
		line height hard max:	1.3
		line height line max:	1.7
		line height soft max:	0.75
	level 6 text:
		left:				{ 441	+ text_offset(0, counter: 6) - text_offset(2, counter: 6) }
		top:				{ 820	+ text_offset(1, counter: 6) - text_offset(3, counter: 6) }
		width:				{ 175	+ 2*text_offset(2, counter: 6) }
		height:				{ 59	+ 2*text_offset(3, counter: 6) }
		z index:			400
		alignment:			middle center shrink-overflow
		font:
			name:				{ if styling.text_font == "" then "HanleyPro-Sans" else styling.text_font }
			size:				18
			scale down to:		6
			color:				{ styling.text_color }
		symbol font:
			name:				{ styling.mana_symbols }
			size:				18
			scale down to:		6
		line height hard:	1.1
		line height line:	1.6
		line height soft:	0.75
		line height hard max:	1.3
		line height line max:	1.7
		line height soft max:	0.75
	counter:
		left:				{ 144	+ symbol_offset(0, counter: 1) - symbol_offset(2, counter: 1) }
		top:				{ 88	+ symbol_offset(1, counter: 1) - symbol_offset(3, counter: 1) + (if card.counter == "+1/+1" or card.counter == "-1/-1" then 35 else 0) }
		width:				{ 143	+ 2*symbol_offset(2, counter: 1) }
		height:				{ 143	+ 2*symbol_offset(3, counter: 1) }
		z index:			300
		popup style:		in place
		render style:		image
		include file:		/magic.mse-game/counters/menu_choice_images
		choice images:
			custom:			{ if contains(styling.symbol_1_custom_image_location, match: ".png") then "/magic-mainframe-extras.mse-include/" + styling.symbol_1_custom_image_location else "/magic-modules.mse-include/counters/none.png" }
		image:				{ counter_image(field: 1) }
	counter 2:
		left:				{ 457	+ symbol_offset(0, counter: 2) - symbol_offset(2, counter: 2) }
		top:				{ 88	+ symbol_offset(1, counter: 2) - symbol_offset(3, counter: 2) + (if card.counter_2 == "+1/+1" or card.counter_2 == "-1/-1" then 35 else 0) }
		width:				{ 143	+ 2*symbol_offset(2, counter: 2) }
		height:				{ 143	+ 2*symbol_offset(3, counter: 2) }
		z index:			300
		popup style:		in place
		render style:		image
		include file:		/magic.mse-game/counters/menu_choice_images
		choice images:
			custom:			{ if contains(styling.symbol_2_custom_image_location, match: ".png") then "/magic-mainframe-extras.mse-include/" + styling.symbol_2_custom_image_location else "/magic-modules.mse-include/counters/none.png" }
		image:				{ counter_image(field: 2) }
	counter 3:
		left:				{ 144	+ symbol_offset(0, counter: 3) - symbol_offset(2, counter: 3) }
		top:				{ 400	+ symbol_offset(1, counter: 3) - symbol_offset(3, counter: 3) + (if card.counter_3 == "+1/+1" or card.counter_3 == "-1/-1" then 35 else 0) }
		width:				{ 143	+ 2*symbol_offset(2, counter: 3) }
		height:				{ 143	+ 2*symbol_offset(3, counter: 3) }
		z index:			300
		popup style:		in place
		render style:		image
		include file:		/magic.mse-game/counters/menu_choice_images
		choice images:
			custom:			{ if contains(styling.symbol_3_custom_image_location, match: ".png") then "/magic-mainframe-extras.mse-include/" + styling.symbol_3_custom_image_location else "/magic-modules.mse-include/counters/none.png" }
		image:				{ counter_image(field: 3) }
	counter 4:
		left:				{ 457	+ symbol_offset(0, counter: 4) - symbol_offset(2, counter: 4) }
		top:				{ 400	+ symbol_offset(1, counter: 4) - symbol_offset(3, counter: 4) + (if card.counter_4 == "+1/+1" or card.counter_4 == "-1/-1" then 35 else 0) }
		width:				{ 143	+ 2*symbol_offset(2, counter: 4) }
		height:				{ 143	+ 2*symbol_offset(3, counter: 4) }
		z index:			300
		popup style:		in place
		render style:		image
		include file:		/magic.mse-game/counters/menu_choice_images
		choice images:
			custom:			{ if contains(styling.symbol_4_custom_image_location, match: ".png") then "/magic-mainframe-extras.mse-include/" + styling.symbol_4_custom_image_location else "/magic-modules.mse-include/counters/none.png" }
		image:				{ counter_image(field: 4) }
	counter 5:
		left:				{ 144	+ symbol_offset(0, counter: 5) - symbol_offset(2, counter: 5) }
		top:				{ 712	+ symbol_offset(1, counter: 5) - symbol_offset(3, counter: 5) + (if card.counter_5 == "+1/+1" or card.counter_5 == "-1/-1" then 35 else 0) }
		width:				{ 143	+ 2*symbol_offset(2, counter: 5) }
		height:				{ 143	+ 2*symbol_offset(3, counter: 5) }
		z index:			300
		popup style:		in place
		render style:		image
		include file:		/magic.mse-game/counters/menu_choice_images
		choice images:
			custom:			{ if contains(styling.symbol_5_custom_image_location, match: ".png") then "/magic-mainframe-extras.mse-include/" + styling.symbol_5_custom_image_location else "/magic-modules.mse-include/counters/none.png" }
		image:				{ counter_image(field: 5) }
	counter 6:
		left:				{ 457	+ symbol_offset(0, counter: 6) - symbol_offset(2, counter: 6) }
		top:				{ 712	+ symbol_offset(1, counter: 6) - symbol_offset(3, counter: 6) + (if card.counter_6 == "+1/+1" or card.counter_6 == "-1/-1" then 35 else 0) }
		width:				{ 143	+ 2*symbol_offset(2, counter: 6) }
		height:				{ 143	+ 2*symbol_offset(3, counter: 6) }
		z index:			300
		popup style:		in place
		render style:		image
		include file:		/magic.mse-game/counters/menu_choice_images
		choice images:
			custom:			{ if contains(styling.symbol_6_custom_image_location, match: ".png") then "/magic-mainframe-extras.mse-include/" + styling.symbol_6_custom_image_location else "/magic-modules.mse-include/counters/none.png" }
		image:				{ counter_image(field: 6) }
	#### Pasted from information module
	set code:
		angle:				{ if face_is_rotated(1) then -90 else 0 }
		left:
			script:
				if face_is_rotated(1) then
				(
					24 * face_coordinates_map(1).width/523 + face_coordinates_map(1).left - information_offset_top_1()
				) else (
					24 * face_coordinates_map(1).width/375 + face_coordinates_map(1).left + information_codes_offset_left_1()
				)
		top:
			script:
				if face_is_rotated(1) then
				(
					24 * face_coordinates_map(1).height/375 + face_coordinates_map(1).top + information_codes_offset_left_1()
				) else (
					499 * face_coordinates_map(1).height/523 + face_coordinates_map(1).top + information_offset_top_1()
				)
		width:
			script:
				if face_is_rotated(1) then
				(
					40 * face_coordinates_map(1).width/523
				) else (
					40 * face_coordinates_map(1).width/375
				)
		height:
			script:
				if face_is_rotated(1) then
				(
					if information_disabled_1() then 0 else 10 * face_coordinates_map(1).height/375
				) else (
					if information_disabled_1() then 0 else 10 * face_coordinates_map(1).height/523
				)
		visible:			{ not information_disabled_1() }
		alignment:			middle left
		font:
			name:				Relay-Medium
			size:				{ 7 * face_coordinates_map(1).height/(if face_is_rotated(1) then 375 else 523) }
			color:				{ styling.copyright_text_color or else set.copyright_text_color }
			weight:				bold
		z index:			900
	set language:
		angle:				{ if face_is_rotated(1) then -90 else 0 }
		left:
			script:
				if face_is_rotated(1) then
				(
					14 * face_coordinates_map(1).width/523 + face_coordinates_map(1).left - information_offset_top_1()
				) else (
					24 * face_coordinates_map(1).width/375 + face_coordinates_map(1).left + information_codes_offset_left_1()
				)
		top:
			script:
				if face_is_rotated(1) then
				(
					24 * face_coordinates_map(1).height/375 + face_coordinates_map(1).top + information_codes_offset_left_1()
				) else (
					509 * face_coordinates_map(1).height/523 + face_coordinates_map(1).top + information_offset_top_1()
				)
		width:
			script:
				if face_is_rotated(1) then
				(
					code := if is_masterpiece() then set.masterpiece_set_code else set.set_code
					if card.additional_credit_brush == "none" or (not set.adaptive_language_height) or code == "" then 0
					else 40 * face_coordinates_map(1).width/523
				) else (
					code := if is_masterpiece() then set.masterpiece_set_code else set.set_code
					if card.additional_credit_brush == "none" or (not set.adaptive_language_height) or code == "" then 0
					else 40 * face_coordinates_map(1).width/375
				)
		height:
			script:
				if face_is_rotated(1) then
				(
					if information_disabled_1() then 0 else 10 * face_coordinates_map(1).height/375
				) else (
					if information_disabled_1() then 0 else 10 * face_coordinates_map(1).height/523
				)
		visible:			{ not information_disabled_1() }
		alignment:			middle left
		font:
			name:				Relay-Medium
			size:				{ 7 * face_coordinates_map(1).height/(if face_is_rotated(1) then 375 else 523) }
			color:				{ styling.copyright_text_color or else set.copyright_text_color }
			weight:				bold
		z index:			900
	card code:
		angle:				{ if face_is_rotated(1) then -90 else 0 }
		left:
			script:
				if face_is_rotated(1) then
				(
					34 * face_coordinates_map(1).width/523 + face_coordinates_map(1).left - information_offset_top_1()
				) else (
					24 * face_coordinates_map(1).width/375 + face_coordinates_map(1).left + information_codes_offset_left_1()
				)
		top:
			script:
				if face_is_rotated(1) then
				(
					24 * face_coordinates_map(1).height/375 + face_coordinates_map(1).top + information_codes_offset_left_1()
				) else (
					489 * face_coordinates_map(1).height/523 + face_coordinates_map(1).top + information_offset_top_1()
				)
		width:
			script:
				if face_is_rotated(1) then
				(
					120 * face_coordinates_map(1).width/523
				) else (
					120 * face_coordinates_map(1).width/375
				)
		height:
			script:
				if face_is_rotated(1) then
				(
					if information_disabled_1() then 0 else 10 * face_coordinates_map(1).height/375
				) else (
					if information_disabled_1() then 0 else 10 * face_coordinates_map(1).height/523
				)
		visible:			{ not information_disabled_1() }
		alignment:			middle left
		font:
			name:				Relay-Medium
			size:				{ 7 * face_coordinates_map(1).height/(if face_is_rotated(1) then 375 else 523) }
			color:				{ styling.copyright_text_color or else set.copyright_text_color }
			weight:				bold
		z index:			900
	partition select:
		angle:				{ if face_is_rotated(1) then -90 else 0 }
		left:
			script:
				if face_is_rotated(1) then
				(
					34 * face_coordinates_map(1).width/523 + face_coordinates_map(1).left - information_offset_top_1()
				) else (
					24 * face_coordinates_map(1).width/375 + face_coordinates_map(1).left + information_codes_offset_left_1()
				)
		top:
			script:
				if face_is_rotated(1) then
				(
					24 * face_coordinates_map(1).height/375 + face_coordinates_map(1).top + information_codes_offset_left_1()
				) else (
					489 * face_coordinates_map(1).height/523 + face_coordinates_map(1).top + information_offset_top_1()
				)
		width:
			script:
				if not use_auto_numbers() then 0
				else if face_is_rotated(1) then
				(
					35 * face_coordinates_map(1).width/523
				) else (
					35 * face_coordinates_map(1).width/375
				)
		height:
			script:
				if face_is_rotated(1) then
				(
					if information_disabled_1() then 0 else 10 * face_coordinates_map(1).height/375
				) else (
					if information_disabled_1() then 0 else 10 * face_coordinates_map(1).height/523
				)
		visible:			{ not information_disabled_1() and use_auto_numbers() }
		popup style:		menu
		render style:		hidden
		z index:			1100
	copyright:
		angle:				{ if face_is_rotated(1) then -90 else 0 }
		right:
			script:
				if face_is_rotated(1) then
				(
					(if card.pt != "" or card.loyalty != "" then 21 + information_secondary_offset_pt_left_1() else if card.secondary_copyright != "" then 23 else 33) * face_coordinates_map(1).width/523 +
					face_coordinates_map(1).left - information_offset_top_1()
				) else (
					351 * face_coordinates_map(1).width/375 + face_coordinates_map(1).left + information_copyright_offset_right_1()
				)
		top:
			script:
				if face_is_rotated(1) then
				(
					351 * face_coordinates_map(1).height/375 + face_coordinates_map(1).top + information_copyright_offset_right_1()
				) else (
					(if card.pt != "" or card.loyalty != "" then 502 + information_copyright_offset_pt_top_1() else if card.secondary_copyright != "" then 500 else 490) * face_coordinates_map(1).height/523 +
					face_coordinates_map(1).top + information_offset_top_1()
				)
		width:
			script:
				if face_is_rotated(1) then
				(
					if set.automatic_copyright then 0 else 140 * face_coordinates_map(1).width/523
				) else (
					if set.automatic_copyright then 0 else 140 * face_coordinates_map(1).width/375
				)
		height:
			script:
				if face_is_rotated(1) then
				(
					if information_disabled_1() then 0 else 10 * face_coordinates_map(1).height/375
				) else (
					if information_disabled_1() then 0 else 10 * face_coordinates_map(1).height/523
				)
		visible:			{ not information_disabled_1() }
		alignment:			middle right shrink-overflow
		font:
			name:				MPlantin
			size:				{ 6.5 * face_coordinates_map(1).height/(if face_is_rotated(1) then 375 else 523) }
			color:				{ styling.copyright_text_color or else set.copyright_text_color }
			weight:				bold
		z index:			900
	auto copyright:
		angle:				{ if face_is_rotated(1) then -90 else 0 }
		right:
			script:
				if face_is_rotated(1) then
				(
					(if card.pt != "" or card.loyalty != "" then 21 + information_secondary_offset_pt_left_1() else if card.secondary_copyright != "" then 23 else 33) * face_coordinates_map(1).width/523 + face_coordinates_map(1).left - information_offset_top_1()
				) else (
					351 * face_coordinates_map(1).width/375 + face_coordinates_map(1).left + information_copyright_offset_right_1()
				)
		top:
			script:
				if face_is_rotated(1) then
				(
					351 * face_coordinates_map(1).height/375 + face_coordinates_map(1).top + information_copyright_offset_right_1()
				) else (
					(if card.pt != "" or card.loyalty != "" then 502 + information_copyright_offset_pt_top_1() else if card.secondary_copyright != "" then 500 else 490) * face_coordinates_map(1).height/523 + face_coordinates_map(1).top + information_offset_top_1()
				)
		width:
			script:
				if face_is_rotated(1) then
				(
					if set.automatic_copyright then 140 * face_coordinates_map(1).width/523 else 0
				) else (
					if set.automatic_copyright then 140 * face_coordinates_map(1).width/375 else 0
				)
		height:
			script:
				if face_is_rotated(1) then
				(
					if information_disabled_1() then 0 else 10 * face_coordinates_map(1).height/375
				) else (
					if information_disabled_1() then 0 else 10 * face_coordinates_map(1).height/523
				)
		visible:			{ not information_disabled_1() }
		alignment:			middle right shrink-overflow
		font:
			name:				MPlantin
			size:				{ 6.5 * face_coordinates_map(1).height/(if face_is_rotated(1) then 375 else 523) }
			color:				{ styling.copyright_text_color or else set.copyright_text_color }
			weight:				bold
		z index:			900
	secondary copyright:
		angle:				{ if face_is_rotated(1) then -90 else 0 }
		left:
			script:
				if face_is_rotated(1) then
				(
					33 * face_coordinates_map(1).width/523 + face_coordinates_map(1).left - information_offset_top_1()
				) else (
					needed := (255 + information_secondary_offset_pt_left_1() - if length(card.secondary_copyright) > 9 then 45 else if length(card.secondary_copyright) > 6 then 25 else if length(card.secondary_copyright) > 4 then 10 else 0) * face_coordinates_map(1).width/375 + face_coordinates_map(1).left
					aligned := 351 * face_coordinates_map(1).width/375 + information_copyright_offset_right_1() - (if set.automatic_copyright then card_style.auto_copyright.content_width else card_style.copyright.content_width) + face_coordinates_map(1).left
					max(min(needed, aligned), 211 * face_coordinates_map(1).width/375)
				)
		top:
			script:
				if face_is_rotated(1) then
				(
					211 * face_coordinates_map(1).height/375 + face_coordinates_map(1).top + information_copyright_offset_right_1()
				) else (
					490 * face_coordinates_map(1).height/523 + face_coordinates_map(1).top + information_offset_top_1()
				)
		width:
			script:
				if face_is_rotated(1) then
				(
					140 * face_coordinates_map(1).width/523
				) else (
					needed := (255 + information_secondary_offset_pt_left_1() - if length(card.secondary_copyright) > 9 then 45 else if length(card.secondary_copyright) > 6 then 25 else if length(card.secondary_copyright) > 4 then 10 else 0) * face_coordinates_map(1).width/375 + face_coordinates_map(1).left
					aligned := 351 * face_coordinates_map(1).width/375 + information_copyright_offset_right_1() - (if set.automatic_copyright then card_style.auto_copyright.content_width else card_style.copyright.content_width) + face_coordinates_map(1).left
					left := max(min(needed, aligned), 211 * face_coordinates_map(1).width/375)
					right := (if card.pt != "" then 279 + information_secondary_offset_pt_left_1() else if card.loyalty != "" then 295 + information_secondary_offset_pt_left_1() else 351) * face_coordinates_map(1).width/375 + face_coordinates_map(1).top + information_copyright_offset_right_1()
					right - left
				)
		height:
			script:
				if face_is_rotated(1) then
				(
					if information_disabled_1() then 0 else 10 * face_coordinates_map(1).height/375
				) else (
					if information_disabled_1() then 0 else 10 * face_coordinates_map(1).height/523
				)
		visible:			{ not information_disabled_1() }
		alignment:			{ if card.pt != "" or card.loyalty != "" then "middle left shrink-overflow" else "middle right shrink-overflow" }
		font:
			name:				MPlantin
			size:				{ 6.5 * face_coordinates_map(1).height/(if face_is_rotated(1) then 375 else 523) }
			color:				{ styling.copyright_text_color or else set.copyright_text_color }
			weight:				bold
		z index:			900

############################################################## Extra card fields

extra card field:
	type:				color
	name:				background
	editable:			false
	save value:			false
	show statistics:	false
	script:				styling.background_color
extra card field:
	type:				color
	name:				inner lines
	editable:			false
	save value:			false
	show statistics:	false
	script:				styling.inner_line_color
extra card field:
	type:				color
	name:				outer lines
	editable:			false
	save value:			false
	show statistics:	false
	script:				styling.outer_line_color
extra card field:
	type:				choice
	name:				foil layer
	editable:			false
	save value:			false
	show statistics:	false
	choice:				foil layer

extra card style:
	background:
		left:				0
		top:				0
		width:				{ stylesheet.card_width }
		height:				{ stylesheet.card_height }
		z index:			0
	inner lines:
		left:				0
		top:				0
		width:				{ stylesheet.card_width }
		height:				{ stylesheet.card_height }
		z index:			100
		mask:				inner_lines_mask.png
	outer lines:
		left:				0
		top:				0
		width:				{ stylesheet.card_width }
		height:				{ stylesheet.card_height }
		z index:			200
		mask:				outer_lines_mask.png
	foil layer:
		left:				0
		top:				0
		width:				{ stylesheet.card_width }
		height:				{ stylesheet.card_height }
		z index:			3000
		visible:			{ styling.overlay != "none" and styling.overlay != "" }
		render style:		image
		image:				{ if styling.overlay == "" then "" else styling.overlay + "/overlay.png" }
