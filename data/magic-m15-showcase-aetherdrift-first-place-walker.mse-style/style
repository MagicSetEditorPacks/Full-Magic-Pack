mse version:		2.5.0
game:				magic
short name:			First-Place PW
full name:			Aetherdrift Showcase
icon:				card_sample.png
position hint:		095

version:			2024-10-01
depends on:
	package:			magic.mse-game
	version:			2014-06-25
depends on:
	package:			magic-mana-large.mse-symbol-font
	version:			2007-09-23
depends on:
	package:			magic-mana-small.mse-symbol-font
	version:			2007-09-23
depends on:
	package:			magic-modules.mse-include
	version:			2024-10-01
depends on:
	package:			magic-mainframe-extras.mse-include
	version:			2007-09-23

card width:			744
card height:		1039
card dpi:			297

### blanks by GenevensiS
### code by GenevensiS

############################################################## Extra scripts

init script:
	swap_fonts_body_default :=
	[
		name: {"MPlantin"},
		size: {26.0},
		color: {styling.rule_text_color},
		vertical: {0},
		italic: {"MPlantin-Italic"}
	]
	
	move_typeline :=	{ if use_tall_walker_frame_1() then 70 else 0 }
	
	typeline_offset_top_1 := { - move_typeline() }
	swap_fonts_type_default :=
	[
		name: {"Beleren Bold"},
		size: {26.0},
		color: {"white"},
		vertical: {0},
		italic: {""}
	]
	
	transform_symbol_disabled_1 := { true }
	card_symbol_offset_top_1 := { 1 }
	card_symbol_offset_left_1 := { 1 }
	nameline_offset_top_1 := { 1 }
	nameline_offset_top_1 := { -15 }
	swap_fonts_name_default :=
	[
		name: {"Beleren Bold"},
		size: {30.0},
		color: {"white"},
		vertical: {0},
		italic: {""}
	]
	
	is_promo :=			{ styling.promo }
	is_unsorted :=		{ styling.remove_from_autocount }
	
	chop_top :=			{ split := split_comma(styling.chop_text_box); if length(split) > 0 and split[0] != "" and split[0] != "-" then clamp(split[0], maximum:500, minimum:-500) else 0 }
	chop_bottom :=		{ split := split_comma(styling.chop_text_box); if length(split) > 1 and split[1] != "" and split[1] != "-" then clamp(split[1], maximum:500, minimum:-500) else 0 }
	chop_right :=		{ split := split_comma(styling.chop_text_box); if length(split) > 2 and split[2] != "" and split[2] != "-" then clamp(split[2], maximum:500, minimum:-500) else 0 }
	
	popout_left :=		{ split := split_comma(styling.popout_art_coordinates); if length(split) > 3 and split.0 != "" then clamp(split.0, minimum: -500,	maximum: 1500) else 0 }
	popout_top :=		{ split := split_comma(styling.popout_art_coordinates); if length(split) > 3 and split.1 != "" then clamp(split.1, minimum: -500,	maximum: 2000) else 0 }
	popout_width :=		{ split := split_comma(styling.popout_art_coordinates); if length(split) > 3 and split.2 != "" then clamp(split.2, minimum: 0,		maximum: 1500) else 0 }
	popout_height :=	{ split := split_comma(styling.popout_art_coordinates); if length(split) > 3 and split.3 != "" then clamp(split.3, minimum: 0,		maximum: 2000) else 0 }
	
	art_left :=		{ if styling.stretch_art_to_whole_card or contains(styling.layout, match: "extended art") then 0						else if use_tall_walker_frame_1() then 54	else 53 }
	art_top :=		{ if styling.stretch_art_to_whole_card or contains(styling.layout, match: "extended art") then 0						else if use_tall_walker_frame_1() then 106	else 106 }
	art_width :=	{ if styling.stretch_art_to_whole_card or contains(styling.layout, match: "extended art") then stylesheet.card_width	else if use_tall_walker_frame_1() then 635	else 637 }
	art_height :=	{ if styling.stretch_art_to_whole_card or contains(styling.layout, match: "extended art") then stylesheet.card_height	else if use_tall_walker_frame_1() then 398	else 468 }
	
	art_mask :=
	{
		base :=	"image_mask" +
				(if use_tall_walker_frame_1() then "_tall" else "") +
				(if contains(styling.layout, match: "extended art") then "_borderless" else "") +
				".png"
		crop(base, offset_x: art_left(), offset_y: art_top(), width: art_width(), height: art_height())
	}
	
	border_color_default := { rgb(246,193,19) }
	
	loyalty_boxes_image_folder := { "/magic-m15-showcase-aetherdrift-first-place-walker.mse-style/loyalty/" }
	
	loyalty_cost_offset_text_margin_1 := { 9 }
	
	loyalty_stripe_alpha_default := { 0 }
	loyalty_textbox_background_alpha_default := { 0 }
	
	loyalty_textbox_mask_1 :=
	{
		"textbox_mask" +
		(if use_tall_walker_frame_1() then "_tall" else "") +
		(if is_stamped() then "_stamp" else "") +
		".png"
	}
	
	include file: /magic-modules.mse-include/loyalty/init_script

############################################################## Extra style options

styling field:
	type:			text
	name:			popout art coordinates
	description:	The coordinates for the popout image field, formatted as "left,top,width,height". Used to make the illustration jump in front of the frame.
styling field:
	type:			boolean
	name:			stretch art to whole card
	description:	Make the image span the whole card instead of just the visible part. Use this to help make popout effects.
	initial:		no
styling field:
	type:			choice
	name:			layout
	description:	What should the shape of the card be?
	choice:			normal
	choice:			extended art
	#choice:			rude riders extended art
	initial:		normal

include file: /magic-modules.mse-include/loyalty/styling_formatting

styling field:
	type:			text
	name:			textbox opacity percentage
	description:	Set the opacity percentage for textboxes. Opaque is 100, transparent is 0, default is 0.
styling field:
	type:			color
	name:			textbox color
	description:	Use the specified color for the textbox background.
	choice:
		name:			black
		color:			rgb(0,0,0)
	choice:
		name:			white
		color:			rgb(255,255,255)
	initial:		rgb(255,255,255)
styling field:
	type:			text
	name:			stripes opacity percentage
	description:	Set the opacity percentage for stripes separating abilities. Opaque is 100, transparent is 0, default is 0.
styling field:
	type:			color
	name:			stripes color
	description:	Use the specified color for the textbox background.
	choice:
		name:			black
		color:			rgb(0,0,0)
	choice:
		name:			white
		color:			rgb(255,255,255)
	initial:		rgb(255,255,255)
styling field:
	type:			color
	name:			rule text color
	description:	Use the specified color for the rule text.
	choice:
		name:			black
		color:			rgb(0,0,0)
	choice:
		name:			white
		color:			rgb(255,255,255)
	initial:		rgb(255,255,255)

include file: /magic-modules.mse-include/texts/styling_fields

include file: /magic-modules.mse-include/rarities/styling_fields

include file: /magic-modules.mse-include/watermarks/styling_fields

styling field:
	type:			package choice
	name:			overlay
	description:	Should there be an overlay applied, such as foil?
	match:			magic-overlay-*.mse-include
	required:		false
styling field:
	type:			boolean
	name:			remove from autocount
	description:	Removes the automatic card number for specific cards, to allow for overcounted cards like in Planeswalker Decks.
	initial:		no
styling field:
	type:			boolean
	name:			promo
	description:	Is this card a promo card, with the "P" rarity?
	initial:		no
styling field:
	type:			color
	name:			copyright text color
	description:	Color of the copyright, illustrator, card number, and set code text.
	choice:			white
	choice:			black
	initial:		black

include file: /magic-modules.mse-include/symbol-fonts/styling_fields

include file: /magic-modules.mse-include/fonts/styling_fields

############################################################## Card fields

include file: /magic-modules.mse-include/loyalty/card_fields

include file: /magic-modules.mse-include/information/card_fields

include file: /magic-modules.mse-include/stamps/card_fields

include file: /magic-modules.mse-include/corners/card_fields

include file: /magic-modules.mse-include/watermarks/card_fields

include file: /magic-modules.mse-include/typelines/card_fields

include file: /magic-modules.mse-include/namelines/card_fields

card style:
	############################# Background stuff
	border color:
		left:				0
		top:				0
		width:				{ stylesheet.card_width }
		height:				{ stylesheet.card_height }
		z index:			200
		mask:				{ if contains(styling.layout, match: "extended art") then "border_mask_borderless.png" else "border_mask.png" }
	############################# Image
	image:
		left:				{ art_left() }
		top:				{ art_top() }
		width:				{ art_width() }
		height:				{ art_height() }
		z index:			100
		mask:				{ art_mask() }
	mainframe image:
		left:				{ popout_left() }
		top:				{ popout_top() }
		width:				{ popout_width() }
		height:				{ popout_height() }
		z index:			1010
	############################# Text box
	text:
		left:				97
		top:				{ 653 - move_typeline() + chop_top() + (if is_stamped() then 4 else 0) + body_font_vertical() }
		right:				{ 677 - chop_right() }
		bottom:				{ 947 - chop_bottom() - if is_stamped() then 7 else 0 }
		z index:			900
		line height hard:	{ if is_modal(card.rule_text) then 0.9 else 1.2 }
		line height line:	1.5
		line height soft:	0.9
		line height hard max:	{ if is_modal(card.rule_text) then 1.0 else 1.3 }
		line height line max:	2.2
		alignment:
			script:
				if (styling.center_text == "short text only" and
				   not contains(match:"\n", card.rule_text) and
				   card.flavor_text == "<i-flavor></i-flavor>" and
				   card_style.text.content_lines <= 2) or
				   styling.center_text == "always"
				then "middle center"
				else "middle left"
		font:
			name:				{ body_font() }
			italic name:		{ body_font_italic() }
			size:				{ body_font_size() }
			scale down to:		12
			color:				{ body_font_color() }
		symbol font:
			name:				{ styling.text_box_mana_symbols }
			size:				{ body_font_size() }
			scale down to:		12

############################################################## Extra card fields

extra card field:
	type:				choice
	name:				card background
	editable:			false
	save value:			false
	show statistics:	false
	choice:				card background
extra card field:
	type:				choice
	name:				card stamp rim
	script:				card.card_color
	editable:			false
	save value:			false
	show statistics:	false
extra card field:
	type:				color
	name:				card stamp border
	script:				card.border_color
	editable:			false
	save value:			false
	show statistics:	false
extra card field:
	type:				choice
	name:				foil layer
	editable:			false
	save value:			false
	show statistics:	false
	choice:				foil layer

extra card style:
	card background:
		left:				0
		top:				0
		width:				{ stylesheet.card_width }
		height:				{ stylesheet.card_height }
		z index:			220
		render style:		image
		image:
			script:
				"card" +
				(if use_tall_walker_frame_1() then "_tall" else "") +
				(if contains(styling.layout, match: "extended art") then "_borderless" else "") +
				".png"
	card stamp rim:
		left:				0
		top:				0
		width:				{ stylesheet.card_width }
		height:				{ stylesheet.card_height }
		z index:			230
		visible:			{ not is_stamped() }
		render style:		image
		image:				nonstamp.png
	card stamp border:
		left:				0
		top:				0
		width:				{ stylesheet.card_width }
		height:				{ stylesheet.card_height }
		z index:			210
		visible:			{ is_stamped() and not contains(styling.layout, match: "extended art") }
		mask:				border_stamp_mask.png
	foil layer:
		left:				0
		top:				0
		width:				{ stylesheet.card_width }
		height:				{ stylesheet.card_height }
		z index:			1050
		visible:			{ styling.overlay != "none" and styling.overlay != "" }
		render style:		image
		image:				{ if styling.overlay == "" then "" else styling.overlay + "/overlay.png" }
